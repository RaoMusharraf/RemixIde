{
	"id": "7e1a210d8bcacdc3239e52647b2180b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dispatch_AI/mintStones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract Dispatch is ERC721, ERC721Pausable, Ownable, ERC721Burnable {\n\n    using Counters for Counters.Counter;\n    Counters.Counter public tokenIdCounter;\n    Counters.Counter public URICount;\n    mapping(address => mapping(uint256 => uint256)) public TokenId;\n    mapping(address => uint256) public count;\n\n    mapping (uint256 => Admin) public URI;\n\n    struct Admin {\n        string URI;\n        uint capAmount;\n        uint Count;\n    }\n\n\n    constructor(address initialOwner)\n        ERC721(\"Dispatch AI\", \"DPAI\")\n        Ownable(initialOwner)\n    {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    // ============ AdminEnterData FUNCTIONS ============\n    /* \n        @dev AdminEnterData in this function admin enter data related Cars.\n        @param _uri URI contains data like price & image etc.\n        @param _price is the required amount to buy any NFT.\n    */\n    function EnterData (string memory _uri,uint capAmount) public onlyOwner{\n        URICount.increment();\n        URI[URICount.current()] = Admin(_uri,capAmount,URICount.current());\n    }\n\n    function safeMint(address to) public {\n        uint tokenId = tokenIdCounter.current();\n        _safeMint(to, tokenId);\n        TokenId[to][count[to]] = tokenId;\n        tokenIdCounter.increment();\n        count[to]++;\n    }\n    function getTokenId(address to) public view returns (uint256[] memory) {\n        uint256[] memory myArray = new uint256[](count[to]);\n        for (uint256 i = 0; i < count[to]; i++) {\n            myArray[i] = TokenId[to][i + 1];\n        }\n        return myArray;\n    }\n    function updateTokenId(address _to,uint _tokenId,address _seller) external {\n        TokenId[_to][count[_to] + 1] = _tokenId;\n        uint256[] memory myArray =  getTokenId(_seller);\n        for(uint i=0 ; i < myArray.length ; i++){\n            if(myArray[i] == _tokenId){\n                TokenId[_seller][i+1] = TokenId[_seller][count[_seller]];\n                count[_seller]--;\n            }\n        }\n        count[_to]++;\n    }\n    function _update(address to, uint256 tokenId, address auth)\n        internal\n        override(ERC721, ERC721Pausable)\n        returns (address)\n    {\n        return super._update(to, tokenId, auth);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC721 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC721Pausable is ERC721, Pausable {\n    /**\n     * @dev See {ERC721-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address to,\n        uint256 tokenId,\n        address auth\n    ) internal virtual override whenNotPaused returns (address) {\n        return super._update(to, tokenId, auth);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *setApprovalForAll\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"ERC721Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":\"ERC721Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xab7469fb4d5dbca13494abb44b720b63b62a48d594083312de4865ba50cd80b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334002204a6c9af1bb233295dfae3052ea887c2f1913130fb931fe1b11692319\",\"dweb:/ipfs/Qme5siHWg53YLWpXBb1rBTSRaTVbtWLnYUBa4Pjq2CYFpt\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1625,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP1 0xD9 MULMOD DUP5 CREATE PUSH30 0x2AE340FBD3DD939371721E9292B2B2D882DEE78A3D70E8FA1564736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP1 0xD9 MULMOD DUP5 CREATE PUSH30 0x2AE340FBD3DD939371721E9292B2B2D882DEE78A3D70E8FA1564736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/mintStones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1625,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/mintStones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/mintStones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/mintStones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dispatch_AI/mintStones.sol": {
				"Dispatch": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "capAmount",
									"type": "uint256"
								}
							],
							"name": "EnterData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "TokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "URI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "capAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "Count",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "URICount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "getTokenId",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenIdCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "updateTokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dispatch_AI/mintStones.sol\":426:2730  contract Dispatch is ERC721, ERC721Pausable, Ownable, ERC721Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dispatch_AI/mintStones.sol\":875:983  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Dispatch_AI/mintStones.sol\":963:975  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa8, 0x4469737061746368204149)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x44504149)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x06\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3142:3193   */\n  mstore\n    /* \"#utility.yul\":3115:3133   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Dispatch_AI/mintStones.sol\":875:983  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/Dispatch_AI/mintStones.sol\":426:2730  contract Dispatch is ERC721, ERC721Pausable, Ownable, ERC721Burnable {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_30:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_22:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_23:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_33:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_34:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_25:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_38:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_39:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_37:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_10:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_45\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1850:1947   */\n  tag_46\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_47\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_23\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_50:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_48)\n    /* \"#utility.yul\":2071:2734   */\ntag_49:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_53:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_56:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_48:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2996:3199   */\ntag_27:\n    /* \"contracts/Dispatch_AI/mintStones.sol\":426:2730  contract Dispatch is ERC721, ERC721Pausable, Ownable, ERC721Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dispatch_AI/mintStones.sol\":426:2730  contract Dispatch is ERC721, ERC721Pausable, Ownable, ERC721Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x98bdf6f5\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf1537686\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x98bdf6f5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9c9b68e3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8df9612b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x901e1c01\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x40d097c3\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x4f4accdf\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x4f4accdf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6e0cee09\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x40d097c3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x081812fc\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05d85eda\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/mintStones.sol\":693:733  mapping(address => uint256) public count */\n    tag_4:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":1107:1132   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1095:1097   */\n      0x20\n        /* \"#utility.yul\":1080:1098   */\n      add\n        /* \"contracts/Dispatch_AI/mintStones.sol\":693:733  mapping(address => uint256) public count */\n      tag_43\n        /* \"#utility.yul\":961:1138   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2248:2280   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2230:2281   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2218:2220   */\n      0x20\n        /* \"#utility.yul\":2203:2221   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_43\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_61\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1054:1117  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_61\n      tag_70\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1585:1809  function safeMint(address to) public {... */\n    tag_10:\n      tag_61\n      tag_72\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_11:\n      tag_61\n      tag_75\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_12:\n      tag_61\n      tag_78\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":587:619  Counters.Counter public URICount */\n    tag_13:\n      sload(0x08)\n      tag_45\n      swap1\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      jump(tag_39)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_15:\n      tag_55\n      tag_87\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2087:2519  function updateTokenId(address _to,uint _tokenId,address _seller) external {... */\n    tag_16:\n      tag_61\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_45\n      tag_95\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_61\n      tag_99\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":989:1048  function pause() public onlyOwner {... */\n    tag_19:\n      tag_61\n      tag_101\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_55)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":625:687  mapping(address => mapping(uint256 => uint256)) public TokenId */\n    tag_21:\n      tag_45\n      tag_106\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_106:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":740:777  mapping (uint256 => Admin) public URI */\n    tag_22:\n      tag_109\n      tag_110\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_43\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      tag_51\n      tag_115\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":543:581  Counters.Counter public tokenIdCounter */\n    tag_24:\n      sload(0x07)\n      tag_45\n      swap1\n      dup2\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1395:1579  function EnterData (string memory _uri,uint capAmount) public onlyOwner{... */\n    tag_25:\n      tag_61\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_26:\n      tag_61\n      tag_125\n      calldatasize\n      0x04\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_27:\n      tag_61\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_28:\n      tag_51\n      tag_133\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_29:\n      tag_39\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1814:2082  function getTokenId(address to) public view returns (uint256[] memory) {... */\n    tag_30:\n      tag_141\n      tag_142\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_61\n      tag_147\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_150\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_152\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_156\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_162:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7450:7465   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7432:7466   */\n      mstore\n        /* \"#utility.yul\":7482:7500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7475:7509   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7545:7560   */\n      dup3\n      and\n        /* \"#utility.yul\":7525:7543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7518:7561   */\n      mstore\n        /* \"#utility.yul\":7367:7385   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_173\n        /* \"#utility.yul\":7192:7567   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1054:1117  function unpause() public onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1100:1110  _unpause() */\n      tag_184\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1100:1108  _unpause */\n      tag_185\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1100:1110  _unpause() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1054:1117  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1585:1809  function safeMint(address to) public {... */\n    tag_73:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1632:1644  uint tokenId */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1647:1671  tokenIdCounter.current() */\n      tag_187\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1647:1661  tokenIdCounter */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1647:1671  tokenIdCounter.current() */\n    tag_187:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1632:1671  uint tokenId = tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1681:1703  _safeMint(to, tokenId) */\n      tag_189\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1691:1693  to */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1695:1702  tokenId */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1681:1690  _safeMint */\n      tag_190\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1681:1703  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1713:1724  TokenId[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1713:1720  TokenId */\n      0x09\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1713:1724  TokenId[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1725:1730  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1725:1734  count[to] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1713:1735  TokenId[to][count[to]] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1713:1745  TokenId[to][count[to]] = tokenId */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1755:1781  tokenIdCounter.increment() */\n      tag_191\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1755:1769  tokenIdCounter */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1755:1781  tokenIdCounter.increment() */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1791:1800  count[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1791:1796  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1791:1800  count[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1791:1802  count[to]++ */\n      dup1\n      sload\n      swap2\n      tag_193\n      dup4\n      tag_194\n      jump\t// in\n    tag_193:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1622:1809  {... */\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1585:1809  function safeMint(address to) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":561:875  function burn(uint256 tokenId) public virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":826:868  _update(address(0), tokenId, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":842:843  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":846:853  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2087:2519  function updateTokenId(address _to,uint _tokenId,address _seller) external {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2172:2184  TokenId[_to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2172:2179  TokenId */\n      0x09\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2172:2184  TokenId[_to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2185:2190  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2185:2195  count[_to] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2203:2211  _tokenId */\n      dup5\n      swap3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2172:2184  TokenId[_to] */\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2185:2199  count[_to] + 1 */\n      tag_204\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2198:2199  1 */\n      0x01\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2185:2199  count[_to] + 1 */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2172:2200  TokenId[_to][count[_to] + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2172:2211  TokenId[_to][count[_to] + 1] = _tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2221:2245  uint256[] memory myArray */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2249:2268  getTokenId(_seller) */\n      tag_206\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2260:2267  _seller */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2249:2259  getTokenId */\n      tag_143\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2249:2268  getTokenId(_seller) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2221:2268  uint256[] memory myArray =  getTokenId(_seller) */\n      swap1\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2282:2288  uint i */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2278:2491  for(uint i=0 ; i < myArray.length ; i++){... */\n    tag_207:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2297:2304  myArray */\n      dup2\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2297:2311  myArray.length */\n      mload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2293:2294  i */\n      dup2\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2293:2311  i < myArray.length */\n      lt\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2278:2491  for(uint i=0 ; i < myArray.length ; i++){... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2349:2357  _tokenId */\n      dup4\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2335:2342  myArray */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2343:2344  i */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2335:2345  myArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_211\n      tag_212\n      jump\t// in\n    tag_211:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2335:2357  myArray[i] == _tokenId */\n      sub\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2332:2481  if(myArray[i] == _tokenId){... */\n      tag_213\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2400:2416  TokenId[_seller] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2400:2407  TokenId */\n      0x09\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2400:2416  TokenId[_seller] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2417:2422  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2417:2431  count[_seller] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2400:2432  TokenId[_seller][count[_seller]] */\n      dup6\n      mstore\n      dup1\n      dup4\n      mstore\n      swap1\n      dup5\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2376:2392  TokenId[_seller] */\n      swap5\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2400:2416  TokenId[_seller] */\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2393:2396  i+1 */\n      tag_214\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2393:2394  i */\n      dup5\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2395:2396  1 */\n      0x01\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2393:2396  i+1 */\n      tag_205\n      jump\t// in\n    tag_214:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2376:2397  TokenId[_seller][i+1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2376:2432  TokenId[_seller][i+1] = TokenId[_seller][count[_seller]] */\n      swap4\n      swap1\n      swap4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2450:2464  count[_seller] */\n      dup7\n      and\n      dup4\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2450:2455  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2450:2464  count[_seller] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2450:2466  count[_seller]-- */\n      dup1\n      sload\n      swap2\n      tag_215\n      dup4\n      tag_216\n      jump\t// in\n    tag_215:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2332:2481  if(myArray[i] == _tokenId){... */\n    tag_213:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2314:2317  i++ */\n      0x01\n      add\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2278:2491  for(uint i=0 ; i < myArray.length ; i++){... */\n      jump(tag_207)\n    tag_208:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2500:2510  count[_to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2500:2505  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2500:2510  count[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2500:2512  count[_to]++ */\n      dup1\n      sload\n      swap2\n      tag_217\n      dup4\n      tag_194\n      jump\t// in\n    tag_217:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2162:2519  {... */\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2087:2519  function updateTokenId(address _to,uint _tokenId,address _seller) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_219:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":989:1048  function pause() public onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1033:1041  _pause() */\n      tag_184\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1033:1039  _pause */\n      tag_230\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1033:1041  _pause() */\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":740:777  mapping (uint256 => Admin) public URI */\n    tag_111:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      dup2\n      swap1\n      tag_232\n      swap1\n      tag_156\n      jump\t// in\n    tag_232:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_156\n      jump\t// in\n    tag_233:\n      dup1\n      iszero\n      tag_234\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_235\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_234)\n    tag_235:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_236:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_236\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1395:1579  function EnterData (string memory _uri,uint capAmount) public onlyOwner{... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1476:1496  URICount.increment() */\n      tag_246\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1476:1484  URICount */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1476:1496  URICount.increment() */\n    tag_246:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1532:1572  Admin(_uri,capAmount,URICount.current()) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1538:1542  _uri */\n      dup4\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1532:1572  Admin(_uri,capAmount,URICount.current()) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1543:1552  capAmount */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1532:1572  Admin(_uri,capAmount,URICount.current()) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1553:1571  URICount.current() */\n      tag_247\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1553:1561  URICount */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1553:1571  URICount.current() */\n    tag_247:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1532:1572  Admin(_uri,capAmount,URICount.current()) */\n      swap1\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1509  URI */\n      0x0b\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1529  URI[URICount.current()] */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1510:1528  URICount.current() */\n      tag_248\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1510:1518  URICount */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1510:1528  URICount.current() */\n    tag_248:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1529  URI[URICount.current()] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1572  URI[URICount.current()] = Admin(_uri,capAmount,URICount.current()) */\n      dup2\n      mload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1529  URI[URICount.current()] */\n      dup2\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1572  URI[URICount.current()] = Admin(_uri,capAmount,URICount.current()) */\n      tag_249\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1529  URI[URICount.current()] */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1506:1572  URI[URICount.current()] = Admin(_uri,capAmount,URICount.current()) */\n      tag_250\n      jump\t// in\n    tag_249:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      swap1\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1395:1579  function EnterData (string memory _uri,uint capAmount) public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_260:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_263\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_264)\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_267\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1814:2082  function getTokenId(address to) public view returns (uint256[] memory) {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1936:1945  count[to] */\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1895:1919  uint256[] memory myArray */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1936:1945  count[to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1936:1941  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1936:1945  count[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1867:1883  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1895:1919  uint256[] memory myArray */\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1922:1946  new uint256[](count[to]) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_272\n      jumpi\n      tag_272\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_274\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_274:\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1895:1946  uint256[] memory myArray = new uint256[](count[to]) */\n      swap1\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1961:1970  uint256 i */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1956:2052  for (uint256 i = 0; i < count[to]; i++) {... */\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1980:1989  count[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1980:1985  count */\n      0x0a\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1980:1989  count[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1976:1989  i < count[to] */\n      dup2\n      lt\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1956:2052  for (uint256 i = 0; i < count[to]; i++) {... */\n      iszero\n      tag_276\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2023:2034  TokenId[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2023:2030  TokenId */\n      0x09\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2023:2034  TokenId[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2035:2040  i + 1 */\n      tag_278\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2035:2036  i */\n      dup4\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2039:2040  1 */\n      0x01\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2035:2040  i + 1 */\n      tag_205\n      jump\t// in\n    tag_278:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2023:2041  TokenId[to][i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2010:2017  myArray */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2018:2019  i */\n      dup3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2010:2020  myArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_280\n      tag_212\n      jump\t// in\n    tag_280:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2010:2041  myArray[i] = TokenId[to][i + 1] */\n      mstore\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1991:1994  i++ */\n      0x01\n      add\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1956:2052  for (uint256 i = 0; i < count[to]; i++) {... */\n      jump(tag_275)\n    tag_276:\n      pop\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2068:2075  myArray */\n      swap3\n        /* \"contracts/Dispatch_AI/mintStones.sol\":1814:2082  function getTokenId(address to) public view returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16154:16395  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16217:16224  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16279:16367  if (owner == address(0)) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16325:16356  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1107:1132   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1080:1098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16325:16356  ERC721NonexistentToken(tokenId) */\n      tag_173\n        /* \"#utility.yul\":961:1138   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14435:14555  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14515:14548  _approve(to, tokenId, auth, true) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14524:14526  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14528:14535  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14537:14541  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14543:14547  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14515:14523  _approve */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14515:14548  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2524:2728  function _update(address to, uint256 tokenId, address auth)... */\n    tag_176:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2659:2666  address */\n      0x00\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2689:2721  super._update(to, tokenId, auth) */\n      tag_299\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2703:2705  to */\n      dup5\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2707:2714  tokenId */\n      dup5\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2716:2720  auth */\n      dup5\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2689:2702  super._update */\n      tag_300\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2689:2721  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2682:2721  return super._update(to, tokenId, auth) */\n      swap5\n        /* \"contracts/Dispatch_AI/mintStones.sol\":2524:2728  function _update(address to, uint256 tokenId, address auth)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_308\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2248:2280   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2230:2281   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2218:2220   */\n      0x20\n        /* \"#utility.yul\":2203:2221   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10650:10750  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10717:10743  _safeMint(to, tokenId, \"\") */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10727:10729  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10731:10738  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10717:10743  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10717:10726  _safeMint */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10717:10743  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_320\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_311\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15607:15919  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15714:15736  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15710:15801  if (operator == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15759:15790  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2248:2280   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15759:15790  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15759:15790  ERC721InvalidOperator(operator) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15710:15801  if (operator == address(0)) {... */\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15810:15835  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15810:15828  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15810:15835  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15810:15845  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15810:15856  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15871:15912  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15871:15912  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15871:15912  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15607:15919  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16934:17716  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17050:17064  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17050:17068  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17046:17710  if (to.code.length > 0) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17159  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17124  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17159  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_332\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17139:17143  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17145:17152  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17154:17158  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17159  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_333\n      jump\t// in\n    tag_332:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_334\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_335\n      swap2\n      dup2\n      add\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      0x01\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17084:17700  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_337\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_342\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_341)\n    tag_342:\n      0x60\n      swap2\n      pop\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17397:17403  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17397:17410  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17414:17415  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17397:17415  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17393:17686  if (reason.length == 0) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17446:17471  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2248:2280   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17446:17471  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17446:17471  ERC721InvalidReceiver(to) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17393:17686  if (reason.length == 0) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17638:17644  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17632:17645  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17623:17629  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17619:17621  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17615:17630  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17608:17646  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17084:17700  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_337:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17206:17257  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17202:17332  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17288:17313  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2248:2280   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17288:17313  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17288:17313  ERC721InvalidReceiver(to) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17202:17332  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17160:17346  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16934:17716  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_351\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_352\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_354\n      jumpi\n      tag_354\n      tag_273\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_355\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_355:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_356:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14737:15398  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14897:14906  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14897:14928  emitEvent || auth != address(0) */\n      dup1\n      tag_364\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14910:14928  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14897:14928  emitEvent || auth != address(0) */\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:15353  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14944:14957  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14960:14982  _requireOwned(tokenId) */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14974:14981  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14960:14973  _requireOwned */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14960:14982  _requireOwned(tokenId) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14944:14982  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15110:15128  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15110:15145  auth != address(0) && owner != auth */\n      tag_367\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15141:15145  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15145  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15137  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15145  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15110:15145  auth != address(0) && owner != auth */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15110:15179  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_368\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15179  isApprovedForAll(owner, auth) */\n      tag_369\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15172  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15174:15178  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15166  isApprovedForAll */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15179  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15149:15179  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15110:15179  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15106:15248  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15206:15233  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2248:2280   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15206:15233  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15206:15233  ERC721InvalidApprover(auth) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15106:15248  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15266:15275  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15262:15343  if (emitEvent) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15320:15327  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15316:15318  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15300:15328  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15309:15314  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15300:15328  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15262:15343  if (emitEvent) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14930:15353  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:15353  if (emitEvent || auth != address(0)) {... */\n    tag_365:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15386  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15377  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15386  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15391  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14737:15398  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1120:1324  function _update(... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1259:1266  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_374\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1285:1317  super._update(to, tokenId, auth) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1299:1301  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1303:1310  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1312:1316  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1285:1298  super._update */\n      tag_377\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1285:1317  super._update(to, tokenId, auth) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10971:11153  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11065:11083  _mint(to, tokenId) */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11071:11073  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11075:11082  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11065:11070  _mint */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11065:11083  _mint(to, tokenId) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11093:11146  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11128:11130  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11132:11139  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11141:11145  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11093:11115  _checkOnERC721Received */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11093:11146  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_389\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_404\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_411\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_412\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_411:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_414\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_413:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_415\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9972:10299  function _mint(address to, uint256 tokenId) internal {... */\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10039:10055  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10035:10122  if (to == address(0)) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10078:10111  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10108:10109  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10078:10111  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10078:10111  ERC721InvalidReceiver(address(0)) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10035:10122  if (to == address(0)) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10131:10152  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10155:10187  _update(to, tokenId, address(0)) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10163:10165  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10174  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10185  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10155:10162  _update */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10155:10187  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10131:10187  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10201:10228  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10197:10293  if (previousOwner != address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10251:10282  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10279:10280  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10251:10282  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2230:2281   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10251:10282  ERC721InvalidSender(address(0)) */\n      tag_173\n        /* \"#utility.yul\":2084:2287   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_423\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_424\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_196\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1107:1132   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1080:1098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_173\n        /* \"#utility.yul\":961:1138   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11990:12022   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11972:12023   */\n      mstore\n        /* \"#utility.yul\":12039:12057   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12032:12066   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":11945:11963   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_173\n        /* \"#utility.yul\":11798:12072   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_424:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_299\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_434\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_434\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_434:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_299\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_437:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_41:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_450:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_264\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":592:765   */\n    tag_438:\n        /* \"#utility.yul\":660:680   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":709:740   */\n      dup2\n      and\n        /* \"#utility.yul\":699:741   */\n      dup2\n      eq\n        /* \"#utility.yul\":689:759   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":689:759   */\n    tag_454:\n        /* \"#utility.yul\":592:765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":770:956   */\n    tag_47:\n        /* \"#utility.yul\":829:835   */\n      0x00\n        /* \"#utility.yul\":882:884   */\n      0x20\n        /* \"#utility.yul\":870:879   */\n      dup3\n        /* \"#utility.yul\":861:868   */\n      dup5\n        /* \"#utility.yul\":857:880   */\n      sub\n        /* \"#utility.yul\":853:885   */\n      slt\n        /* \"#utility.yul\":850:902   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":898:899   */\n      0x00\n        /* \"#utility.yul\":895:896   */\n      dup1\n        /* \"#utility.yul\":888:900   */\n      revert\n        /* \"#utility.yul\":850:902   */\n    tag_456:\n        /* \"#utility.yul\":921:950   */\n      tag_264\n        /* \"#utility.yul\":940:949   */\n      dup3\n        /* \"#utility.yul\":921:950   */\n      tag_438\n      jump\t// in\n        /* \"#utility.yul\":1143:1393   */\n    tag_439:\n        /* \"#utility.yul\":1228:1229   */\n      0x00\n        /* \"#utility.yul\":1238:1351   */\n    tag_460:\n        /* \"#utility.yul\":1252:1258   */\n      dup4\n        /* \"#utility.yul\":1249:1250   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      lt\n        /* \"#utility.yul\":1238:1351   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":1328:1339   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1322:1340   */\n      mload\n        /* \"#utility.yul\":1309:1320   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1302:1341   */\n      mstore\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"#utility.yul\":1267:1277   */\n      add\n        /* \"#utility.yul\":1238:1351   */\n      jump(tag_460)\n    tag_462:\n      pop\n      pop\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1367:1383   */\n      swap2\n      add\n        /* \"#utility.yul\":1360:1387   */\n      mstore\n        /* \"#utility.yul\":1143:1393   */\n      jump\t// out\n        /* \"#utility.yul\":1398:1669   */\n    tag_440:\n        /* \"#utility.yul\":1440:1443   */\n      0x00\n        /* \"#utility.yul\":1478:1483   */\n      dup2\n        /* \"#utility.yul\":1472:1484   */\n      mload\n        /* \"#utility.yul\":1505:1511   */\n      dup1\n        /* \"#utility.yul\":1500:1503   */\n      dup5\n        /* \"#utility.yul\":1493:1512   */\n      mstore\n        /* \"#utility.yul\":1521:1597   */\n      tag_464\n        /* \"#utility.yul\":1590:1596   */\n      dup2\n        /* \"#utility.yul\":1583:1587   */\n      0x20\n        /* \"#utility.yul\":1578:1581   */\n      dup7\n        /* \"#utility.yul\":1574:1588   */\n      add\n        /* \"#utility.yul\":1567:1571   */\n      0x20\n        /* \"#utility.yul\":1560:1565   */\n      dup7\n        /* \"#utility.yul\":1556:1572   */\n      add\n        /* \"#utility.yul\":1521:1597   */\n      tag_439\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":1651:1653   */\n      0x1f\n        /* \"#utility.yul\":1630:1645   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1626:1655   */\n      and\n        /* \"#utility.yul\":1617:1656   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1658:1662   */\n      0x20\n        /* \"#utility.yul\":1613:1663   */\n      add\n      swap3\n        /* \"#utility.yul\":1398:1669   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1674:1894   */\n    tag_54:\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1812:1821   */\n      dup2\n        /* \"#utility.yul\":1805:1826   */\n      mstore\n        /* \"#utility.yul\":1786:1790   */\n      0x00\n        /* \"#utility.yul\":1843:1888   */\n      tag_264\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1873:1882   */\n      dup4\n        /* \"#utility.yul\":1869:1887   */\n      add\n        /* \"#utility.yul\":1861:1867   */\n      dup5\n        /* \"#utility.yul\":1843:1888   */\n      tag_440\n      jump\t// in\n        /* \"#utility.yul\":1899:2079   */\n    tag_57:\n        /* \"#utility.yul\":1958:1964   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1999:2008   */\n      dup3\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1986:2009   */\n      sub\n        /* \"#utility.yul\":1982:2014   */\n      slt\n        /* \"#utility.yul\":1979:2031   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2027:2028   */\n      0x00\n        /* \"#utility.yul\":2024:2025   */\n      dup1\n        /* \"#utility.yul\":2017:2029   */\n      revert\n        /* \"#utility.yul\":1979:2031   */\n    tag_468:\n      pop\n        /* \"#utility.yul\":2050:2073   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1899:2079   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2546   */\n    tag_63:\n        /* \"#utility.yul\":2360:2366   */\n      0x00\n        /* \"#utility.yul\":2368:2374   */\n      dup1\n        /* \"#utility.yul\":2421:2423   */\n      0x40\n        /* \"#utility.yul\":2409:2418   */\n      dup4\n        /* \"#utility.yul\":2400:2407   */\n      dup6\n        /* \"#utility.yul\":2396:2419   */\n      sub\n        /* \"#utility.yul\":2392:2424   */\n      slt\n        /* \"#utility.yul\":2389:2441   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2389:2441   */\n    tag_471:\n        /* \"#utility.yul\":2460:2489   */\n      tag_472\n        /* \"#utility.yul\":2479:2488   */\n      dup4\n        /* \"#utility.yul\":2460:2489   */\n      tag_438\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2450:2489   */\n      swap5\n        /* \"#utility.yul\":2536:2538   */\n      0x20\n        /* \"#utility.yul\":2521:2539   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2508:2540   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2292:2546   */\n      jump\t// out\n        /* \"#utility.yul\":2551:2879   */\n    tag_67:\n        /* \"#utility.yul\":2628:2634   */\n      0x00\n        /* \"#utility.yul\":2636:2642   */\n      dup1\n        /* \"#utility.yul\":2644:2650   */\n      0x00\n        /* \"#utility.yul\":2697:2699   */\n      0x60\n        /* \"#utility.yul\":2685:2694   */\n      dup5\n        /* \"#utility.yul\":2676:2683   */\n      dup7\n        /* \"#utility.yul\":2672:2695   */\n      sub\n        /* \"#utility.yul\":2668:2700   */\n      slt\n        /* \"#utility.yul\":2665:2717   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2710:2711   */\n      dup1\n        /* \"#utility.yul\":2703:2715   */\n      revert\n        /* \"#utility.yul\":2665:2717   */\n    tag_474:\n        /* \"#utility.yul\":2736:2765   */\n      tag_475\n        /* \"#utility.yul\":2755:2764   */\n      dup5\n        /* \"#utility.yul\":2736:2765   */\n      tag_438\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2726:2765   */\n      swap3\n      pop\n        /* \"#utility.yul\":2784:2822   */\n      tag_476\n        /* \"#utility.yul\":2818:2820   */\n      0x20\n        /* \"#utility.yul\":2807:2816   */\n      dup6\n        /* \"#utility.yul\":2803:2821   */\n      add\n        /* \"#utility.yul\":2784:2822   */\n      tag_438\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2774:2822   */\n      swap2\n      pop\n        /* \"#utility.yul\":2869:2871   */\n      0x40\n        /* \"#utility.yul\":2858:2867   */\n      dup5\n        /* \"#utility.yul\":2854:2872   */\n      add\n        /* \"#utility.yul\":2841:2873   */\n      calldataload\n        /* \"#utility.yul\":2831:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2551:2879   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2884:3212   */\n    tag_92:\n        /* \"#utility.yul\":2961:2967   */\n      0x00\n        /* \"#utility.yul\":2969:2975   */\n      dup1\n        /* \"#utility.yul\":2977:2983   */\n      0x00\n        /* \"#utility.yul\":3030:3032   */\n      0x60\n        /* \"#utility.yul\":3018:3027   */\n      dup5\n        /* \"#utility.yul\":3009:3016   */\n      dup7\n        /* \"#utility.yul\":3005:3028   */\n      sub\n        /* \"#utility.yul\":3001:3033   */\n      slt\n        /* \"#utility.yul\":2998:3050   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3046:3047   */\n      0x00\n        /* \"#utility.yul\":3043:3044   */\n      dup1\n        /* \"#utility.yul\":3036:3048   */\n      revert\n        /* \"#utility.yul\":2998:3050   */\n    tag_478:\n        /* \"#utility.yul\":3069:3098   */\n      tag_479\n        /* \"#utility.yul\":3088:3097   */\n      dup5\n        /* \"#utility.yul\":3069:3098   */\n      tag_438\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3059:3098   */\n      swap3\n      pop\n        /* \"#utility.yul\":3145:3147   */\n      0x20\n        /* \"#utility.yul\":3134:3143   */\n      dup5\n        /* \"#utility.yul\":3130:3148   */\n      add\n        /* \"#utility.yul\":3117:3149   */\n      calldataload\n        /* \"#utility.yul\":3107:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":3168:3206   */\n      tag_480\n        /* \"#utility.yul\":3202:3204   */\n      0x40\n        /* \"#utility.yul\":3191:3200   */\n      dup6\n        /* \"#utility.yul\":3187:3205   */\n      add\n        /* \"#utility.yul\":3168:3206   */\n      tag_438\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3158:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":2884:3212   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3217:3579   */\n    tag_113:\n        /* \"#utility.yul\":3422:3424   */\n      0x60\n        /* \"#utility.yul\":3411:3420   */\n      dup2\n        /* \"#utility.yul\":3404:3425   */\n      mstore\n        /* \"#utility.yul\":3385:3389   */\n      0x00\n        /* \"#utility.yul\":3442:3487   */\n      tag_482\n        /* \"#utility.yul\":3483:3485   */\n      0x60\n        /* \"#utility.yul\":3472:3481   */\n      dup4\n        /* \"#utility.yul\":3468:3486   */\n      add\n        /* \"#utility.yul\":3460:3466   */\n      dup7\n        /* \"#utility.yul\":3442:3487   */\n      tag_440\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3518:3520   */\n      0x20\n        /* \"#utility.yul\":3503:3521   */\n      dup4\n      add\n        /* \"#utility.yul\":3496:3530   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":3561:3563   */\n      0x40\n        /* \"#utility.yul\":3546:3564   */\n      add\n        /* \"#utility.yul\":3539:3573   */\n      mstore\n        /* \"#utility.yul\":3434:3487   */\n      swap2\n        /* \"#utility.yul\":3217:3579   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3584:3711   */\n    tag_273:\n        /* \"#utility.yul\":3645:3655   */\n      0x4e487b71\n        /* \"#utility.yul\":3640:3643   */\n      0xe0\n        /* \"#utility.yul\":3636:3656   */\n      shl\n        /* \"#utility.yul\":3633:3634   */\n      0x00\n        /* \"#utility.yul\":3626:3657   */\n      mstore\n        /* \"#utility.yul\":3676:3680   */\n      0x41\n        /* \"#utility.yul\":3673:3674   */\n      0x04\n        /* \"#utility.yul\":3666:3681   */\n      mstore\n        /* \"#utility.yul\":3700:3704   */\n      0x24\n        /* \"#utility.yul\":3697:3698   */\n      0x00\n        /* \"#utility.yul\":3690:3705   */\n      revert\n        /* \"#utility.yul\":3716:4348   */\n    tag_441:\n        /* \"#utility.yul\":3781:3786   */\n      0x00\n        /* \"#utility.yul\":3811:3829   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3852:3854   */\n      dup1\n        /* \"#utility.yul\":3844:3850   */\n      dup5\n        /* \"#utility.yul\":3841:3855   */\n      gt\n        /* \"#utility.yul\":3838:3878   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3858:3876   */\n      tag_486\n      tag_273\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3933:3935   */\n      0x40\n        /* \"#utility.yul\":3927:3936   */\n      mload\n        /* \"#utility.yul\":3901:3903   */\n      0x1f\n        /* \"#utility.yul\":3987:4002   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3983:4007   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4009:4011   */\n      0x3f\n        /* \"#utility.yul\":3979:4012   */\n      add\n        /* \"#utility.yul\":3975:4017   */\n      and\n        /* \"#utility.yul\":3963:4018   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4033:4051   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":4053:4075   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4030:4076   */\n      or\n        /* \"#utility.yul\":4027:4099   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":4079:4097   */\n      tag_488\n      tag_273\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4119:4129   */\n      dup2\n        /* \"#utility.yul\":4115:4117   */\n      0x40\n        /* \"#utility.yul\":4108:4130   */\n      mstore\n        /* \"#utility.yul\":4148:4154   */\n      dup1\n        /* \"#utility.yul\":4139:4154   */\n      swap4\n      pop\n        /* \"#utility.yul\":4178:4184   */\n      dup6\n        /* \"#utility.yul\":4170:4176   */\n      dup2\n        /* \"#utility.yul\":4163:4185   */\n      mstore\n        /* \"#utility.yul\":4218:4221   */\n      dup7\n        /* \"#utility.yul\":4209:4215   */\n      dup7\n        /* \"#utility.yul\":4204:4207   */\n      dup7\n        /* \"#utility.yul\":4200:4216   */\n      add\n        /* \"#utility.yul\":4197:4222   */\n      gt\n        /* \"#utility.yul\":4194:4239   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":4235:4236   */\n      0x00\n        /* \"#utility.yul\":4232:4233   */\n      dup1\n        /* \"#utility.yul\":4225:4237   */\n      revert\n        /* \"#utility.yul\":4194:4239   */\n    tag_489:\n        /* \"#utility.yul\":4285:4291   */\n      dup6\n        /* \"#utility.yul\":4280:4283   */\n      dup6\n        /* \"#utility.yul\":4273:4277   */\n      0x20\n        /* \"#utility.yul\":4265:4271   */\n      dup4\n        /* \"#utility.yul\":4261:4278   */\n      add\n        /* \"#utility.yul\":4248:4292   */\n      calldatacopy\n        /* \"#utility.yul\":4340:4341   */\n      0x00\n        /* \"#utility.yul\":4333:4337   */\n      0x20\n        /* \"#utility.yul\":4324:4330   */\n      dup8\n        /* \"#utility.yul\":4316:4322   */\n      dup4\n        /* \"#utility.yul\":4312:4331   */\n      add\n        /* \"#utility.yul\":4308:4338   */\n      add\n        /* \"#utility.yul\":4301:4342   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3716:4348   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4353:4876   */\n    tag_122:\n        /* \"#utility.yul\":4431:4437   */\n      0x00\n        /* \"#utility.yul\":4439:4445   */\n      dup1\n        /* \"#utility.yul\":4492:4494   */\n      0x40\n        /* \"#utility.yul\":4480:4489   */\n      dup4\n        /* \"#utility.yul\":4471:4478   */\n      dup6\n        /* \"#utility.yul\":4467:4490   */\n      sub\n        /* \"#utility.yul\":4463:4495   */\n      slt\n        /* \"#utility.yul\":4460:4512   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":4508:4509   */\n      0x00\n        /* \"#utility.yul\":4505:4506   */\n      dup1\n        /* \"#utility.yul\":4498:4510   */\n      revert\n        /* \"#utility.yul\":4460:4512   */\n    tag_491:\n        /* \"#utility.yul\":4548:4557   */\n      dup3\n        /* \"#utility.yul\":4535:4558   */\n      calldataload\n        /* \"#utility.yul\":4581:4599   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4573:4579   */\n      dup2\n        /* \"#utility.yul\":4570:4600   */\n      gt\n        /* \"#utility.yul\":4567:4617   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4610:4611   */\n      dup1\n        /* \"#utility.yul\":4603:4615   */\n      revert\n        /* \"#utility.yul\":4567:4617   */\n    tag_492:\n        /* \"#utility.yul\":4636:4658   */\n      dup4\n      add\n        /* \"#utility.yul\":4689:4693   */\n      0x1f\n        /* \"#utility.yul\":4681:4694   */\n      dup2\n      add\n        /* \"#utility.yul\":4677:4704   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4667:4722   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4718:4719   */\n      0x00\n        /* \"#utility.yul\":4715:4716   */\n      dup1\n        /* \"#utility.yul\":4708:4720   */\n      revert\n        /* \"#utility.yul\":4667:4722   */\n    tag_493:\n        /* \"#utility.yul\":4741:4817   */\n      tag_494\n        /* \"#utility.yul\":4809:4816   */\n      dup6\n        /* \"#utility.yul\":4804:4806   */\n      dup3\n        /* \"#utility.yul\":4791:4807   */\n      calldataload\n        /* \"#utility.yul\":4784:4788   */\n      0x20\n        /* \"#utility.yul\":4780:4782   */\n      dup5\n        /* \"#utility.yul\":4776:4789   */\n      add\n        /* \"#utility.yul\":4741:4817   */\n      tag_441\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4731:4817   */\n      swap6\n        /* \"#utility.yul\":4864:4868   */\n      0x20\n        /* \"#utility.yul\":4849:4869   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":4836:4870   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4353:4876   */\n      jump\t// out\n        /* \"#utility.yul\":4881:5228   */\n    tag_126:\n        /* \"#utility.yul\":4946:4952   */\n      0x00\n        /* \"#utility.yul\":4954:4960   */\n      dup1\n        /* \"#utility.yul\":5007:5009   */\n      0x40\n        /* \"#utility.yul\":4995:5004   */\n      dup4\n        /* \"#utility.yul\":4986:4993   */\n      dup6\n        /* \"#utility.yul\":4982:5005   */\n      sub\n        /* \"#utility.yul\":4978:5010   */\n      slt\n        /* \"#utility.yul\":4975:5027   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":5023:5024   */\n      0x00\n        /* \"#utility.yul\":5020:5021   */\n      dup1\n        /* \"#utility.yul\":5013:5025   */\n      revert\n        /* \"#utility.yul\":4975:5027   */\n    tag_496:\n        /* \"#utility.yul\":5046:5075   */\n      tag_497\n        /* \"#utility.yul\":5065:5074   */\n      dup4\n        /* \"#utility.yul\":5046:5075   */\n      tag_438\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":5036:5075   */\n      swap2\n      pop\n        /* \"#utility.yul\":5125:5127   */\n      0x20\n        /* \"#utility.yul\":5114:5123   */\n      dup4\n        /* \"#utility.yul\":5110:5128   */\n      add\n        /* \"#utility.yul\":5097:5129   */\n      calldataload\n        /* \"#utility.yul\":5172:5177   */\n      dup1\n        /* \"#utility.yul\":5165:5178   */\n      iszero\n        /* \"#utility.yul\":5158:5179   */\n      iszero\n        /* \"#utility.yul\":5151:5156   */\n      dup2\n        /* \"#utility.yul\":5148:5180   */\n      eq\n        /* \"#utility.yul\":5138:5198   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5191:5192   */\n      dup1\n        /* \"#utility.yul\":5184:5196   */\n      revert\n        /* \"#utility.yul\":5138:5198   */\n    tag_498:\n        /* \"#utility.yul\":5217:5222   */\n      dup1\n        /* \"#utility.yul\":5207:5222   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4881:5228   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5233:5900   */\n    tag_130:\n        /* \"#utility.yul\":5328:5334   */\n      0x00\n        /* \"#utility.yul\":5336:5342   */\n      dup1\n        /* \"#utility.yul\":5344:5350   */\n      0x00\n        /* \"#utility.yul\":5352:5358   */\n      dup1\n        /* \"#utility.yul\":5405:5408   */\n      0x80\n        /* \"#utility.yul\":5393:5402   */\n      dup6\n        /* \"#utility.yul\":5384:5391   */\n      dup8\n        /* \"#utility.yul\":5380:5403   */\n      sub\n        /* \"#utility.yul\":5376:5409   */\n      slt\n        /* \"#utility.yul\":5373:5426   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5419:5420   */\n      dup1\n        /* \"#utility.yul\":5412:5424   */\n      revert\n        /* \"#utility.yul\":5373:5426   */\n    tag_500:\n        /* \"#utility.yul\":5445:5474   */\n      tag_501\n        /* \"#utility.yul\":5464:5473   */\n      dup6\n        /* \"#utility.yul\":5445:5474   */\n      tag_438\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":5435:5474   */\n      swap4\n      pop\n        /* \"#utility.yul\":5493:5531   */\n      tag_502\n        /* \"#utility.yul\":5527:5529   */\n      0x20\n        /* \"#utility.yul\":5516:5525   */\n      dup7\n        /* \"#utility.yul\":5512:5530   */\n      add\n        /* \"#utility.yul\":5493:5531   */\n      tag_438\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5483:5531   */\n      swap3\n      pop\n        /* \"#utility.yul\":5578:5580   */\n      0x40\n        /* \"#utility.yul\":5567:5576   */\n      dup6\n        /* \"#utility.yul\":5563:5581   */\n      add\n        /* \"#utility.yul\":5550:5582   */\n      calldataload\n        /* \"#utility.yul\":5540:5582   */\n      swap2\n      pop\n        /* \"#utility.yul\":5633:5635   */\n      0x60\n        /* \"#utility.yul\":5622:5631   */\n      dup6\n        /* \"#utility.yul\":5618:5636   */\n      add\n        /* \"#utility.yul\":5605:5637   */\n      calldataload\n        /* \"#utility.yul\":5660:5678   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5652:5658   */\n      dup2\n        /* \"#utility.yul\":5649:5679   */\n      gt\n        /* \"#utility.yul\":5646:5696   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":5692:5693   */\n      0x00\n        /* \"#utility.yul\":5689:5690   */\n      dup1\n        /* \"#utility.yul\":5682:5694   */\n      revert\n        /* \"#utility.yul\":5646:5696   */\n    tag_503:\n        /* \"#utility.yul\":5715:5737   */\n      dup6\n      add\n        /* \"#utility.yul\":5768:5772   */\n      0x1f\n        /* \"#utility.yul\":5760:5773   */\n      dup2\n      add\n        /* \"#utility.yul\":5756:5783   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5746:5801   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":5797:5798   */\n      0x00\n        /* \"#utility.yul\":5794:5795   */\n      dup1\n        /* \"#utility.yul\":5787:5799   */\n      revert\n        /* \"#utility.yul\":5746:5801   */\n    tag_504:\n        /* \"#utility.yul\":5820:5894   */\n      tag_505\n        /* \"#utility.yul\":5886:5893   */\n      dup8\n        /* \"#utility.yul\":5881:5883   */\n      dup3\n        /* \"#utility.yul\":5868:5884   */\n      calldataload\n        /* \"#utility.yul\":5863:5865   */\n      0x20\n        /* \"#utility.yul\":5859:5861   */\n      dup5\n        /* \"#utility.yul\":5855:5866   */\n      add\n        /* \"#utility.yul\":5820:5894   */\n      tag_441\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5810:5894   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5233:5900   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5905:6165   */\n    tag_138:\n        /* \"#utility.yul\":5973:5979   */\n      0x00\n        /* \"#utility.yul\":5981:5987   */\n      dup1\n        /* \"#utility.yul\":6034:6036   */\n      0x40\n        /* \"#utility.yul\":6022:6031   */\n      dup4\n        /* \"#utility.yul\":6013:6020   */\n      dup6\n        /* \"#utility.yul\":6009:6032   */\n      sub\n        /* \"#utility.yul\":6005:6037   */\n      slt\n        /* \"#utility.yul\":6002:6054   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":6050:6051   */\n      0x00\n        /* \"#utility.yul\":6047:6048   */\n      dup1\n        /* \"#utility.yul\":6040:6052   */\n      revert\n        /* \"#utility.yul\":6002:6054   */\n    tag_507:\n        /* \"#utility.yul\":6073:6102   */\n      tag_508\n        /* \"#utility.yul\":6092:6101   */\n      dup4\n        /* \"#utility.yul\":6073:6102   */\n      tag_438\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6063:6102   */\n      swap2\n      pop\n        /* \"#utility.yul\":6121:6159   */\n      tag_509\n        /* \"#utility.yul\":6155:6157   */\n      0x20\n        /* \"#utility.yul\":6144:6153   */\n      dup5\n        /* \"#utility.yul\":6140:6158   */\n      add\n        /* \"#utility.yul\":6121:6159   */\n      tag_438\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":6111:6159   */\n      swap1\n      pop\n        /* \"#utility.yul\":5905:6165   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6170:6802   */\n    tag_145:\n        /* \"#utility.yul\":6341:6343   */\n      0x20\n        /* \"#utility.yul\":6393:6414   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6463:6476   */\n      dup3\n      mload\n        /* \"#utility.yul\":6366:6384   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6485:6507   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6312:6316   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6341:6343   */\n      swap1\n        /* \"#utility.yul\":6564:6579   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6538:6540   */\n      0x40\n        /* \"#utility.yul\":6523:6541   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6312:6316   */\n      dup5\n        /* \"#utility.yul\":6607:6776   */\n    tag_511:\n        /* \"#utility.yul\":6621:6627   */\n      dup2\n        /* \"#utility.yul\":6618:6619   */\n      dup2\n        /* \"#utility.yul\":6615:6628   */\n      lt\n        /* \"#utility.yul\":6607:6776   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":6682:6695   */\n      dup4\n      mload\n        /* \"#utility.yul\":6670:6696   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6751:6766   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6716:6728   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":6643:6644   */\n      0x01\n        /* \"#utility.yul\":6636:6645   */\n      add\n        /* \"#utility.yul\":6607:6776   */\n      jump(tag_511)\n    tag_513:\n      pop\n        /* \"#utility.yul\":6793:6796   */\n      swap1\n      swap7\n        /* \"#utility.yul\":6170:6802   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6807:7187   */\n    tag_156:\n        /* \"#utility.yul\":6886:6887   */\n      0x01\n        /* \"#utility.yul\":6882:6894   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6929:6941   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6950:7011   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":7004:7008   */\n      0x7f\n        /* \"#utility.yul\":6996:7002   */\n      dup3\n        /* \"#utility.yul\":6992:7009   */\n      and\n        /* \"#utility.yul\":6982:7009   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7011   */\n    tag_515:\n        /* \"#utility.yul\":7057:7059   */\n      0x20\n        /* \"#utility.yul\":7049:7055   */\n      dup3\n        /* \"#utility.yul\":7046:7060   */\n      lt\n        /* \"#utility.yul\":7026:7044   */\n      dup2\n        /* \"#utility.yul\":7023:7061   */\n      sub\n        /* \"#utility.yul\":7020:7181   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":7103:7113   */\n      0x4e487b71\n        /* \"#utility.yul\":7098:7101   */\n      0xe0\n        /* \"#utility.yul\":7094:7114   */\n      shl\n        /* \"#utility.yul\":7091:7092   */\n      0x00\n        /* \"#utility.yul\":7084:7115   */\n      mstore\n        /* \"#utility.yul\":7138:7142   */\n      0x22\n        /* \"#utility.yul\":7135:7136   */\n      0x04\n        /* \"#utility.yul\":7128:7143   */\n      mstore\n        /* \"#utility.yul\":7166:7170   */\n      0x24\n        /* \"#utility.yul\":7163:7164   */\n      0x00\n        /* \"#utility.yul\":7156:7171   */\n      revert\n        /* \"#utility.yul\":7020:7181   */\n    tag_516:\n      pop\n        /* \"#utility.yul\":6807:7187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7572:7699   */\n    tag_442:\n        /* \"#utility.yul\":7633:7643   */\n      0x4e487b71\n        /* \"#utility.yul\":7628:7631   */\n      0xe0\n        /* \"#utility.yul\":7624:7644   */\n      shl\n        /* \"#utility.yul\":7621:7622   */\n      0x00\n        /* \"#utility.yul\":7614:7645   */\n      mstore\n        /* \"#utility.yul\":7664:7668   */\n      0x11\n        /* \"#utility.yul\":7661:7662   */\n      0x04\n        /* \"#utility.yul\":7654:7669   */\n      mstore\n        /* \"#utility.yul\":7688:7692   */\n      0x24\n        /* \"#utility.yul\":7685:7686   */\n      0x00\n        /* \"#utility.yul\":7678:7693   */\n      revert\n        /* \"#utility.yul\":7704:7839   */\n    tag_194:\n        /* \"#utility.yul\":7743:7746   */\n      0x00\n        /* \"#utility.yul\":7764:7781   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7761:7804   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":7784:7802   */\n      tag_521\n      tag_442\n      jump\t// in\n    tag_521:\n      pop\n        /* \"#utility.yul\":7831:7832   */\n      0x01\n        /* \"#utility.yul\":7820:7833   */\n      add\n      swap1\n        /* \"#utility.yul\":7704:7839   */\n      jump\t// out\n        /* \"#utility.yul\":7844:7969   */\n    tag_205:\n        /* \"#utility.yul\":7909:7918   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7930:7940   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7927:7963   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":7943:7961   */\n      tag_152\n      tag_442\n      jump\t// in\n        /* \"#utility.yul\":7974:8101   */\n    tag_212:\n        /* \"#utility.yul\":8035:8045   */\n      0x4e487b71\n        /* \"#utility.yul\":8030:8033   */\n      0xe0\n        /* \"#utility.yul\":8026:8046   */\n      shl\n        /* \"#utility.yul\":8023:8024   */\n      0x00\n        /* \"#utility.yul\":8016:8047   */\n      mstore\n        /* \"#utility.yul\":8066:8070   */\n      0x32\n        /* \"#utility.yul\":8063:8064   */\n      0x04\n        /* \"#utility.yul\":8056:8071   */\n      mstore\n        /* \"#utility.yul\":8090:8094   */\n      0x24\n        /* \"#utility.yul\":8087:8088   */\n      0x00\n        /* \"#utility.yul\":8080:8095   */\n      revert\n        /* \"#utility.yul\":8106:8242   */\n    tag_216:\n        /* \"#utility.yul\":8145:8148   */\n      0x00\n        /* \"#utility.yul\":8173:8178   */\n      dup2\n        /* \"#utility.yul\":8163:8202   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":8182:8200   */\n      tag_528\n      tag_442\n      jump\t// in\n    tag_528:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":8218:8236   */\n      add\n      swap1\n        /* \"#utility.yul\":8106:8242   */\n      jump\t// out\n        /* \"#utility.yul\":8373:8891   */\n    tag_444:\n        /* \"#utility.yul\":8475:8477   */\n      0x1f\n        /* \"#utility.yul\":8470:8473   */\n      dup3\n        /* \"#utility.yul\":8467:8478   */\n      gt\n        /* \"#utility.yul\":8464:8885   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":8511:8516   */\n      dup1\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8501:8517   */\n      mstore\n        /* \"#utility.yul\":8555:8559   */\n      0x20\n        /* \"#utility.yul\":8552:8553   */\n      0x00\n        /* \"#utility.yul\":8542:8560   */\n      keccak256\n        /* \"#utility.yul\":8625:8627   */\n      0x1f\n        /* \"#utility.yul\":8613:8623   */\n      dup5\n        /* \"#utility.yul\":8609:8628   */\n      add\n        /* \"#utility.yul\":8606:8607   */\n      0x05\n        /* \"#utility.yul\":8602:8629   */\n      shr\n        /* \"#utility.yul\":8596:8600   */\n      dup2\n        /* \"#utility.yul\":8592:8630   */\n      add\n        /* \"#utility.yul\":8661:8665   */\n      0x20\n        /* \"#utility.yul\":8649:8659   */\n      dup6\n        /* \"#utility.yul\":8646:8666   */\n      lt\n        /* \"#utility.yul\":8643:8690   */\n      iszero\n      tag_532\n      jumpi\n      pop\n        /* \"#utility.yul\":8684:8688   */\n      dup1\n        /* \"#utility.yul\":8643:8690   */\n    tag_532:\n        /* \"#utility.yul\":8739:8741   */\n      0x1f\n        /* \"#utility.yul\":8734:8737   */\n      dup5\n        /* \"#utility.yul\":8730:8742   */\n      add\n        /* \"#utility.yul\":8727:8728   */\n      0x05\n        /* \"#utility.yul\":8723:8743   */\n      shr\n        /* \"#utility.yul\":8717:8721   */\n      dup3\n        /* \"#utility.yul\":8713:8744   */\n      add\n        /* \"#utility.yul\":8703:8744   */\n      swap2\n      pop\n        /* \"#utility.yul\":8794:8875   */\n    tag_533:\n        /* \"#utility.yul\":8812:8814   */\n      dup2\n        /* \"#utility.yul\":8805:8810   */\n      dup2\n        /* \"#utility.yul\":8802:8815   */\n      lt\n        /* \"#utility.yul\":8794:8875   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":8871:8872   */\n      0x00\n        /* \"#utility.yul\":8857:8873   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8838:8839   */\n      0x01\n        /* \"#utility.yul\":8827:8840   */\n      add\n        /* \"#utility.yul\":8794:8875   */\n      jump(tag_533)\n        /* \"#utility.yul\":9067:10412   */\n    tag_250:\n        /* \"#utility.yul\":9193:9196   */\n      dup2\n        /* \"#utility.yul\":9187:9197   */\n      mload\n        /* \"#utility.yul\":9220:9238   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9212:9218   */\n      dup2\n        /* \"#utility.yul\":9209:9239   */\n      gt\n        /* \"#utility.yul\":9206:9262   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":9242:9260   */\n      tag_539\n      tag_273\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9271:9368   */\n      tag_540\n        /* \"#utility.yul\":9361:9367   */\n      dup2\n        /* \"#utility.yul\":9321:9359   */\n      tag_541\n        /* \"#utility.yul\":9353:9357   */\n      dup5\n        /* \"#utility.yul\":9347:9358   */\n      sload\n        /* \"#utility.yul\":9321:9359   */\n      tag_156\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9315:9319   */\n      dup5\n        /* \"#utility.yul\":9271:9368   */\n      tag_444\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9423:9427   */\n      0x20\n      dup1\n        /* \"#utility.yul\":9480:9482   */\n      0x1f\n        /* \"#utility.yul\":9469:9483   */\n      dup4\n      gt\n        /* \"#utility.yul\":9497:9498   */\n      0x01\n        /* \"#utility.yul\":9492:10155   */\n      dup2\n      eq\n      tag_543\n      jumpi\n        /* \"#utility.yul\":10199:10200   */\n      0x00\n        /* \"#utility.yul\":10216:10222   */\n      dup5\n        /* \"#utility.yul\":10213:10302   */\n      iszero\n      tag_544\n      jumpi\n      pop\n        /* \"#utility.yul\":10268:10287   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":10262:10288   */\n      mload\n        /* \"#utility.yul\":10213:10302   */\n    tag_544:\n      not(0x00)\n        /* \"#utility.yul\":9024:9025   */\n      0x03\n        /* \"#utility.yul\":9020:9031   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":9016:9040   */\n      shr\n        /* \"#utility.yul\":9012:9041   */\n      not\n        /* \"#utility.yul\":9002:9042   */\n      and\n        /* \"#utility.yul\":9048:9049   */\n      0x01\n        /* \"#utility.yul\":9044:9055   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":8999:9056   */\n      or\n        /* \"#utility.yul\":10315:10396   */\n      dup6\n      sstore\n        /* \"#utility.yul\":9462:10406   */\n      jump(tag_542)\n        /* \"#utility.yul\":9492:10155   */\n    tag_543:\n        /* \"#utility.yul\":8320:8321   */\n      0x00\n        /* \"#utility.yul\":8313:8327   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8357:8361   */\n      0x20\n        /* \"#utility.yul\":8344:8362   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":9528:9548   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":9646:9882   */\n    tag_547:\n        /* \"#utility.yul\":9660:9667   */\n      dup3\n        /* \"#utility.yul\":9657:9658   */\n      dup2\n        /* \"#utility.yul\":9654:9668   */\n      lt\n        /* \"#utility.yul\":9646:9882   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":9749:9768   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":9743:9769   */\n      mload\n        /* \"#utility.yul\":9728:9770   */\n      dup3\n      sstore\n        /* \"#utility.yul\":9841:9868   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":9809:9810   */\n      0x01\n        /* \"#utility.yul\":9797:9811   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":9676:9695   */\n      dup5\n      add\n        /* \"#utility.yul\":9646:9882   */\n      jump(tag_547)\n    tag_549:\n        /* \"#utility.yul\":9650:9653   */\n      pop\n        /* \"#utility.yul\":9910:9916   */\n      dup6\n        /* \"#utility.yul\":9901:9908   */\n      dup3\n        /* \"#utility.yul\":9898:9917   */\n      lt\n        /* \"#utility.yul\":9895:10096   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":9971:9990   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":9965:9991   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10054:10055   */\n      0x03\n        /* \"#utility.yul\":10050:10064   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":10066:10069   */\n      0xf8\n        /* \"#utility.yul\":10046:10070   */\n      and\n        /* \"#utility.yul\":10042:10079   */\n      shr\n        /* \"#utility.yul\":10038:10080   */\n      not\n        /* \"#utility.yul\":10023:10081   */\n      and\n        /* \"#utility.yul\":10008:10082   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9895:10096   */\n    tag_550:\n      pop\n      pop\n        /* \"#utility.yul\":10142:10143   */\n      0x01\n        /* \"#utility.yul\":10133:10139   */\n      dup5\n        /* \"#utility.yul\":10130:10131   */\n      0x01\n        /* \"#utility.yul\":10126:10140   */\n      shl\n        /* \"#utility.yul\":10122:10144   */\n      add\n        /* \"#utility.yul\":10116:10120   */\n      dup6\n        /* \"#utility.yul\":10109:10145   */\n      sstore\n        /* \"#utility.yul\":9462:10406   */\n    tag_542:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9067:10412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10417:10913   */\n    tag_268:\n        /* \"#utility.yul\":10596:10599   */\n      0x00\n        /* \"#utility.yul\":10634:10640   */\n      dup4\n        /* \"#utility.yul\":10628:10641   */\n      mload\n        /* \"#utility.yul\":10650:10716   */\n      tag_552\n        /* \"#utility.yul\":10709:10715   */\n      dup2\n        /* \"#utility.yul\":10704:10707   */\n      dup5\n        /* \"#utility.yul\":10697:10701   */\n      0x20\n        /* \"#utility.yul\":10689:10695   */\n      dup9\n        /* \"#utility.yul\":10685:10702   */\n      add\n        /* \"#utility.yul\":10650:10716   */\n      tag_439\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10779:10792   */\n      dup4\n      mload\n        /* \"#utility.yul\":10738:10754   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10801:10871   */\n      tag_553\n        /* \"#utility.yul\":10779:10792   */\n      dup2\n        /* \"#utility.yul\":10738:10754   */\n      dup4\n        /* \"#utility.yul\":10848:10852   */\n      0x20\n        /* \"#utility.yul\":10836:10853   */\n      dup9\n      add\n        /* \"#utility.yul\":10801:10871   */\n      tag_439\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10887:10907   */\n      add\n      swap5\n        /* \"#utility.yul\":10417:10913   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10918:11407   */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11187:11202   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11169:11203   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11239:11254   */\n      dup5\n      and\n        /* \"#utility.yul\":11234:11236   */\n      0x20\n        /* \"#utility.yul\":11219:11237   */\n      dup3\n      add\n        /* \"#utility.yul\":11212:11255   */\n      mstore\n        /* \"#utility.yul\":11286:11288   */\n      0x40\n        /* \"#utility.yul\":11271:11289   */\n      dup2\n      add\n        /* \"#utility.yul\":11264:11298   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11334:11337   */\n      0x80\n        /* \"#utility.yul\":11329:11331   */\n      0x60\n        /* \"#utility.yul\":11314:11332   */\n      dup3\n      add\n        /* \"#utility.yul\":11307:11338   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11112:11116   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11355:11401   */\n      tag_555\n      swap1\n        /* \"#utility.yul\":11381:11400   */\n      dup4\n      add\n        /* \"#utility.yul\":11373:11379   */\n      dup5\n        /* \"#utility.yul\":11355:11401   */\n      tag_440\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":11347:11401   */\n      swap7\n        /* \"#utility.yul\":10918:11407   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11412:11661   */\n    tag_336:\n        /* \"#utility.yul\":11481:11487   */\n      0x00\n        /* \"#utility.yul\":11534:11536   */\n      0x20\n        /* \"#utility.yul\":11522:11531   */\n      dup3\n        /* \"#utility.yul\":11513:11520   */\n      dup5\n        /* \"#utility.yul\":11509:11532   */\n      sub\n        /* \"#utility.yul\":11505:11537   */\n      slt\n        /* \"#utility.yul\":11502:11554   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":11550:11551   */\n      0x00\n        /* \"#utility.yul\":11547:11548   */\n      dup1\n        /* \"#utility.yul\":11540:11552   */\n      revert\n        /* \"#utility.yul\":11502:11554   */\n    tag_557:\n        /* \"#utility.yul\":11582:11591   */\n      dup2\n        /* \"#utility.yul\":11576:11592   */\n      mload\n        /* \"#utility.yul\":11601:11631   */\n      tag_264\n        /* \"#utility.yul\":11625:11630   */\n      dup2\n        /* \"#utility.yul\":11601:11631   */\n      tag_437\n      jump\t// in\n\n    auxdata: 0xa264697066735822122094b960ff62e17506bd0b1c8078a71363d9d30f5fa261fddcec83116810533b1264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1650": {
									"entryPoint": null,
									"id": 1650,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3243": {
									"entryPoint": null,
									"id": 3243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 226,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3201:17",
										"nodeType": "YulBlock",
										"src": "0:3201:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:17",
													"nodeType": "YulBlock",
													"src": "95:209:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:17",
																"nodeType": "YulBlock",
																"src": "141:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:17",
																					"nodeType": "YulLiteral",
																					"src": "150:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:17",
																					"nodeType": "YulLiteral",
																					"src": "153:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:17"
																			},
																			"nativeSrc": "143:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:17"
																		},
																		"nativeSrc": "143:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:17"
																		},
																		"nativeSrc": "112:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:17",
																		"nodeType": "YulLiteral",
																		"src": "137:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:17"
																},
																"nativeSrc": "108:32:17",
																"nodeType": "YulFunctionCall",
																"src": "108:32:17"
															},
															"nativeSrc": "105:52:17",
															"nodeType": "YulIf",
															"src": "105:52:17"
														},
														{
															"nativeSrc": "166:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:17"
																},
																"nativeSrc": "179:16:17",
																"nodeType": "YulFunctionCall",
																"src": "179:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:17",
																	"nodeType": "YulTypedName",
																	"src": "170:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:17",
																"nodeType": "YulBlock",
																"src": "258:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:17",
																					"nodeType": "YulLiteral",
																					"src": "267:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:17",
																					"nodeType": "YulLiteral",
																					"src": "270:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:17"
																			},
																			"nativeSrc": "260:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:17"
																		},
																		"nativeSrc": "260:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:17",
																										"nodeType": "YulLiteral",
																										"src": "243:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:17",
																										"nodeType": "YulLiteral",
																										"src": "248:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:17"
																								},
																								"nativeSrc": "239:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:17",
																								"nodeType": "YulLiteral",
																								"src": "252:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:17"
																						},
																						"nativeSrc": "235:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:17"
																				},
																				"nativeSrc": "224:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:17"
																		},
																		"nativeSrc": "214:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:17"
																},
																"nativeSrc": "207:50:17",
																"nodeType": "YulFunctionCall",
																"src": "207:50:17"
															},
															"nativeSrc": "204:70:17",
															"nodeType": "YulIf",
															"src": "204:70:17"
														},
														{
															"nativeSrc": "283:15:17",
															"nodeType": "YulAssignment",
															"src": "283:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:17",
																"nodeType": "YulIdentifier",
																"src": "293:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:17",
														"nodeType": "YulTypedName",
														"src": "61:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:17",
														"nodeType": "YulTypedName",
														"src": "72:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:17",
														"nodeType": "YulTypedName",
														"src": "84:6:17",
														"type": ""
													}
												],
												"src": "14:290:17"
											},
											{
												"body": {
													"nativeSrc": "341:95:17",
													"nodeType": "YulBlock",
													"src": "341:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:17",
																		"nodeType": "YulLiteral",
																		"src": "358:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:17",
																				"nodeType": "YulLiteral",
																				"src": "365:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:17",
																				"nodeType": "YulLiteral",
																				"src": "370:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:17"
																		},
																		"nativeSrc": "361:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:17"
																},
																"nativeSrc": "351:31:17",
																"nodeType": "YulFunctionCall",
																"src": "351:31:17"
															},
															"nativeSrc": "351:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:17",
																		"nodeType": "YulLiteral",
																		"src": "398:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:17",
																		"nodeType": "YulLiteral",
																		"src": "401:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:17"
																},
																"nativeSrc": "391:15:17",
																"nodeType": "YulFunctionCall",
																"src": "391:15:17"
															},
															"nativeSrc": "391:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:17",
																		"nodeType": "YulLiteral",
																		"src": "422:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:17",
																		"nodeType": "YulLiteral",
																		"src": "425:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:17"
																},
																"nativeSrc": "415:15:17",
																"nodeType": "YulFunctionCall",
																"src": "415:15:17"
															},
															"nativeSrc": "415:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:17"
											},
											{
												"body": {
													"nativeSrc": "496:325:17",
													"nodeType": "YulBlock",
													"src": "496:325:17",
													"statements": [
														{
															"nativeSrc": "506:22:17",
															"nodeType": "YulAssignment",
															"src": "506:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:17",
																		"nodeType": "YulLiteral",
																		"src": "520:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:17"
																},
																"nativeSrc": "516:12:17",
																"nodeType": "YulFunctionCall",
																"src": "516:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:17"
																}
															]
														},
														{
															"nativeSrc": "537:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:17",
																		"nodeType": "YulLiteral",
																		"src": "573:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:17"
																},
																"nativeSrc": "563:12:17",
																"nodeType": "YulFunctionCall",
																"src": "563:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:17",
																	"nodeType": "YulTypedName",
																	"src": "541:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:17",
																"nodeType": "YulBlock",
																"src": "614:31:17",
																"statements": [
																	{
																		"nativeSrc": "616:27:17",
																		"nodeType": "YulAssignment",
																		"src": "616:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:17",
																					"nodeType": "YulLiteral",
																					"src": "638:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:17"
																			},
																			"nativeSrc": "626:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:17"
																},
																"nativeSrc": "587:26:17",
																"nodeType": "YulFunctionCall",
																"src": "587:26:17"
															},
															"nativeSrc": "584:61:17",
															"nodeType": "YulIf",
															"src": "584:61:17"
														},
														{
															"body": {
																"nativeSrc": "704:111:17",
																"nodeType": "YulBlock",
																"src": "704:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:17",
																					"nodeType": "YulLiteral",
																					"src": "725:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:17",
																							"nodeType": "YulLiteral",
																							"src": "732:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:17",
																							"nodeType": "YulLiteral",
																							"src": "737:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:17"
																					},
																					"nativeSrc": "728:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:17"
																			},
																			"nativeSrc": "718:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:17"
																		},
																		"nativeSrc": "718:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:17",
																					"nodeType": "YulLiteral",
																					"src": "769:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:17",
																					"nodeType": "YulLiteral",
																					"src": "772:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:17"
																			},
																			"nativeSrc": "762:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:17"
																		},
																		"nativeSrc": "762:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:17",
																					"nodeType": "YulLiteral",
																					"src": "797:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:17",
																					"nodeType": "YulLiteral",
																					"src": "800:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:17"
																			},
																			"nativeSrc": "790:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:17"
																		},
																		"nativeSrc": "790:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:17",
																				"nodeType": "YulLiteral",
																				"src": "691:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:17"
																		},
																		"nativeSrc": "680:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:17"
																},
																"nativeSrc": "657:38:17",
																"nodeType": "YulFunctionCall",
																"src": "657:38:17"
															},
															"nativeSrc": "654:161:17",
															"nodeType": "YulIf",
															"src": "654:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:17",
														"nodeType": "YulTypedName",
														"src": "476:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:17",
														"nodeType": "YulTypedName",
														"src": "485:6:17",
														"type": ""
													}
												],
												"src": "441:380:17"
											},
											{
												"body": {
													"nativeSrc": "882:65:17",
													"nodeType": "YulBlock",
													"src": "882:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:17",
																		"nodeType": "YulLiteral",
																		"src": "899:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:17"
																},
																"nativeSrc": "892:14:17",
																"nodeType": "YulFunctionCall",
																"src": "892:14:17"
															},
															"nativeSrc": "892:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:17"
														},
														{
															"nativeSrc": "915:26:17",
															"nodeType": "YulAssignment",
															"src": "915:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:17",
																		"nodeType": "YulLiteral",
																		"src": "933:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:17",
																		"nodeType": "YulLiteral",
																		"src": "936:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:17"
																},
																"nativeSrc": "923:18:17",
																"nodeType": "YulFunctionCall",
																"src": "923:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:17",
														"nodeType": "YulTypedName",
														"src": "865:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:17",
														"nodeType": "YulTypedName",
														"src": "873:4:17",
														"type": ""
													}
												],
												"src": "826:121:17"
											},
											{
												"body": {
													"nativeSrc": "1033:437:17",
													"nodeType": "YulBlock",
													"src": "1033:437:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:17",
																"nodeType": "YulBlock",
																"src": "1066:398:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:17"
																			},
																			"nativeSrc": "1080:16:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:17"
																		},
																		"nativeSrc": "1080:16:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:17"
																	},
																	{
																		"nativeSrc": "1109:30:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:17",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:17",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:17"
																			},
																			"nativeSrc": "1121:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:17",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:17",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:17",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:17",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:17"
																							},
																							"nativeSrc": "1188:19:17",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:17"
																					},
																					"nativeSrc": "1181:27:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:17"
																			},
																			"nativeSrc": "1171:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:17",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:17",
																			"nodeType": "YulBlock",
																			"src": "1246:23:17",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:17",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:17",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:17",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:17"
																			},
																			"nativeSrc": "1225:20:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:17"
																		},
																		"nativeSrc": "1222:47:17",
																		"nodeType": "YulIf",
																		"src": "1222:47:17"
																	},
																	{
																		"nativeSrc": "1282:41:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:17",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:17",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:17"
																							},
																							"nativeSrc": "1309:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:17"
																					},
																					"nativeSrc": "1302:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:17"
																			},
																			"nativeSrc": "1292:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:17"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:17",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:17",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:17",
																			"nodeType": "YulBlock",
																			"src": "1434:20:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:17"
																						},
																						"nativeSrc": "1436:16:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:17"
																					},
																					"nativeSrc": "1436:16:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:17"
																			},
																			"nativeSrc": "1381:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:17"
																		},
																		"nativeSrc": "1373:81:17",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:17",
																			"nodeType": "YulBlock",
																			"src": "1395:26:17",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:17",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:17",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:17"
																						},
																						"nativeSrc": "1406:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:17",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:17",
																			"nodeType": "YulBlock",
																			"src": "1377:3:17",
																			"statements": []
																		},
																		"src": "1373:81:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:17"
																},
																"nativeSrc": "1046:11:17",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:17"
															},
															"nativeSrc": "1043:421:17",
															"nodeType": "YulIf",
															"src": "1043:421:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:17",
														"nodeType": "YulTypedName",
														"src": "1005:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:17",
														"nodeType": "YulTypedName",
														"src": "1012:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:17",
														"nodeType": "YulTypedName",
														"src": "1017:10:17",
														"type": ""
													}
												],
												"src": "952:518:17"
											},
											{
												"body": {
													"nativeSrc": "1560:81:17",
													"nodeType": "YulBlock",
													"src": "1560:81:17",
													"statements": [
														{
															"nativeSrc": "1570:65:17",
															"nodeType": "YulAssignment",
															"src": "1570:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:17",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:17"
																								},
																								"nativeSrc": "1599:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:17",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:17"
																								},
																								"nativeSrc": "1612:6:17",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:17"
																						},
																						"nativeSrc": "1595:24:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:17"
																				},
																				"nativeSrc": "1591:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:17"
																		},
																		"nativeSrc": "1581:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:17"
																		},
																		"nativeSrc": "1623:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:17"
																},
																"nativeSrc": "1578:57:17",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:17",
														"nodeType": "YulTypedName",
														"src": "1537:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:17",
														"nodeType": "YulTypedName",
														"src": "1543:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:17",
														"nodeType": "YulTypedName",
														"src": "1551:4:17",
														"type": ""
													}
												],
												"src": "1475:166:17"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:17",
													"nodeType": "YulBlock",
													"src": "1742:1249:17",
													"statements": [
														{
															"nativeSrc": "1752:24:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:17"
																},
																"nativeSrc": "1766:10:17",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:17",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:17",
																"nodeType": "YulBlock",
																"src": "1819:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:17"
																			},
																			"nativeSrc": "1821:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:17"
																		},
																		"nativeSrc": "1821:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:17",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:17",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:17"
																				},
																				"nativeSrc": "1803:10:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:17"
																		},
																		"nativeSrc": "1799:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:17"
																},
																"nativeSrc": "1788:30:17",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:17"
															},
															"nativeSrc": "1785:56:17",
															"nodeType": "YulIf",
															"src": "1785:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:17"
																				},
																				"nativeSrc": "1926:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:17",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:17"
																		},
																		"nativeSrc": "1900:38:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:17"
																},
																"nativeSrc": "1850:97:17",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:17"
															},
															"nativeSrc": "1850:97:17",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:17"
														},
														{
															"nativeSrc": "1956:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:17",
																"nodeType": "YulLiteral",
																"src": "1973:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:17",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:17",
																"nodeType": "YulLiteral",
																"src": "2002:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:17",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:17",
															"nodeType": "YulAssignment",
															"src": "2015:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:17",
																"nodeType": "YulLiteral",
																"src": "2028:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:17",
																		"nodeType": "YulBlock",
																		"src": "2078:656:17",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:17",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:17"
																							},
																							"nativeSrc": "2119:7:17",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:17"
																					},
																					"nativeSrc": "2107:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:17",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:17",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:17"
																					},
																					"nativeSrc": "2154:35:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:17",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:17",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:17",
																					"nodeType": "YulBlock",
																					"src": "2289:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:17"
																												},
																												"nativeSrc": "2328:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:17"
																										},
																										"nativeSrc": "2322:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:17"
																								},
																								"nativeSrc": "2307:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:17"
																							},
																							"nativeSrc": "2307:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:17"
																						},
																						{
																							"nativeSrc": "2366:24:17",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:17",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:17"
																								},
																								"nativeSrc": "2376:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:17",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:17"
																								},
																								"nativeSrc": "2420:27:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:17"
																					},
																					"nativeSrc": "2233:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:17"
																				},
																				"nativeSrc": "2225:236:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:17",
																					"nodeType": "YulBlock",
																					"src": "2248:28:17",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:17",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:17"
																								},
																								"nativeSrc": "2255:19:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:17",
																					"nodeType": "YulBlock",
																					"src": "2229:3:17",
																					"statements": []
																				},
																				"src": "2225:236:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:17",
																					"nodeType": "YulBlock",
																					"src": "2509:166:17",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:17"
																										},
																										"nativeSrc": "2550:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:17"
																								},
																								"nativeSrc": "2544:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:17",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:17",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:17",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:17",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:17"
																																		},
																																		"nativeSrc": "2629:14:17",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:17",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:17"
																																},
																																"nativeSrc": "2625:24:17",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:17",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:17"
																																},
																																"nativeSrc": "2651:6:17",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:17",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:17"
																														},
																														"nativeSrc": "2621:37:17",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:17"
																												},
																												"nativeSrc": "2617:42:17",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:17"
																										},
																										"nativeSrc": "2602:58:17",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:17"
																								},
																								"nativeSrc": "2587:74:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:17"
																							},
																							"nativeSrc": "2587:74:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:17"
																					},
																					"nativeSrc": "2477:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:17"
																				},
																				"nativeSrc": "2474:201:17",
																				"nodeType": "YulIf",
																				"src": "2474:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:17",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:17"
																									},
																									"nativeSrc": "2705:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:17",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:17"
																							},
																							"nativeSrc": "2701:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:17"
																					},
																					"nativeSrc": "2688:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:17"
																				},
																				"nativeSrc": "2688:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:17"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:17",
																	"nodeType": "YulCase",
																	"src": "2071:663:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:17",
																		"nodeType": "YulBlock",
																		"src": "2751:234:17",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:17",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:17",
																					"nodeType": "YulBlock",
																					"src": "2814:67:17",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:17",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:17"
																										},
																										"nativeSrc": "2847:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:17"
																								},
																								"nativeSrc": "2841:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:17"
																				},
																				"nativeSrc": "2792:89:17",
																				"nodeType": "YulIf",
																				"src": "2792:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:17"
																							},
																							"nativeSrc": "2907:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:17"
																					},
																					"nativeSrc": "2894:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:17"
																				},
																				"nativeSrc": "2894:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:17"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:17",
																	"nodeType": "YulCase",
																	"src": "2743:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:17"
																},
																"nativeSrc": "2048:14:17",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:17"
															},
															"nativeSrc": "2041:944:17",
															"nodeType": "YulSwitch",
															"src": "2041:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:17",
														"nodeType": "YulTypedName",
														"src": "1727:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:17",
														"nodeType": "YulTypedName",
														"src": "1733:3:17",
														"type": ""
													}
												],
												"src": "1646:1345:17"
											},
											{
												"body": {
													"nativeSrc": "3097:102:17",
													"nodeType": "YulBlock",
													"src": "3097:102:17",
													"statements": [
														{
															"nativeSrc": "3107:26:17",
															"nodeType": "YulAssignment",
															"src": "3107:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3119:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:17"
																},
																"nativeSrc": "3115:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3115:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3107:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3107:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3149:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3149:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3164:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3180:3:17",
																								"nodeType": "YulLiteral",
																								"src": "3180:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3185:1:17",
																								"nodeType": "YulLiteral",
																								"src": "3185:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3176:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3176:3:17"
																						},
																						"nativeSrc": "3176:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "3176:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3189:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3189:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3172:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:17"
																				},
																				"nativeSrc": "3172:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3172:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3160:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3160:3:17"
																		},
																		"nativeSrc": "3160:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3160:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:17"
																},
																"nativeSrc": "3142:51:17",
																"nodeType": "YulFunctionCall",
																"src": "3142:51:17"
															},
															"nativeSrc": "3142:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "3142:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2996:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3066:9:17",
														"nodeType": "YulTypedName",
														"src": "3066:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3077:6:17",
														"nodeType": "YulTypedName",
														"src": "3077:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:17",
														"nodeType": "YulTypedName",
														"src": "3088:4:17",
														"type": ""
													}
												],
												"src": "2996:203:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001c4c38038062001c4c83398101604081905262000033916200013b565b806040518060400160405280600b81526020016a446973706174636820414960a81b815250604051806040016040528060048152602001634450414960e01b815250815f908162000085919062000208565b50600162000094828262000208565b50506006805460ff19169055506001600160a01b038116620000cf57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000da81620000e2565b5050620002d4565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156200014c575f80fd5b81516001600160a01b038116811462000163575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200019357607f821691505b602082108103620001b257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200020357805f5260205f20601f840160051c81016020851015620001df5750805b601f840160051c820191505b8181101562000200575f8155600101620001eb565b50505b505050565b81516001600160401b038111156200022457620002246200016a565b6200023c816200023584546200017e565b84620001b8565b602080601f83116001811462000272575f84156200025a5750858301515b5f19600386901b1c1916600185901b178555620002cc565b5f85815260208120601f198616915b82811015620002a25788860151825594840194600190910190840162000281565b5085821015620002c057878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61196a80620002e25f395ff3fe608060405234801561000f575f80fd5b50600436106101c6575f3560e01c806370a08231116100fe57806398bdf6f51161009e578063c87b56dd1161006e578063c87b56dd146103d3578063e985e9c5146103e6578063f1537686146103f9578063f2fde38b14610419575f80fd5b806398bdf6f5146103905780639c9b68e31461039a578063a22cb465146103ad578063b88d4fde146103c0575f80fd5b80638da5cb5b116100d95780638da5cb5b146103265780638df9612b1461033c578063901e1c011461036657806395d89b4114610388575f80fd5b806370a0823114610303578063715018a6146103165780638456cb591461031e575f80fd5b806340d097c3116101695780634f4accdf116101445780634f4accdf146102c85780635c975abb146102d25780636352211e146102dd5780636e0cee09146102f0575f80fd5b806340d097c31461028f57806342842e0e146102a257806342966c68146102b5575f80fd5b8063081812fc116101a4578063081812fc14610234578063095ea7b31461025f57806323b872dd146102745780633f4ba83a14610287575f80fd5b806301ffc9a7146101ca57806305d85eda146101f257806306fdde031461021f575b5f80fd5b6101dd6101d8366004611388565b61042c565b60405190151581526020015b60405180910390f35b6102116102003660046113be565b600a6020525f908152604090205481565b6040519081526020016101e9565b61022761047d565b6040516101e99190611424565b610247610242366004611436565b61050c565b6040516001600160a01b0390911681526020016101e9565b61027261026d36600461144d565b610533565b005b610272610282366004611475565b610542565b6102726105d0565b61027261029d3660046113be565b6105e2565b6102726102b0366004611475565b61065e565b6102726102c3366004611436565b61067d565b6008546102119081565b60065460ff166101dd565b6102476102eb366004611436565b610688565b6102726102fe3660046114ae565b610692565b6102116103113660046113be565b6107bb565b610272610800565b610272610811565b60065461010090046001600160a01b0316610247565b61021161034a36600461144d565b600960209081525f928352604080842090915290825290205481565b610379610374366004611436565b610821565b6040516101e9939291906114e7565b6102276108c8565b6007546102119081565b6102726103a8366004611592565b6108d7565b6102726103bb3660046115e7565b610953565b6102726103ce366004611620565b61095e565b6102276103e1366004611436565b610975565b6101dd6103f4366004611697565b6109e6565b61040c6104073660046113be565b610a13565b6040516101e991906116c8565b6102726104273660046113be565b610af1565b5f6001600160e01b031982166380ac58cd60e01b148061045c57506001600160e01b03198216635b5e139f60e01b145b8061047757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461048b9061170b565b80601f01602080910402602001604051908101604052809291908181526020018280546104b79061170b565b80156105025780601f106104d957610100808354040283529160200191610502565b820191905f5260205f20905b8154815290600101906020018083116104e557829003601f168201915b5050505050905090565b5f61051682610b2e565b505f828152600460205260409020546001600160a01b0316610477565b61053e828233610b66565b5050565b6001600160a01b03821661057057604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61057c838333610b73565b9050836001600160a01b0316816001600160a01b0316146105ca576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610567565b50505050565b6105d8610b87565b6105e0610bba565b565b5f6105ec60075490565b90506105f88282610c0c565b6001600160a01b0382165f908152600960209081526040808320600a83528184205484529091529020819055610632600780546001019055565b6001600160a01b0382165f908152600a6020526040812080549161065583611757565b91905055505050565b61067883838360405180602001604052805f81525061095e565b505050565b61053e5f8233610b73565b5f61047782610b2e565b6001600160a01b0383165f908152600960209081526040808320600a9092528220548492906106c290600161176f565b81526020019081526020015f20819055505f6106dd82610a13565b90505f5b815181101561078c57838282815181106106fd576106fd611782565b602002602001015103610784576001600160a01b0383165f818152600960208181526040808420600a8352818520548552808352908420549484529190529061074784600161176f565b815260208082019290925260409081015f908120939093556001600160a01b0386168352600a909152812080549161077e83611796565b91905055505b6001016106e1565b506001600160a01b0384165f908152600a602052604081208054916107b083611757565b919050555050505050565b5f6001600160a01b0382166107e5576040516322718ad960e21b81525f6004820152602401610567565b506001600160a01b03165f9081526003602052604090205490565b610808610b87565b6105e05f610c25565b610819610b87565b6105e0610c7e565b600b6020525f908152604090208054819061083b9061170b565b80601f01602080910402602001604051908101604052809291908181526020018280546108679061170b565b80156108b25780601f10610889576101008083540402835291602001916108b2565b820191905f5260205f20905b81548152906001019060200180831161089557829003601f168201915b5050505050908060010154908060020154905083565b60606001805461048b9061170b565b6108df610b87565b6108ed600880546001019055565b604051806060016040528083815260200182815260200161090d60085490565b9052600b5f61091b60085490565b815260208101919091526040015f208151819061093890826117ef565b50602082015160018201556040909101516002909101555050565b61053e338383610cbb565b610969848484610542565b6105ca84848484610d59565b606061098082610b2e565b505f61099660408051602081019091525f815290565b90505f8151116109b45760405180602001604052805f8152506109df565b806109be84610e7f565b6040516020016109cf9291906118af565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6001600160a01b0381165f908152600a60205260408120546060919067ffffffffffffffff811115610a4757610a4761150b565b604051908082528060200260200182016040528015610a70578160200160208202803683370190505b5090505f5b6001600160a01b0384165f908152600a6020526040902054811015610aea576001600160a01b0384165f90815260096020526040812090610ab783600161176f565b81526020019081526020015f2054828281518110610ad757610ad7611782565b6020908102919091010152600101610a75565b5092915050565b610af9610b87565b6001600160a01b038116610b2257604051631e4fbdf760e01b81525f6004820152602401610567565b610b2b81610c25565b50565b5f818152600260205260408120546001600160a01b03168061047757604051637e27328960e01b815260048101849052602401610567565b6106788383836001610f0f565b5f610b7f848484611013565b949350505050565b6006546001600160a01b036101009091041633146105e05760405163118cdaa760e01b8152336004820152602401610567565b610bc2611027565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61053e828260405180602001604052805f81525061104a565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610c86611060565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bef3390565b6001600160a01b038216610ced57604051630b61174360e31b81526001600160a01b0383166004820152602401610567565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156105ca57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d9b9033908890879087906004016118dd565b6020604051808303815f875af1925050508015610dd5575060408051601f3d908101601f19168201909252610dd291810190611919565b60015b610e3c573d808015610e02576040519150601f19603f3d011682016040523d82523d5f602084013e610e07565b606091505b5080515f03610e3457604051633250574960e11b81526001600160a01b0385166004820152602401610567565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610e7857604051633250574960e11b81526001600160a01b0385166004820152602401610567565b5050505050565b60605f610e8b83611084565b60010190505f8167ffffffffffffffff811115610eaa57610eaa61150b565b6040519080825280601f01601f191660200182016040528015610ed4576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ede57509392505050565b8080610f2357506001600160a01b03821615155b15610fe4575f610f3284610b2e565b90506001600160a01b03831615801590610f5e5750826001600160a01b0316816001600160a01b031614155b8015610f715750610f6f81846109e6565b155b15610f9a5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610567565b8115610fe25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f61101c611060565b610b7f84848461115b565b60065460ff166105e057604051638dfc202b60e01b815260040160405180910390fd5b611054838361124d565b6106785f848484610d59565b60065460ff16156105e05760405163d93c066560e01b815260040160405180910390fd5b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110c25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110ee576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061110c57662386f26fc10000830492506010015b6305f5e1008310611124576305f5e100830492506008015b612710831061113857612710830492506004015b6064831061114a576064830492506002015b600a83106104775760010192915050565b5f828152600260205260408120546001600160a01b0390811690831615611187576111878184866112ae565b6001600160a01b038116156111c1576111a25f855f80610f0f565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156111ef576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b03821661127657604051633250574960e11b81525f6004820152602401610567565b5f61128283835f610b73565b90506001600160a01b03811615610678576040516339e3563760e11b81525f6004820152602401610567565b6112b9838383611312565b610678576001600160a01b0383166112e757604051637e27328960e01b815260048101829052602401610567565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610567565b5f6001600160a01b03831615801590610b7f5750826001600160a01b0316846001600160a01b0316148061134b575061134b84846109e6565b80610b7f5750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610b2b575f80fd5b5f60208284031215611398575f80fd5b81356109df81611373565b80356001600160a01b03811681146113b9575f80fd5b919050565b5f602082840312156113ce575f80fd5b6109df826113a3565b5f5b838110156113f15781810151838201526020016113d9565b50505f910152565b5f81518084526114108160208601602086016113d7565b601f01601f19169290920160200192915050565b602081525f6109df60208301846113f9565b5f60208284031215611446575f80fd5b5035919050565b5f806040838503121561145e575f80fd5b611467836113a3565b946020939093013593505050565b5f805f60608486031215611487575f80fd5b611490846113a3565b925061149e602085016113a3565b9150604084013590509250925092565b5f805f606084860312156114c0575f80fd5b6114c9846113a3565b9250602084013591506114de604085016113a3565b90509250925092565b606081525f6114f960608301866113f9565b60208301949094525060400152919050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156115395761153961150b565b604051601f8501601f19908116603f011681019082821181831017156115615761156161150b565b81604052809350858152868686011115611579575f80fd5b858560208301375f602087830101525050509392505050565b5f80604083850312156115a3575f80fd5b823567ffffffffffffffff8111156115b9575f80fd5b8301601f810185136115c9575f80fd5b6115d88582356020840161151f565b95602094909401359450505050565b5f80604083850312156115f8575f80fd5b611601836113a3565b915060208301358015158114611615575f80fd5b809150509250929050565b5f805f8060808587031215611633575f80fd5b61163c856113a3565b935061164a602086016113a3565b925060408501359150606085013567ffffffffffffffff81111561166c575f80fd5b8501601f8101871361167c575f80fd5b61168b8782356020840161151f565b91505092959194509250565b5f80604083850312156116a8575f80fd5b6116b1836113a3565b91506116bf602084016113a3565b90509250929050565b602080825282518282018190525f9190848201906040850190845b818110156116ff578351835292840192918401916001016116e3565b50909695505050505050565b600181811c9082168061171f57607f821691505b60208210810361173d57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161176857611768611743565b5060010190565b8082018082111561047757610477611743565b634e487b7160e01b5f52603260045260245ffd5b5f816117a4576117a4611743565b505f190190565b601f82111561067857805f5260205f20601f840160051c810160208510156117d05750805b601f840160051c820191505b81811015610e78575f81556001016117dc565b815167ffffffffffffffff8111156118095761180961150b565b61181d81611817845461170b565b846117ab565b602080601f831160018114611850575f84156118395750858301515b5f19600386901b1c1916600185901b1785556118a7565b5f85815260208120601f198616915b8281101561187e5788860151825594840194600190910190840161185f565b508582101561189b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f83516118c08184602088016113d7565b8351908301906118d48183602088016113d7565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061190f908301846113f9565b9695505050505050565b5f60208284031215611929575f80fd5b81516109df8161137356fea264697066735822122094b960ff62e17506bd0b1c8078a71363d9d30f5fa261fddcec83116810533b1264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C4C CODESIZE SUB DUP1 PUSH3 0x1C4C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x4469737061746368204149 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x44504149 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x85 SWAP2 SWAP1 PUSH3 0x208 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x94 DUP3 DUP3 PUSH3 0x208 JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xDA DUP2 PUSH3 0xE2 JUMP JUMPDEST POP POP PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x163 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x193 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x203 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1DF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x200 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x224 JUMPI PUSH3 0x224 PUSH3 0x16A JUMP JUMPDEST PUSH3 0x23C DUP2 PUSH3 0x235 DUP5 SLOAD PUSH3 0x17E JUMP JUMPDEST DUP5 PUSH3 0x1B8 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x272 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CC JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x281 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C0 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x196A DUP1 PUSH3 0x2E2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0x98BDF6F5 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xF1537686 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x419 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98BDF6F5 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x9C9B68E3 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x8DF9612B EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x901E1C01 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x31E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40D097C3 GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x4F4ACCDF GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x4F4ACCDF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x6E0CEE09 EQ PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x5D85EDA EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x211 SWAP1 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x247 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x272 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x247 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x379 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x211 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x40C PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x477 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x502 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x502 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x516 DUP3 PUSH2 0xB2E JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x477 JUMP JUMPDEST PUSH2 0x53E DUP3 DUP3 CALLER PUSH2 0xB66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x57C DUP4 DUP4 CALLER PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0xBBA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5EC PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F8 DUP3 DUP3 PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x632 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x655 DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x678 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x95E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x53E PUSH0 DUP3 CALLER PUSH2 0xB73 JUMP JUMPDEST PUSH0 PUSH2 0x477 DUP3 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6C2 SWAP1 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x6DD DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x78C JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FD JUMPI PUSH2 0x6FD PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x784 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD DUP6 MSTORE DUP1 DUP4 MSTORE SWAP1 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 PUSH2 0x747 DUP5 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x77E DUP4 PUSH2 0x1796 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6E1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x7B0 DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x808 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x5E0 PUSH0 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x819 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x83B SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x867 SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x889 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x895 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x8DF PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x8ED PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x90D PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0xB PUSH0 PUSH2 0x91B PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x938 SWAP1 DUP3 PUSH2 0x17EF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH2 0x53E CALLER DUP4 DUP4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x969 DUP5 DUP5 DUP5 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x5CA DUP5 DUP5 DUP5 DUP5 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x980 DUP3 PUSH2 0xB2E JUMP JUMPDEST POP PUSH0 PUSH2 0x996 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9DF JUMP JUMPDEST DUP1 PUSH2 0x9BE DUP5 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CF SWAP3 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA47 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA70 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xAB7 DUP4 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAD7 JUMPI PUSH2 0xAD7 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA75 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF9 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xC25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x678 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF0F JUMP JUMPDEST PUSH0 PUSH2 0xB7F DUP5 DUP5 DUP5 PUSH2 0x1013 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xBC2 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x53E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x104A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC86 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBEF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD9B SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDD5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDD2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE3C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE8B DUP4 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEAA PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xED4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEDE JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF23 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFE4 JUMPI PUSH0 PUSH2 0xF32 DUP5 PUSH2 0xB2E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF5E JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF71 JUMPI POP PUSH2 0xF6F DUP2 DUP5 PUSH2 0x9E6 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFE2 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x101C PUSH2 0x1060 JUMP JUMPDEST PUSH2 0xB7F DUP5 DUP5 DUP5 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1054 DUP4 DUP4 PUSH2 0x124D JUMP JUMPDEST PUSH2 0x678 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x10C2 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x10EE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x110C JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1124 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1138 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x114A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x477 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1187 DUP2 DUP5 DUP7 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x11C1 JUMPI PUSH2 0x11A2 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x11EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1276 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH0 PUSH2 0x1282 DUP4 DUP4 PUSH0 PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x12B9 DUP4 DUP4 DUP4 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x678 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x567 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB7F JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x134B JUMPI POP PUSH2 0x134B DUP5 DUP5 PUSH2 0x9E6 JUMP JUMPDEST DUP1 PUSH2 0xB7F JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB2B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9DF DUP2 PUSH2 0x1373 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9DF DUP3 PUSH2 0x13A3 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13D9 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1410 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F9 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1467 DUP4 PUSH2 0x13A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1487 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1490 DUP5 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x149E PUSH1 0x20 DUP6 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C9 DUP5 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x14DE PUSH1 0x40 DUP6 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH2 0x14F9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x1539 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1561 JUMPI PUSH2 0x1561 PUSH2 0x150B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1579 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x15C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15D8 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x151F JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1601 DUP4 PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1615 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x163C DUP6 PUSH2 0x13A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x164A PUSH1 0x20 DUP7 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x166C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x167C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x168B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B1 DUP4 PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BF PUSH1 0x20 DUP5 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16FF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x16E3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x171F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x173D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1768 JUMPI PUSH2 0x1768 PUSH2 0x1743 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x477 JUMPI PUSH2 0x477 PUSH2 0x1743 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x17A4 JUMPI PUSH2 0x17A4 PUSH2 0x1743 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x678 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17D0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE78 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17DC JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1809 JUMPI PUSH2 0x1809 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x181D DUP2 PUSH2 0x1817 DUP5 SLOAD PUSH2 0x170B JUMP JUMPDEST DUP5 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1850 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1839 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x18A7 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x187E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x185F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x189B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x18C0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13D7 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x18D4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x13D7 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x190F SWAP1 DUP4 ADD DUP5 PUSH2 0x13F9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1929 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9DF DUP2 PUSH2 0x1373 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB9 PUSH1 0xFF PUSH3 0xE17506 0xBD SIGNEXTEND SHR DUP1 PUSH25 0xA71363D9D30F5FA261FDDCEC83116810533B1264736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "426:2304:16:-:0;;;875:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;963:12;1381:113:2;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:2;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:2;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;1231:7:10;:15;;-1:-1:-1;;1231:15:10;;;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3142:51:17;3115:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;875:108:16;426:2304;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:17:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:17;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:17:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:17;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:17;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:17;;;2841:26;2792:89;-1:-1:-1;;1603:1:17;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:17;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:17;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;2996:203::-;426:2304:16;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EnterData_3290": {
									"entryPoint": 2263,
									"id": 3290,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@TokenId_3214": {
									"entryPoint": null,
									"id": 3214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@URICount_3208": {
									"entryPoint": null,
									"id": 3208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@URI_3223": {
									"entryPoint": 2081,
									"id": 3223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1096": {
									"entryPoint": 2918,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 3855,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 4782,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 3417,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2951,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": null,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 4882,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 4685,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1532": {
									"entryPoint": null,
									"id": 1532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_pause_1716": {
									"entryPoint": 3198,
									"id": 1716,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1687": {
									"entryPoint": 4192,
									"id": 1687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireOwned_1228": {
									"entryPoint": 2862,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requirePaused_1700": {
									"entryPoint": 4135,
									"id": 1700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeMint_915": {
									"entryPoint": 3084,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_941": {
									"entryPoint": 4170,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 3259,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3109,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1732": {
									"entryPoint": 3002,
									"id": 1732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1491": {
									"entryPoint": 4115,
									"id": 1491,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3476": {
									"entryPoint": 2931,
									"id": 3476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_850": {
									"entryPoint": 4443,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_505": {
									"entryPoint": 1331,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 1979,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1456": {
									"entryPoint": 1661,
									"id": 1456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@count_3218": {
									"entryPoint": null,
									"id": 3218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1560": {
									"entryPoint": null,
									"id": 1560,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 1292,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenId_3377": {
									"entryPoint": 2579,
									"id": 3377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1574": {
									"entryPoint": null,
									"id": 1574,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_555": {
									"entryPoint": 2534,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2898": {
									"entryPoint": 4228,
									"id": 2898,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_435": {
									"entryPoint": 1149,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_426": {
									"entryPoint": 1672,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3252": {
									"entryPoint": 2065,
									"id": 3252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1675": {
									"entryPoint": null,
									"id": 1675,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2048,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3327": {
									"entryPoint": 1506,
									"id": 3327,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 1630,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 2398,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_538": {
									"entryPoint": 2387,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2011": {
									"entryPoint": null,
									"id": 2011,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 1068,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 2248,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1801": {
									"entryPoint": 3711,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenIdCounter_3205": {
									"entryPoint": null,
									"id": 3205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_480": {
									"entryPoint": 2421,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 1346,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2801,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_3261": {
									"entryPoint": 1488,
									"id": 3261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTokenId_3454": {
									"entryPoint": 1682,
									"id": 3454,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12074:17",
										"nodeType": "YulBlock",
										"src": "0:12074:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:17",
													"nodeType": "YulBlock",
													"src": "58:87:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:17",
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:17",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:17",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nativeSrc": "125:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nativeSrc": "125:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:17",
																								"nodeType": "YulLiteral",
																								"src": "103:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:17",
																								"nodeType": "YulLiteral",
																								"src": "108:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:17"
																						},
																						"nativeSrc": "99:20:17",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:17"
																				},
																				"nativeSrc": "88:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:17"
																		},
																		"nativeSrc": "78:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:17"
																},
																"nativeSrc": "71:51:17",
																"nodeType": "YulFunctionCall",
																"src": "71:51:17"
															},
															"nativeSrc": "68:71:17",
															"nodeType": "YulIf",
															"src": "68:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:17",
														"nodeType": "YulTypedName",
														"src": "47:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nativeSrc": "219:176:17",
													"nodeType": "YulBlock",
													"src": "219:176:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:17",
																"nodeType": "YulBlock",
																"src": "265:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:17",
																					"nodeType": "YulLiteral",
																					"src": "274:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:17",
																					"nodeType": "YulLiteral",
																					"src": "277:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:17"
																			},
																			"nativeSrc": "267:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:17"
																		},
																		"nativeSrc": "267:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:17"
																		},
																		"nativeSrc": "236:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:17",
																		"nodeType": "YulLiteral",
																		"src": "261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:17"
																},
																"nativeSrc": "232:32:17",
																"nodeType": "YulFunctionCall",
																"src": "232:32:17"
															},
															"nativeSrc": "229:52:17",
															"nodeType": "YulIf",
															"src": "229:52:17"
														},
														{
															"nativeSrc": "290:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:17"
																},
																"nativeSrc": "303:23:17",
																"nodeType": "YulFunctionCall",
																"src": "303:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:17",
																	"nodeType": "YulTypedName",
																	"src": "294:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:17"
																},
																"nativeSrc": "335:30:17",
																"nodeType": "YulFunctionCall",
																"src": "335:30:17"
															},
															"nativeSrc": "335:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:17"
														},
														{
															"nativeSrc": "374:15:17",
															"nodeType": "YulAssignment",
															"src": "374:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:17",
																"nodeType": "YulIdentifier",
																"src": "384:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:17",
														"nodeType": "YulTypedName",
														"src": "185:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:17",
														"nodeType": "YulTypedName",
														"src": "196:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:17",
														"nodeType": "YulTypedName",
														"src": "208:6:17",
														"type": ""
													}
												],
												"src": "150:245:17"
											},
											{
												"body": {
													"nativeSrc": "495:92:17",
													"nodeType": "YulBlock",
													"src": "495:92:17",
													"statements": [
														{
															"nativeSrc": "505:26:17",
															"nodeType": "YulAssignment",
															"src": "505:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:17",
																		"nodeType": "YulLiteral",
																		"src": "528:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:17"
																},
																"nativeSrc": "513:18:17",
																"nodeType": "YulFunctionCall",
																"src": "513:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:17"
																				},
																				"nativeSrc": "565:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:17"
																		},
																		"nativeSrc": "558:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:17"
																},
																"nativeSrc": "540:41:17",
																"nodeType": "YulFunctionCall",
																"src": "540:41:17"
															},
															"nativeSrc": "540:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:17",
														"nodeType": "YulTypedName",
														"src": "464:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:17",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:17",
														"nodeType": "YulTypedName",
														"src": "486:4:17",
														"type": ""
													}
												],
												"src": "400:187:17"
											},
											{
												"body": {
													"nativeSrc": "641:124:17",
													"nodeType": "YulBlock",
													"src": "641:124:17",
													"statements": [
														{
															"nativeSrc": "651:29:17",
															"nodeType": "YulAssignment",
															"src": "651:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "673:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "673:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "660:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "660:12:17"
																},
																"nativeSrc": "660:20:17",
																"nodeType": "YulFunctionCall",
																"src": "660:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "651:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "651:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "743:16:17",
																"nodeType": "YulBlock",
																"src": "743:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "752:1:17",
																					"nodeType": "YulLiteral",
																					"src": "752:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "755:1:17",
																					"nodeType": "YulLiteral",
																					"src": "755:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "745:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:17"
																			},
																			"nativeSrc": "745:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "745:12:17"
																		},
																		"nativeSrc": "745:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "745:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "702:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "702:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "713:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "713:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "728:3:17",
																										"nodeType": "YulLiteral",
																										"src": "728:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "733:1:17",
																										"nodeType": "YulLiteral",
																										"src": "733:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "724:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "724:3:17"
																								},
																								"nativeSrc": "724:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "724:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "737:1:17",
																								"nodeType": "YulLiteral",
																								"src": "737:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "720:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "720:3:17"
																						},
																						"nativeSrc": "720:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "720:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "709:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:17"
																				},
																				"nativeSrc": "709:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "709:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "699:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "699:2:17"
																		},
																		"nativeSrc": "699:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "699:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "692:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:17"
																},
																"nativeSrc": "692:50:17",
																"nodeType": "YulFunctionCall",
																"src": "692:50:17"
															},
															"nativeSrc": "689:70:17",
															"nodeType": "YulIf",
															"src": "689:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "592:173:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "620:6:17",
														"nodeType": "YulTypedName",
														"src": "620:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "631:5:17",
														"nodeType": "YulTypedName",
														"src": "631:5:17",
														"type": ""
													}
												],
												"src": "592:173:17"
											},
											{
												"body": {
													"nativeSrc": "840:116:17",
													"nodeType": "YulBlock",
													"src": "840:116:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "886:16:17",
																"nodeType": "YulBlock",
																"src": "886:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "895:1:17",
																					"nodeType": "YulLiteral",
																					"src": "895:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "898:1:17",
																					"nodeType": "YulLiteral",
																					"src": "898:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "888:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "888:6:17"
																			},
																			"nativeSrc": "888:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "888:12:17"
																		},
																		"nativeSrc": "888:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "888:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "861:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "861:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "857:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:17"
																		},
																		"nativeSrc": "857:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "857:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "882:2:17",
																		"nodeType": "YulLiteral",
																		"src": "882:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "853:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "853:3:17"
																},
																"nativeSrc": "853:32:17",
																"nodeType": "YulFunctionCall",
																"src": "853:32:17"
															},
															"nativeSrc": "850:52:17",
															"nodeType": "YulIf",
															"src": "850:52:17"
														},
														{
															"nativeSrc": "911:39:17",
															"nodeType": "YulAssignment",
															"src": "911:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "940:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "940:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "921:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "921:18:17"
																},
																"nativeSrc": "921:29:17",
																"nodeType": "YulFunctionCall",
																"src": "921:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "911:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "770:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "806:9:17",
														"nodeType": "YulTypedName",
														"src": "806:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "817:7:17",
														"nodeType": "YulTypedName",
														"src": "817:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "829:6:17",
														"nodeType": "YulTypedName",
														"src": "829:6:17",
														"type": ""
													}
												],
												"src": "770:186:17"
											},
											{
												"body": {
													"nativeSrc": "1062:76:17",
													"nodeType": "YulBlock",
													"src": "1062:76:17",
													"statements": [
														{
															"nativeSrc": "1072:26:17",
															"nodeType": "YulAssignment",
															"src": "1072:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1084:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1084:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1095:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1095:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1080:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1080:3:17"
																},
																"nativeSrc": "1080:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1080:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1072:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1072:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1114:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1114:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1125:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1125:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1107:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:17"
																},
																"nativeSrc": "1107:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1107:25:17"
															},
															"nativeSrc": "1107:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1107:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "961:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1031:9:17",
														"nodeType": "YulTypedName",
														"src": "1031:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1042:6:17",
														"nodeType": "YulTypedName",
														"src": "1042:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1053:4:17",
														"nodeType": "YulTypedName",
														"src": "1053:4:17",
														"type": ""
													}
												],
												"src": "961:177:17"
											},
											{
												"body": {
													"nativeSrc": "1209:184:17",
													"nodeType": "YulBlock",
													"src": "1209:184:17",
													"statements": [
														{
															"nativeSrc": "1219:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1228:1:17",
																"nodeType": "YulLiteral",
																"src": "1228:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1223:1:17",
																	"nodeType": "YulTypedName",
																	"src": "1223:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1288:63:17",
																"nodeType": "YulBlock",
																"src": "1288:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1313:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1313:3:17"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1318:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "1318:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1309:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1309:3:17"
																					},
																					"nativeSrc": "1309:11:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1309:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1332:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1332:3:17"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1337:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "1337:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1328:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "1328:3:17"
																							},
																							"nativeSrc": "1328:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "1328:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1322:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1322:5:17"
																					},
																					"nativeSrc": "1322:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1322:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1302:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:17"
																			},
																			"nativeSrc": "1302:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1302:39:17"
																		},
																		"nativeSrc": "1302:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1249:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "1249:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1252:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1246:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1246:2:17"
																},
																"nativeSrc": "1246:13:17",
																"nodeType": "YulFunctionCall",
																"src": "1246:13:17"
															},
															"nativeSrc": "1238:113:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1260:19:17",
																"nodeType": "YulBlock",
																"src": "1260:19:17",
																"statements": [
																	{
																		"nativeSrc": "1262:15:17",
																		"nodeType": "YulAssignment",
																		"src": "1262:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1271:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "1271:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1274:2:17",
																					"nodeType": "YulLiteral",
																					"src": "1274:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1267:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1267:3:17"
																			},
																			"nativeSrc": "1267:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1267:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1262:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "1262:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1242:3:17",
																"nodeType": "YulBlock",
																"src": "1242:3:17",
																"statements": []
															},
															"src": "1238:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1371:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1371:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1376:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1376:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1367:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:17"
																		},
																		"nativeSrc": "1367:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1385:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1385:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:17"
																},
																"nativeSrc": "1360:27:17",
																"nodeType": "YulFunctionCall",
																"src": "1360:27:17"
															},
															"nativeSrc": "1360:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "1360:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1143:250:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1187:3:17",
														"nodeType": "YulTypedName",
														"src": "1187:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1192:3:17",
														"nodeType": "YulTypedName",
														"src": "1192:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1197:6:17",
														"nodeType": "YulTypedName",
														"src": "1197:6:17",
														"type": ""
													}
												],
												"src": "1143:250:17"
											},
											{
												"body": {
													"nativeSrc": "1448:221:17",
													"nodeType": "YulBlock",
													"src": "1448:221:17",
													"statements": [
														{
															"nativeSrc": "1458:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1458:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1478:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1472:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1472:5:17"
																},
																"nativeSrc": "1472:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1472:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1462:6:17",
																	"nodeType": "YulTypedName",
																	"src": "1462:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1500:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1500:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1505:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1505:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1493:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:17"
																},
																"nativeSrc": "1493:19:17",
																"nodeType": "YulFunctionCall",
																"src": "1493:19:17"
															},
															"nativeSrc": "1493:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "1493:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1560:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1560:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1567:4:17",
																				"nodeType": "YulLiteral",
																				"src": "1567:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1556:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:17"
																		},
																		"nativeSrc": "1556:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1578:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1578:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1583:4:17",
																				"nodeType": "YulLiteral",
																				"src": "1583:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1574:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1574:3:17"
																		},
																		"nativeSrc": "1574:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1574:14:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1590:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1590:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1521:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "1521:34:17"
																},
																"nativeSrc": "1521:76:17",
																"nodeType": "YulFunctionCall",
																"src": "1521:76:17"
															},
															"nativeSrc": "1521:76:17",
															"nodeType": "YulExpressionStatement",
															"src": "1521:76:17"
														},
														{
															"nativeSrc": "1606:57:17",
															"nodeType": "YulAssignment",
															"src": "1606:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1621:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1621:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1634:6:17",
																								"nodeType": "YulIdentifier",
																								"src": "1634:6:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1642:2:17",
																								"nodeType": "YulLiteral",
																								"src": "1642:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1630:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1630:3:17"
																						},
																						"nativeSrc": "1630:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1630:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1651:2:17",
																								"nodeType": "YulLiteral",
																								"src": "1651:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1647:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1647:3:17"
																						},
																						"nativeSrc": "1647:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "1647:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1626:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1626:3:17"
																				},
																				"nativeSrc": "1626:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1626:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1617:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1617:3:17"
																		},
																		"nativeSrc": "1617:39:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1617:39:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1658:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1658:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1613:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1613:3:17"
																},
																"nativeSrc": "1613:50:17",
																"nodeType": "YulFunctionCall",
																"src": "1613:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1606:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1398:271:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1425:5:17",
														"nodeType": "YulTypedName",
														"src": "1425:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1432:3:17",
														"nodeType": "YulTypedName",
														"src": "1432:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1440:3:17",
														"nodeType": "YulTypedName",
														"src": "1440:3:17",
														"type": ""
													}
												],
												"src": "1398:271:17"
											},
											{
												"body": {
													"nativeSrc": "1795:99:17",
													"nodeType": "YulBlock",
													"src": "1795:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1812:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1823:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1805:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:17"
																},
																"nativeSrc": "1805:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1805:21:17"
															},
															"nativeSrc": "1805:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "1805:21:17"
														},
														{
															"nativeSrc": "1835:53:17",
															"nodeType": "YulAssignment",
															"src": "1835:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1861:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1873:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1873:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1884:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1884:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1869:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:17"
																		},
																		"nativeSrc": "1869:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1869:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1843:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "1843:17:17"
																},
																"nativeSrc": "1843:45:17",
																"nodeType": "YulFunctionCall",
																"src": "1843:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1674:220:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1764:9:17",
														"nodeType": "YulTypedName",
														"src": "1764:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1775:6:17",
														"nodeType": "YulTypedName",
														"src": "1775:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1786:4:17",
														"nodeType": "YulTypedName",
														"src": "1786:4:17",
														"type": ""
													}
												],
												"src": "1674:220:17"
											},
											{
												"body": {
													"nativeSrc": "1969:110:17",
													"nodeType": "YulBlock",
													"src": "1969:110:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2015:16:17",
																"nodeType": "YulBlock",
																"src": "2015:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2027:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2027:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2017:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:17"
																			},
																			"nativeSrc": "2017:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2017:12:17"
																		},
																		"nativeSrc": "2017:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1990:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1999:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1986:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:17"
																		},
																		"nativeSrc": "1986:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1986:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1982:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:17"
																},
																"nativeSrc": "1982:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1982:32:17"
															},
															"nativeSrc": "1979:52:17",
															"nodeType": "YulIf",
															"src": "1979:52:17"
														},
														{
															"nativeSrc": "2040:33:17",
															"nodeType": "YulAssignment",
															"src": "2040:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2063:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2063:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2050:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2050:12:17"
																},
																"nativeSrc": "2050:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2050:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2040:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1899:180:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1935:9:17",
														"nodeType": "YulTypedName",
														"src": "1935:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1946:7:17",
														"nodeType": "YulTypedName",
														"src": "1946:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1958:6:17",
														"nodeType": "YulTypedName",
														"src": "1958:6:17",
														"type": ""
													}
												],
												"src": "1899:180:17"
											},
											{
												"body": {
													"nativeSrc": "2185:102:17",
													"nodeType": "YulBlock",
													"src": "2185:102:17",
													"statements": [
														{
															"nativeSrc": "2195:26:17",
															"nodeType": "YulAssignment",
															"src": "2195:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2207:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2207:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2218:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2218:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2203:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:17"
																},
																"nativeSrc": "2203:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2203:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2195:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2195:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2237:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2237:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2252:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2252:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2268:3:17",
																								"nodeType": "YulLiteral",
																								"src": "2268:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2273:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2273:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2264:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2264:3:17"
																						},
																						"nativeSrc": "2264:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2264:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2277:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2277:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2260:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2260:3:17"
																				},
																				"nativeSrc": "2260:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2260:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2248:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2248:3:17"
																		},
																		"nativeSrc": "2248:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2248:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2230:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:17"
																},
																"nativeSrc": "2230:51:17",
																"nodeType": "YulFunctionCall",
																"src": "2230:51:17"
															},
															"nativeSrc": "2230:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "2230:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2084:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2154:9:17",
														"nodeType": "YulTypedName",
														"src": "2154:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2165:6:17",
														"nodeType": "YulTypedName",
														"src": "2165:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2176:4:17",
														"nodeType": "YulTypedName",
														"src": "2176:4:17",
														"type": ""
													}
												],
												"src": "2084:203:17"
											},
											{
												"body": {
													"nativeSrc": "2379:167:17",
													"nodeType": "YulBlock",
													"src": "2379:167:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2425:16:17",
																"nodeType": "YulBlock",
																"src": "2425:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2434:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2437:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2427:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:17"
																			},
																			"nativeSrc": "2427:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:17"
																		},
																		"nativeSrc": "2427:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2400:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2400:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2409:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2409:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2396:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:17"
																		},
																		"nativeSrc": "2396:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2421:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2421:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2392:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2392:3:17"
																},
																"nativeSrc": "2392:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2392:32:17"
															},
															"nativeSrc": "2389:52:17",
															"nodeType": "YulIf",
															"src": "2389:52:17"
														},
														{
															"nativeSrc": "2450:39:17",
															"nodeType": "YulAssignment",
															"src": "2450:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2479:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2460:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2460:18:17"
																},
																"nativeSrc": "2460:29:17",
																"nodeType": "YulFunctionCall",
																"src": "2460:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2450:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:17"
																}
															]
														},
														{
															"nativeSrc": "2498:42:17",
															"nodeType": "YulAssignment",
															"src": "2498:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2525:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2536:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2536:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2521:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:17"
																		},
																		"nativeSrc": "2521:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2521:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2508:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2508:12:17"
																},
																"nativeSrc": "2508:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2508:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2498:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2498:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2292:254:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2337:9:17",
														"nodeType": "YulTypedName",
														"src": "2337:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2348:7:17",
														"nodeType": "YulTypedName",
														"src": "2348:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2360:6:17",
														"nodeType": "YulTypedName",
														"src": "2360:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2368:6:17",
														"nodeType": "YulTypedName",
														"src": "2368:6:17",
														"type": ""
													}
												],
												"src": "2292:254:17"
											},
											{
												"body": {
													"nativeSrc": "2655:224:17",
													"nodeType": "YulBlock",
													"src": "2655:224:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2701:16:17",
																"nodeType": "YulBlock",
																"src": "2701:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2710:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2710:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2713:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2713:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2703:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2703:6:17"
																			},
																			"nativeSrc": "2703:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2703:12:17"
																		},
																		"nativeSrc": "2703:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2703:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2676:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2676:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2685:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2672:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2672:3:17"
																		},
																		"nativeSrc": "2672:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2672:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2697:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2668:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:17"
																},
																"nativeSrc": "2668:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2668:32:17"
															},
															"nativeSrc": "2665:52:17",
															"nodeType": "YulIf",
															"src": "2665:52:17"
														},
														{
															"nativeSrc": "2726:39:17",
															"nodeType": "YulAssignment",
															"src": "2726:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2755:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2755:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2736:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2736:18:17"
																},
																"nativeSrc": "2736:29:17",
																"nodeType": "YulFunctionCall",
																"src": "2736:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2726:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:17"
																}
															]
														},
														{
															"nativeSrc": "2774:48:17",
															"nodeType": "YulAssignment",
															"src": "2774:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2807:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2807:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2818:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2818:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2803:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2803:3:17"
																		},
																		"nativeSrc": "2803:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2803:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2784:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2784:18:17"
																},
																"nativeSrc": "2784:38:17",
																"nodeType": "YulFunctionCall",
																"src": "2784:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2774:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:17"
																}
															]
														},
														{
															"nativeSrc": "2831:42:17",
															"nodeType": "YulAssignment",
															"src": "2831:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2858:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2858:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2869:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2869:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2854:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2854:3:17"
																		},
																		"nativeSrc": "2854:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2854:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2841:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2841:12:17"
																},
																"nativeSrc": "2841:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2841:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2831:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2551:328:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2605:9:17",
														"nodeType": "YulTypedName",
														"src": "2605:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2616:7:17",
														"nodeType": "YulTypedName",
														"src": "2616:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2628:6:17",
														"nodeType": "YulTypedName",
														"src": "2628:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2636:6:17",
														"nodeType": "YulTypedName",
														"src": "2636:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2644:6:17",
														"nodeType": "YulTypedName",
														"src": "2644:6:17",
														"type": ""
													}
												],
												"src": "2551:328:17"
											},
											{
												"body": {
													"nativeSrc": "2988:224:17",
													"nodeType": "YulBlock",
													"src": "2988:224:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3034:16:17",
																"nodeType": "YulBlock",
																"src": "3034:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3043:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3043:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3046:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3046:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3036:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:17"
																			},
																			"nativeSrc": "3036:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3036:12:17"
																		},
																		"nativeSrc": "3036:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3036:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3009:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3009:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3018:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3005:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:17"
																		},
																		"nativeSrc": "3005:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3030:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3030:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3001:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:17"
																},
																"nativeSrc": "3001:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3001:32:17"
															},
															"nativeSrc": "2998:52:17",
															"nodeType": "YulIf",
															"src": "2998:52:17"
														},
														{
															"nativeSrc": "3059:39:17",
															"nodeType": "YulAssignment",
															"src": "3059:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3088:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3069:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "3069:18:17"
																},
																"nativeSrc": "3069:29:17",
																"nodeType": "YulFunctionCall",
																"src": "3069:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3059:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:17"
																}
															]
														},
														{
															"nativeSrc": "3107:42:17",
															"nodeType": "YulAssignment",
															"src": "3107:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3134:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3134:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3145:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3145:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3130:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3130:3:17"
																		},
																		"nativeSrc": "3130:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3130:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3117:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3117:12:17"
																},
																"nativeSrc": "3117:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3117:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3107:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3107:6:17"
																}
															]
														},
														{
															"nativeSrc": "3158:48:17",
															"nodeType": "YulAssignment",
															"src": "3158:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3202:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3202:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3187:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:17"
																		},
																		"nativeSrc": "3187:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3187:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3168:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "3168:18:17"
																},
																"nativeSrc": "3168:38:17",
																"nodeType": "YulFunctionCall",
																"src": "3168:38:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3158:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nativeSrc": "2884:328:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2938:9:17",
														"nodeType": "YulTypedName",
														"src": "2938:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2949:7:17",
														"nodeType": "YulTypedName",
														"src": "2949:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2961:6:17",
														"nodeType": "YulTypedName",
														"src": "2961:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2969:6:17",
														"nodeType": "YulTypedName",
														"src": "2969:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2977:6:17",
														"nodeType": "YulTypedName",
														"src": "2977:6:17",
														"type": ""
													}
												],
												"src": "2884:328:17"
											},
											{
												"body": {
													"nativeSrc": "3394:185:17",
													"nodeType": "YulBlock",
													"src": "3394:185:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3411:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3411:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3422:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3404:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3404:6:17"
																},
																"nativeSrc": "3404:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3404:21:17"
															},
															"nativeSrc": "3404:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "3404:21:17"
														},
														{
															"nativeSrc": "3434:53:17",
															"nodeType": "YulAssignment",
															"src": "3434:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3460:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3460:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3472:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3472:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3483:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3483:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3468:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:17"
																		},
																		"nativeSrc": "3468:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3442:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "3442:17:17"
																},
																"nativeSrc": "3442:45:17",
																"nodeType": "YulFunctionCall",
																"src": "3442:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3434:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3434:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3507:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3507:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3518:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3518:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3503:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:17"
																		},
																		"nativeSrc": "3503:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3503:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3523:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3523:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3496:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:17"
																},
																"nativeSrc": "3496:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3496:34:17"
															},
															"nativeSrc": "3496:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3496:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3550:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3550:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3561:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3561:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3546:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:17"
																		},
																		"nativeSrc": "3546:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3546:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3566:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3539:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3539:6:17"
																},
																"nativeSrc": "3539:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3539:34:17"
															},
															"nativeSrc": "3539:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3539:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3217:362:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3347:9:17",
														"nodeType": "YulTypedName",
														"src": "3347:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3358:6:17",
														"nodeType": "YulTypedName",
														"src": "3358:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3366:6:17",
														"nodeType": "YulTypedName",
														"src": "3366:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3374:6:17",
														"nodeType": "YulTypedName",
														"src": "3374:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3385:4:17",
														"nodeType": "YulTypedName",
														"src": "3385:4:17",
														"type": ""
													}
												],
												"src": "3217:362:17"
											},
											{
												"body": {
													"nativeSrc": "3616:95:17",
													"nodeType": "YulBlock",
													"src": "3616:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3633:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3633:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3640:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3640:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3645:10:17",
																				"nodeType": "YulLiteral",
																				"src": "3645:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3636:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3636:3:17"
																		},
																		"nativeSrc": "3636:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3636:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3626:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3626:6:17"
																},
																"nativeSrc": "3626:31:17",
																"nodeType": "YulFunctionCall",
																"src": "3626:31:17"
															},
															"nativeSrc": "3626:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "3626:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3673:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3673:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3676:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3676:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3666:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:17"
																},
																"nativeSrc": "3666:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3666:15:17"
															},
															"nativeSrc": "3666:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "3666:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3697:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3697:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3700:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3700:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3690:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:17"
																},
																"nativeSrc": "3690:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3690:15:17"
															},
															"nativeSrc": "3690:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "3690:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3584:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:127:17"
											},
											{
												"body": {
													"nativeSrc": "3791:557:17",
													"nodeType": "YulBlock",
													"src": "3791:557:17",
													"statements": [
														{
															"nativeSrc": "3801:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3801:28:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3811:18:17",
																"nodeType": "YulLiteral",
																"src": "3811:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3805:2:17",
																	"nodeType": "YulTypedName",
																	"src": "3805:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3856:22:17",
																"nodeType": "YulBlock",
																"src": "3856:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3858:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "3858:16:17"
																			},
																			"nativeSrc": "3858:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3858:18:17"
																		},
																		"nativeSrc": "3858:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3858:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3844:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3844:6:17"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3852:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "3852:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3841:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3841:2:17"
																},
																"nativeSrc": "3841:14:17",
																"nodeType": "YulFunctionCall",
																"src": "3841:14:17"
															},
															"nativeSrc": "3838:40:17",
															"nodeType": "YulIf",
															"src": "3838:40:17"
														},
														{
															"nativeSrc": "3887:17:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3887:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3901:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3901:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3897:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3897:3:17"
																},
																"nativeSrc": "3897:7:17",
																"nodeType": "YulFunctionCall",
																"src": "3897:7:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3891:2:17",
																	"nodeType": "YulTypedName",
																	"src": "3891:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3913:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3913:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3927:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3927:5:17"
																},
																"nativeSrc": "3927:9:17",
																"nodeType": "YulFunctionCall",
																"src": "3927:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3917:6:17",
																	"nodeType": "YulTypedName",
																	"src": "3917:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3945:73:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3945:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3967:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3967:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3991:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "3991:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3999:2:17",
																										"nodeType": "YulLiteral",
																										"src": "3999:2:17",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3987:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3987:3:17"
																								},
																								"nativeSrc": "3987:15:17",
																								"nodeType": "YulFunctionCall",
																								"src": "3987:15:17"
																							},
																							{
																								"name": "_2",
																								"nativeSrc": "4004:2:17",
																								"nodeType": "YulIdentifier",
																								"src": "4004:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3983:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "3983:3:17"
																						},
																						"nativeSrc": "3983:24:17",
																						"nodeType": "YulFunctionCall",
																						"src": "3983:24:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4009:2:17",
																						"nodeType": "YulLiteral",
																						"src": "4009:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3979:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3979:3:17"
																				},
																				"nativeSrc": "3979:33:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3979:33:17"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "4014:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4014:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3975:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:17"
																		},
																		"nativeSrc": "3975:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3975:42:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3963:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:17"
																},
																"nativeSrc": "3963:55:17",
																"nodeType": "YulFunctionCall",
																"src": "3963:55:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3949:10:17",
																	"nodeType": "YulTypedName",
																	"src": "3949:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4077:22:17",
																"nodeType": "YulBlock",
																"src": "4077:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4079:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4079:16:17"
																			},
																			"nativeSrc": "4079:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4079:18:17"
																		},
																		"nativeSrc": "4079:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4079:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4036:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "4036:10:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4048:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4048:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4033:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4033:2:17"
																		},
																		"nativeSrc": "4033:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4033:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4056:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "4056:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4068:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4068:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4053:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4053:2:17"
																		},
																		"nativeSrc": "4053:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4030:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4030:2:17"
																},
																"nativeSrc": "4030:46:17",
																"nodeType": "YulFunctionCall",
																"src": "4030:46:17"
															},
															"nativeSrc": "4027:72:17",
															"nodeType": "YulIf",
															"src": "4027:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4115:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4115:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4119:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "4119:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4108:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4108:6:17"
																},
																"nativeSrc": "4108:22:17",
																"nodeType": "YulFunctionCall",
																"src": "4108:22:17"
															},
															"nativeSrc": "4108:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "4108:22:17"
														},
														{
															"nativeSrc": "4139:15:17",
															"nodeType": "YulAssignment",
															"src": "4139:15:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4148:6:17",
																"nodeType": "YulIdentifier",
																"src": "4148:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4139:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4139:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4170:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4170:6:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4178:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4178:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4163:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4163:6:17"
																},
																"nativeSrc": "4163:22:17",
																"nodeType": "YulFunctionCall",
																"src": "4163:22:17"
															},
															"nativeSrc": "4163:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "4163:22:17"
														},
														{
															"body": {
																"nativeSrc": "4223:16:17",
																"nodeType": "YulBlock",
																"src": "4223:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4232:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4232:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4235:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4235:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4225:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:17"
																			},
																			"nativeSrc": "4225:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4225:12:17"
																		},
																		"nativeSrc": "4225:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4225:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4204:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "4204:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4209:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4209:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4200:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:17"
																		},
																		"nativeSrc": "4200:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4218:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4218:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4197:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4197:2:17"
																},
																"nativeSrc": "4197:25:17",
																"nodeType": "YulFunctionCall",
																"src": "4197:25:17"
															},
															"nativeSrc": "4194:45:17",
															"nodeType": "YulIf",
															"src": "4194:45:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4265:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4265:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4273:4:17",
																				"nodeType": "YulLiteral",
																				"src": "4273:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:17"
																		},
																		"nativeSrc": "4261:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:17:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4280:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4280:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4285:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4285:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4248:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4248:12:17"
																},
																"nativeSrc": "4248:44:17",
																"nodeType": "YulFunctionCall",
																"src": "4248:44:17"
															},
															"nativeSrc": "4248:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "4248:44:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4316:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4316:6:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4324:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4324:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4312:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4312:3:17"
																				},
																				"nativeSrc": "4312:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4312:19:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4333:4:17",
																				"nodeType": "YulLiteral",
																				"src": "4333:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4308:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4308:3:17"
																		},
																		"nativeSrc": "4308:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4308:30:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4340:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4340:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4301:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:17"
																},
																"nativeSrc": "4301:41:17",
																"nodeType": "YulFunctionCall",
																"src": "4301:41:17"
															},
															"nativeSrc": "4301:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "4301:41:17"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "3716:632:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3760:3:17",
														"nodeType": "YulTypedName",
														"src": "3760:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3765:6:17",
														"nodeType": "YulTypedName",
														"src": "3765:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3773:3:17",
														"nodeType": "YulTypedName",
														"src": "3773:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3781:5:17",
														"nodeType": "YulTypedName",
														"src": "3781:5:17",
														"type": ""
													}
												],
												"src": "3716:632:17"
											},
											{
												"body": {
													"nativeSrc": "4450:426:17",
													"nodeType": "YulBlock",
													"src": "4450:426:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4496:16:17",
																"nodeType": "YulBlock",
																"src": "4496:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4505:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4505:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4508:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4508:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4498:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4498:6:17"
																			},
																			"nativeSrc": "4498:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4498:12:17"
																		},
																		"nativeSrc": "4498:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4498:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4471:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4480:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4480:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4467:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:17"
																		},
																		"nativeSrc": "4467:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4467:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4492:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4492:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4463:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4463:3:17"
																},
																"nativeSrc": "4463:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4463:32:17"
															},
															"nativeSrc": "4460:52:17",
															"nodeType": "YulIf",
															"src": "4460:52:17"
														},
														{
															"nativeSrc": "4521:37:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4521:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4548:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4548:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4535:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4535:12:17"
																},
																"nativeSrc": "4535:23:17",
																"nodeType": "YulFunctionCall",
																"src": "4535:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4525:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4525:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4601:16:17",
																"nodeType": "YulBlock",
																"src": "4601:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4610:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4610:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4613:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4613:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4603:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4603:6:17"
																			},
																			"nativeSrc": "4603:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4603:12:17"
																		},
																		"nativeSrc": "4603:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4603:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4573:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4573:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4581:18:17",
																		"nodeType": "YulLiteral",
																		"src": "4581:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4570:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4570:2:17"
																},
																"nativeSrc": "4570:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4570:30:17"
															},
															"nativeSrc": "4567:50:17",
															"nodeType": "YulIf",
															"src": "4567:50:17"
														},
														{
															"nativeSrc": "4626:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4626:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4640:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4640:9:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4651:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4636:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:17"
																},
																"nativeSrc": "4636:22:17",
																"nodeType": "YulFunctionCall",
																"src": "4636:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4630:2:17",
																	"nodeType": "YulTypedName",
																	"src": "4630:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4706:16:17",
																"nodeType": "YulBlock",
																"src": "4706:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4715:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4715:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4718:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4718:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4708:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4708:6:17"
																			},
																			"nativeSrc": "4708:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4708:12:17"
																		},
																		"nativeSrc": "4708:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4708:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4685:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4685:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4689:4:17",
																						"nodeType": "YulLiteral",
																						"src": "4689:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4681:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4681:3:17"
																				},
																				"nativeSrc": "4681:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4681:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4696:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4696:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4677:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:17"
																		},
																		"nativeSrc": "4677:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4677:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4670:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:17"
																},
																"nativeSrc": "4670:35:17",
																"nodeType": "YulFunctionCall",
																"src": "4670:35:17"
															},
															"nativeSrc": "4667:55:17",
															"nodeType": "YulIf",
															"src": "4667:55:17"
														},
														{
															"nativeSrc": "4731:86:17",
															"nodeType": "YulAssignment",
															"src": "4731:86:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4780:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4780:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4784:4:17",
																				"nodeType": "YulLiteral",
																				"src": "4784:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4776:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4776:3:17"
																		},
																		"nativeSrc": "4776:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4776:13:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4804:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4804:2:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4791:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "4791:12:17"
																		},
																		"nativeSrc": "4791:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4791:16:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4809:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "4809:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "4741:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "4741:34:17"
																},
																"nativeSrc": "4741:76:17",
																"nodeType": "YulFunctionCall",
																"src": "4741:76:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4731:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4731:6:17"
																}
															]
														},
														{
															"nativeSrc": "4826:44:17",
															"nodeType": "YulAssignment",
															"src": "4826:44:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4853:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4853:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4864:4:17",
																				"nodeType": "YulLiteral",
																				"src": "4864:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4849:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:17"
																		},
																		"nativeSrc": "4849:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4849:20:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4836:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4836:12:17"
																},
																"nativeSrc": "4836:34:17",
																"nodeType": "YulFunctionCall",
																"src": "4836:34:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4826:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "4353:523:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4408:9:17",
														"nodeType": "YulTypedName",
														"src": "4408:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4419:7:17",
														"nodeType": "YulTypedName",
														"src": "4419:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4431:6:17",
														"nodeType": "YulTypedName",
														"src": "4431:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4439:6:17",
														"nodeType": "YulTypedName",
														"src": "4439:6:17",
														"type": ""
													}
												],
												"src": "4353:523:17"
											},
											{
												"body": {
													"nativeSrc": "4965:263:17",
													"nodeType": "YulBlock",
													"src": "4965:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5011:16:17",
																"nodeType": "YulBlock",
																"src": "5011:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5020:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5020:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5023:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5023:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5013:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:17"
																			},
																			"nativeSrc": "5013:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5013:12:17"
																		},
																		"nativeSrc": "5013:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5013:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4986:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4986:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4995:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4982:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4982:3:17"
																		},
																		"nativeSrc": "4982:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4982:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5007:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5007:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4978:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4978:3:17"
																},
																"nativeSrc": "4978:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4978:32:17"
															},
															"nativeSrc": "4975:52:17",
															"nodeType": "YulIf",
															"src": "4975:52:17"
														},
														{
															"nativeSrc": "5036:39:17",
															"nodeType": "YulAssignment",
															"src": "5036:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5065:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5065:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5046:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5046:18:17"
																},
																"nativeSrc": "5046:29:17",
																"nodeType": "YulFunctionCall",
																"src": "5046:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5036:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:17"
																}
															]
														},
														{
															"nativeSrc": "5084:45:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5084:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5114:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5114:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5125:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5125:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5110:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5110:3:17"
																		},
																		"nativeSrc": "5110:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5110:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5097:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5097:12:17"
																},
																"nativeSrc": "5097:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5097:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5088:5:17",
																	"nodeType": "YulTypedName",
																	"src": "5088:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5182:16:17",
																"nodeType": "YulBlock",
																"src": "5182:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5191:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5191:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5194:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5194:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5184:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5184:6:17"
																			},
																			"nativeSrc": "5184:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5184:12:17"
																		},
																		"nativeSrc": "5184:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5184:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5151:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5151:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5172:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "5172:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5165:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "5165:6:17"
																						},
																						"nativeSrc": "5165:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "5165:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5158:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "5158:6:17"
																				},
																				"nativeSrc": "5158:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5158:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5148:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "5148:2:17"
																		},
																		"nativeSrc": "5148:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5141:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5141:6:17"
																},
																"nativeSrc": "5141:40:17",
																"nodeType": "YulFunctionCall",
																"src": "5141:40:17"
															},
															"nativeSrc": "5138:60:17",
															"nodeType": "YulIf",
															"src": "5138:60:17"
														},
														{
															"nativeSrc": "5207:15:17",
															"nodeType": "YulAssignment",
															"src": "5207:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "5217:5:17",
																"nodeType": "YulIdentifier",
																"src": "5217:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5207:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4881:347:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4923:9:17",
														"nodeType": "YulTypedName",
														"src": "4923:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4934:7:17",
														"nodeType": "YulTypedName",
														"src": "4934:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4946:6:17",
														"nodeType": "YulTypedName",
														"src": "4946:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4954:6:17",
														"nodeType": "YulTypedName",
														"src": "4954:6:17",
														"type": ""
													}
												],
												"src": "4881:347:17"
											},
											{
												"body": {
													"nativeSrc": "5363:537:17",
													"nodeType": "YulBlock",
													"src": "5363:537:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5410:16:17",
																"nodeType": "YulBlock",
																"src": "5410:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5419:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5419:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5422:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5422:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5412:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:17"
																			},
																			"nativeSrc": "5412:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5412:12:17"
																		},
																		"nativeSrc": "5412:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5412:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5384:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5384:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5393:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5393:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5380:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:17"
																		},
																		"nativeSrc": "5380:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5405:3:17",
																		"nodeType": "YulLiteral",
																		"src": "5405:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5376:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5376:3:17"
																},
																"nativeSrc": "5376:33:17",
																"nodeType": "YulFunctionCall",
																"src": "5376:33:17"
															},
															"nativeSrc": "5373:53:17",
															"nodeType": "YulIf",
															"src": "5373:53:17"
														},
														{
															"nativeSrc": "5435:39:17",
															"nodeType": "YulAssignment",
															"src": "5435:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5464:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5464:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5445:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5445:18:17"
																},
																"nativeSrc": "5445:29:17",
																"nodeType": "YulFunctionCall",
																"src": "5445:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5435:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5435:6:17"
																}
															]
														},
														{
															"nativeSrc": "5483:48:17",
															"nodeType": "YulAssignment",
															"src": "5483:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5516:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5516:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5527:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5527:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5512:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:17"
																		},
																		"nativeSrc": "5512:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5493:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5493:18:17"
																},
																"nativeSrc": "5493:38:17",
																"nodeType": "YulFunctionCall",
																"src": "5493:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5483:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:17"
																}
															]
														},
														{
															"nativeSrc": "5540:42:17",
															"nodeType": "YulAssignment",
															"src": "5540:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5567:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5578:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5578:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5563:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:17"
																		},
																		"nativeSrc": "5563:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5563:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5550:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5550:12:17"
																},
																"nativeSrc": "5550:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5550:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5540:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:17"
																}
															]
														},
														{
															"nativeSrc": "5591:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5591:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5622:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5622:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5633:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5633:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5618:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5618:3:17"
																		},
																		"nativeSrc": "5618:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5618:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5605:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5605:12:17"
																},
																"nativeSrc": "5605:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5605:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5595:6:17",
																	"nodeType": "YulTypedName",
																	"src": "5595:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5680:16:17",
																"nodeType": "YulBlock",
																"src": "5680:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5689:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5689:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5692:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5692:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5682:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5682:6:17"
																			},
																			"nativeSrc": "5682:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5682:12:17"
																		},
																		"nativeSrc": "5682:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5682:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5652:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5652:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5660:18:17",
																		"nodeType": "YulLiteral",
																		"src": "5660:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5649:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5649:2:17"
																},
																"nativeSrc": "5649:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5649:30:17"
															},
															"nativeSrc": "5646:50:17",
															"nodeType": "YulIf",
															"src": "5646:50:17"
														},
														{
															"nativeSrc": "5705:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5705:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5719:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5719:9:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5730:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5730:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5715:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5715:3:17"
																},
																"nativeSrc": "5715:22:17",
																"nodeType": "YulFunctionCall",
																"src": "5715:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5709:2:17",
																	"nodeType": "YulTypedName",
																	"src": "5709:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5785:16:17",
																"nodeType": "YulBlock",
																"src": "5785:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5794:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5794:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5797:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5797:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5787:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5787:6:17"
																			},
																			"nativeSrc": "5787:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:17"
																		},
																		"nativeSrc": "5787:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5787:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5764:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "5764:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5768:4:17",
																						"nodeType": "YulLiteral",
																						"src": "5768:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5760:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5760:3:17"
																				},
																				"nativeSrc": "5760:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5760:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5775:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5775:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5756:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:17"
																		},
																		"nativeSrc": "5756:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5749:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:17"
																},
																"nativeSrc": "5749:35:17",
																"nodeType": "YulFunctionCall",
																"src": "5749:35:17"
															},
															"nativeSrc": "5746:55:17",
															"nodeType": "YulIf",
															"src": "5746:55:17"
														},
														{
															"nativeSrc": "5810:84:17",
															"nodeType": "YulAssignment",
															"src": "5810:84:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5859:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "5859:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5863:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5863:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5855:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5855:3:17"
																		},
																		"nativeSrc": "5855:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5855:11:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5881:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "5881:2:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5868:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "5868:12:17"
																		},
																		"nativeSrc": "5868:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:16:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5886:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "5886:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "5820:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "5820:34:17"
																},
																"nativeSrc": "5820:74:17",
																"nodeType": "YulFunctionCall",
																"src": "5820:74:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5810:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "5233:667:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5305:9:17",
														"nodeType": "YulTypedName",
														"src": "5305:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5316:7:17",
														"nodeType": "YulTypedName",
														"src": "5316:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5328:6:17",
														"nodeType": "YulTypedName",
														"src": "5328:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5336:6:17",
														"nodeType": "YulTypedName",
														"src": "5336:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5344:6:17",
														"nodeType": "YulTypedName",
														"src": "5344:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5352:6:17",
														"nodeType": "YulTypedName",
														"src": "5352:6:17",
														"type": ""
													}
												],
												"src": "5233:667:17"
											},
											{
												"body": {
													"nativeSrc": "5992:173:17",
													"nodeType": "YulBlock",
													"src": "5992:173:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6038:16:17",
																"nodeType": "YulBlock",
																"src": "6038:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6047:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6047:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6050:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6050:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6040:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6040:6:17"
																			},
																			"nativeSrc": "6040:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6040:12:17"
																		},
																		"nativeSrc": "6040:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6040:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6013:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6013:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6022:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6022:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6009:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6009:3:17"
																		},
																		"nativeSrc": "6009:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6009:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6034:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6005:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6005:3:17"
																},
																"nativeSrc": "6005:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6005:32:17"
															},
															"nativeSrc": "6002:52:17",
															"nodeType": "YulIf",
															"src": "6002:52:17"
														},
														{
															"nativeSrc": "6063:39:17",
															"nodeType": "YulAssignment",
															"src": "6063:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6092:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6092:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6073:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "6073:18:17"
																},
																"nativeSrc": "6073:29:17",
																"nodeType": "YulFunctionCall",
																"src": "6073:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6063:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:17"
																}
															]
														},
														{
															"nativeSrc": "6111:48:17",
															"nodeType": "YulAssignment",
															"src": "6111:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6144:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6144:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6155:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6155:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6140:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:17"
																		},
																		"nativeSrc": "6140:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6140:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6121:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "6121:18:17"
																},
																"nativeSrc": "6121:38:17",
																"nodeType": "YulFunctionCall",
																"src": "6121:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6111:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5905:260:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5950:9:17",
														"nodeType": "YulTypedName",
														"src": "5950:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5961:7:17",
														"nodeType": "YulTypedName",
														"src": "5961:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5973:6:17",
														"nodeType": "YulTypedName",
														"src": "5973:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5981:6:17",
														"nodeType": "YulTypedName",
														"src": "5981:6:17",
														"type": ""
													}
												],
												"src": "5905:260:17"
											},
											{
												"body": {
													"nativeSrc": "6321:481:17",
													"nodeType": "YulBlock",
													"src": "6321:481:17",
													"statements": [
														{
															"nativeSrc": "6331:12:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6331:12:17",
															"value": {
																"kind": "number",
																"nativeSrc": "6341:2:17",
																"nodeType": "YulLiteral",
																"src": "6341:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6335:2:17",
																	"nodeType": "YulTypedName",
																	"src": "6335:2:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6352:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6352:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6370:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6370:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6381:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6381:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6366:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:17"
																},
																"nativeSrc": "6366:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6366:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6356:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6356:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6400:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6400:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6411:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:17"
																},
																"nativeSrc": "6393:21:17",
																"nodeType": "YulFunctionCall",
																"src": "6393:21:17"
															},
															"nativeSrc": "6393:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "6393:21:17"
														},
														{
															"nativeSrc": "6423:17:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:17:17",
															"value": {
																"name": "tail_1",
																"nativeSrc": "6434:6:17",
																"nodeType": "YulIdentifier",
																"src": "6434:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "6427:3:17",
																	"nodeType": "YulTypedName",
																	"src": "6427:3:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6449:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6449:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6469:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6469:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6463:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "6463:5:17"
																},
																"nativeSrc": "6463:13:17",
																"nodeType": "YulFunctionCall",
																"src": "6463:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6453:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6453:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "6492:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6492:6:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6500:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6500:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6485:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6485:6:17"
																},
																"nativeSrc": "6485:22:17",
																"nodeType": "YulFunctionCall",
																"src": "6485:22:17"
															},
															"nativeSrc": "6485:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "6485:22:17"
														},
														{
															"nativeSrc": "6516:25:17",
															"nodeType": "YulAssignment",
															"src": "6516:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6527:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6527:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6538:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6538:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6523:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:17"
																},
																"nativeSrc": "6523:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6523:18:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6516:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:17"
																}
															]
														},
														{
															"nativeSrc": "6550:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6550:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6568:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6568:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6564:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6564:3:17"
																},
																"nativeSrc": "6564:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6564:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6554:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6554:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6588:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6588:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "6597:1:17",
																"nodeType": "YulLiteral",
																"src": "6597:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6592:1:17",
																	"nodeType": "YulTypedName",
																	"src": "6592:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6656:120:17",
																"nodeType": "YulBlock",
																"src": "6656:120:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6677:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6677:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "6688:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "6688:6:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6682:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "6682:5:17"
																					},
																					"nativeSrc": "6682:13:17",
																					"nodeType": "YulFunctionCall",
																					"src": "6682:13:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6670:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6670:6:17"
																			},
																			"nativeSrc": "6670:26:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6670:26:17"
																		},
																		"nativeSrc": "6670:26:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6670:26:17"
																	},
																	{
																		"nativeSrc": "6709:19:17",
																		"nodeType": "YulAssignment",
																		"src": "6709:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6720:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6720:3:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6725:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "6725:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6716:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6716:3:17"
																			},
																			"nativeSrc": "6716:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6716:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6709:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6709:3:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6741:25:17",
																		"nodeType": "YulAssignment",
																		"src": "6741:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6755:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "6755:6:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6763:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "6763:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6751:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:17"
																			},
																			"nativeSrc": "6751:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6751:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6741:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6741:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6618:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6618:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6621:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6621:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6615:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6615:2:17"
																},
																"nativeSrc": "6615:13:17",
																"nodeType": "YulFunctionCall",
																"src": "6615:13:17"
															},
															"nativeSrc": "6607:169:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6629:18:17",
																"nodeType": "YulBlock",
																"src": "6629:18:17",
																"statements": [
																	{
																		"nativeSrc": "6631:14:17",
																		"nodeType": "YulAssignment",
																		"src": "6631:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6640:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "6640:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6643:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6643:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6636:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6636:3:17"
																			},
																			"nativeSrc": "6636:9:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6636:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6631:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "6631:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6611:3:17",
																"nodeType": "YulBlock",
																"src": "6611:3:17",
																"statements": []
															},
															"src": "6607:169:17"
														},
														{
															"nativeSrc": "6785:11:17",
															"nodeType": "YulAssignment",
															"src": "6785:11:17",
															"value": {
																"name": "pos",
																"nativeSrc": "6793:3:17",
																"nodeType": "YulIdentifier",
																"src": "6793:3:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6785:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6785:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6170:632:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6290:9:17",
														"nodeType": "YulTypedName",
														"src": "6290:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6301:6:17",
														"nodeType": "YulTypedName",
														"src": "6301:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6312:4:17",
														"nodeType": "YulTypedName",
														"src": "6312:4:17",
														"type": ""
													}
												],
												"src": "6170:632:17"
											},
											{
												"body": {
													"nativeSrc": "6862:325:17",
													"nodeType": "YulBlock",
													"src": "6862:325:17",
													"statements": [
														{
															"nativeSrc": "6872:22:17",
															"nodeType": "YulAssignment",
															"src": "6872:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6886:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6886:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6889:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6889:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6882:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6882:3:17"
																},
																"nativeSrc": "6882:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6882:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6872:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:17"
																}
															]
														},
														{
															"nativeSrc": "6903:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6903:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6933:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6933:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6929:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:17"
																},
																"nativeSrc": "6929:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6907:18:17",
																	"nodeType": "YulTypedName",
																	"src": "6907:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6980:31:17",
																"nodeType": "YulBlock",
																"src": "6980:31:17",
																"statements": [
																	{
																		"nativeSrc": "6982:27:17",
																		"nodeType": "YulAssignment",
																		"src": "6982:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6996:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "6996:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7004:4:17",
																					"nodeType": "YulLiteral",
																					"src": "7004:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6992:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6992:3:17"
																			},
																			"nativeSrc": "6992:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6992:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6982:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6982:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6960:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "6960:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6953:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6953:6:17"
																},
																"nativeSrc": "6953:26:17",
																"nodeType": "YulFunctionCall",
																"src": "6953:26:17"
															},
															"nativeSrc": "6950:61:17",
															"nodeType": "YulIf",
															"src": "6950:61:17"
														},
														{
															"body": {
																"nativeSrc": "7070:111:17",
																"nodeType": "YulBlock",
																"src": "7070:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7091:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7091:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7098:3:17",
																							"nodeType": "YulLiteral",
																							"src": "7098:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7103:10:17",
																							"nodeType": "YulLiteral",
																							"src": "7103:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7094:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "7094:3:17"
																					},
																					"nativeSrc": "7094:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7094:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7084:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7084:6:17"
																			},
																			"nativeSrc": "7084:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7084:31:17"
																		},
																		"nativeSrc": "7084:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7084:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7135:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7135:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7138:4:17",
																					"nodeType": "YulLiteral",
																					"src": "7138:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7128:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7128:6:17"
																			},
																			"nativeSrc": "7128:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7128:15:17"
																		},
																		"nativeSrc": "7128:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7128:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7163:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7163:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7166:4:17",
																					"nodeType": "YulLiteral",
																					"src": "7166:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7156:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7156:6:17"
																			},
																			"nativeSrc": "7156:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7156:15:17"
																		},
																		"nativeSrc": "7156:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7156:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7026:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "7026:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7049:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7049:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7057:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7046:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7046:2:17"
																		},
																		"nativeSrc": "7046:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7023:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7023:2:17"
																},
																"nativeSrc": "7023:38:17",
																"nodeType": "YulFunctionCall",
																"src": "7023:38:17"
															},
															"nativeSrc": "7020:161:17",
															"nodeType": "YulIf",
															"src": "7020:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6807:380:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6842:4:17",
														"nodeType": "YulTypedName",
														"src": "6842:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6851:6:17",
														"nodeType": "YulTypedName",
														"src": "6851:6:17",
														"type": ""
													}
												],
												"src": "6807:380:17"
											},
											{
												"body": {
													"nativeSrc": "7349:218:17",
													"nodeType": "YulBlock",
													"src": "7349:218:17",
													"statements": [
														{
															"nativeSrc": "7359:26:17",
															"nodeType": "YulAssignment",
															"src": "7359:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7371:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7371:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7367:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7367:3:17"
																},
																"nativeSrc": "7367:18:17",
																"nodeType": "YulFunctionCall",
																"src": "7367:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7359:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7359:4:17"
																}
															]
														},
														{
															"nativeSrc": "7394:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7394:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7412:3:17",
																				"nodeType": "YulLiteral",
																				"src": "7412:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7417:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7417:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7408:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:17"
																		},
																		"nativeSrc": "7408:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7408:11:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7421:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7421:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7404:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7404:3:17"
																},
																"nativeSrc": "7404:19:17",
																"nodeType": "YulFunctionCall",
																"src": "7404:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7398:2:17",
																	"nodeType": "YulTypedName",
																	"src": "7398:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7439:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7439:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7454:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7454:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7462:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "7462:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7450:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:17"
																		},
																		"nativeSrc": "7450:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7432:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7432:6:17"
																},
																"nativeSrc": "7432:34:17",
																"nodeType": "YulFunctionCall",
																"src": "7432:34:17"
															},
															"nativeSrc": "7432:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "7432:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7486:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7486:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7497:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7497:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7482:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:17"
																		},
																		"nativeSrc": "7482:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7482:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7502:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7502:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7475:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7475:6:17"
																},
																"nativeSrc": "7475:34:17",
																"nodeType": "YulFunctionCall",
																"src": "7475:34:17"
															},
															"nativeSrc": "7475:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "7475:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7529:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7529:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7540:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7540:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7525:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7525:3:17"
																		},
																		"nativeSrc": "7525:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7525:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "7549:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7549:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7557:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "7557:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7545:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:17"
																		},
																		"nativeSrc": "7545:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7518:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7518:6:17"
																},
																"nativeSrc": "7518:43:17",
																"nodeType": "YulFunctionCall",
																"src": "7518:43:17"
															},
															"nativeSrc": "7518:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "7518:43:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "7192:375:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7302:9:17",
														"nodeType": "YulTypedName",
														"src": "7302:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7313:6:17",
														"nodeType": "YulTypedName",
														"src": "7313:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7321:6:17",
														"nodeType": "YulTypedName",
														"src": "7321:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7329:6:17",
														"nodeType": "YulTypedName",
														"src": "7329:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7340:4:17",
														"nodeType": "YulTypedName",
														"src": "7340:4:17",
														"type": ""
													}
												],
												"src": "7192:375:17"
											},
											{
												"body": {
													"nativeSrc": "7604:95:17",
													"nodeType": "YulBlock",
													"src": "7604:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7621:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7621:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7628:3:17",
																				"nodeType": "YulLiteral",
																				"src": "7628:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7633:10:17",
																				"nodeType": "YulLiteral",
																				"src": "7633:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7624:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:17"
																		},
																		"nativeSrc": "7624:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7624:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7614:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7614:6:17"
																},
																"nativeSrc": "7614:31:17",
																"nodeType": "YulFunctionCall",
																"src": "7614:31:17"
															},
															"nativeSrc": "7614:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "7614:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7661:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7661:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7664:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7664:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7654:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:17"
																},
																"nativeSrc": "7654:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7654:15:17"
															},
															"nativeSrc": "7654:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "7654:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7685:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7685:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7688:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7688:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7678:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7678:6:17"
																},
																"nativeSrc": "7678:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7678:15:17"
															},
															"nativeSrc": "7678:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "7678:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7572:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "7572:127:17"
											},
											{
												"body": {
													"nativeSrc": "7751:88:17",
													"nodeType": "YulBlock",
													"src": "7751:88:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7782:22:17",
																"nodeType": "YulBlock",
																"src": "7782:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7784:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7784:16:17"
																			},
																			"nativeSrc": "7784:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7784:18:17"
																		},
																		"nativeSrc": "7784:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7784:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7767:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7767:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7778:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7778:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7774:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7774:3:17"
																		},
																		"nativeSrc": "7774:6:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7774:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7764:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7764:2:17"
																},
																"nativeSrc": "7764:17:17",
																"nodeType": "YulFunctionCall",
																"src": "7764:17:17"
															},
															"nativeSrc": "7761:43:17",
															"nodeType": "YulIf",
															"src": "7761:43:17"
														},
														{
															"nativeSrc": "7813:20:17",
															"nodeType": "YulAssignment",
															"src": "7813:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7824:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7824:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7831:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7831:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7820:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7820:3:17"
																},
																"nativeSrc": "7820:13:17",
																"nodeType": "YulFunctionCall",
																"src": "7820:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7813:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7704:135:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7733:5:17",
														"nodeType": "YulTypedName",
														"src": "7733:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7743:3:17",
														"nodeType": "YulTypedName",
														"src": "7743:3:17",
														"type": ""
													}
												],
												"src": "7704:135:17"
											},
											{
												"body": {
													"nativeSrc": "7892:77:17",
													"nodeType": "YulBlock",
													"src": "7892:77:17",
													"statements": [
														{
															"nativeSrc": "7902:16:17",
															"nodeType": "YulAssignment",
															"src": "7902:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7913:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "7913:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7916:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "7916:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7909:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7909:3:17"
																},
																"nativeSrc": "7909:9:17",
																"nodeType": "YulFunctionCall",
																"src": "7909:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7902:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7902:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7941:22:17",
																"nodeType": "YulBlock",
																"src": "7941:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7943:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7943:16:17"
																			},
																			"nativeSrc": "7943:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7943:18:17"
																		},
																		"nativeSrc": "7943:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7943:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7933:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "7933:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7936:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7930:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:17"
																},
																"nativeSrc": "7930:10:17",
																"nodeType": "YulFunctionCall",
																"src": "7930:10:17"
															},
															"nativeSrc": "7927:36:17",
															"nodeType": "YulIf",
															"src": "7927:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7844:125:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7875:1:17",
														"nodeType": "YulTypedName",
														"src": "7875:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7878:1:17",
														"nodeType": "YulTypedName",
														"src": "7878:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7884:3:17",
														"nodeType": "YulTypedName",
														"src": "7884:3:17",
														"type": ""
													}
												],
												"src": "7844:125:17"
											},
											{
												"body": {
													"nativeSrc": "8006:95:17",
													"nodeType": "YulBlock",
													"src": "8006:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8023:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8023:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8030:3:17",
																				"nodeType": "YulLiteral",
																				"src": "8030:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8035:10:17",
																				"nodeType": "YulLiteral",
																				"src": "8035:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8026:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:17"
																		},
																		"nativeSrc": "8026:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8016:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8016:6:17"
																},
																"nativeSrc": "8016:31:17",
																"nodeType": "YulFunctionCall",
																"src": "8016:31:17"
															},
															"nativeSrc": "8016:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "8016:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8063:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8063:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8066:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8066:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8056:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8056:6:17"
																},
																"nativeSrc": "8056:15:17",
																"nodeType": "YulFunctionCall",
																"src": "8056:15:17"
															},
															"nativeSrc": "8056:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "8056:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8087:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8087:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8090:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8090:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8080:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:17"
																},
																"nativeSrc": "8080:15:17",
																"nodeType": "YulFunctionCall",
																"src": "8080:15:17"
															},
															"nativeSrc": "8080:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "8080:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7974:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "7974:127:17"
											},
											{
												"body": {
													"nativeSrc": "8153:89:17",
													"nodeType": "YulBlock",
													"src": "8153:89:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8180:22:17",
																"nodeType": "YulBlock",
																"src": "8180:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8182:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "8182:16:17"
																			},
																			"nativeSrc": "8182:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8182:18:17"
																		},
																		"nativeSrc": "8182:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8182:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8173:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8173:5:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8166:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8166:6:17"
																},
																"nativeSrc": "8166:13:17",
																"nodeType": "YulFunctionCall",
																"src": "8166:13:17"
															},
															"nativeSrc": "8163:39:17",
															"nodeType": "YulIf",
															"src": "8163:39:17"
														},
														{
															"nativeSrc": "8211:25:17",
															"nodeType": "YulAssignment",
															"src": "8211:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8222:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8222:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8233:1:17",
																				"nodeType": "YulLiteral",
																				"src": "8233:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8229:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8229:3:17"
																		},
																		"nativeSrc": "8229:6:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8229:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8218:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8218:3:17"
																},
																"nativeSrc": "8218:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8218:18:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8211:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8211:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "8106:136:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8135:5:17",
														"nodeType": "YulTypedName",
														"src": "8135:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8145:3:17",
														"nodeType": "YulTypedName",
														"src": "8145:3:17",
														"type": ""
													}
												],
												"src": "8106:136:17"
											},
											{
												"body": {
													"nativeSrc": "8303:65:17",
													"nodeType": "YulBlock",
													"src": "8303:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8320:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "8323:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8323:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8313:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:17"
																},
																"nativeSrc": "8313:14:17",
																"nodeType": "YulFunctionCall",
																"src": "8313:14:17"
															},
															"nativeSrc": "8313:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "8313:14:17"
														},
														{
															"nativeSrc": "8336:26:17",
															"nodeType": "YulAssignment",
															"src": "8336:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8354:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8354:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8357:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8357:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8344:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "8344:9:17"
																},
																"nativeSrc": "8344:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8344:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8336:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8336:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "8247:121:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8286:3:17",
														"nodeType": "YulTypedName",
														"src": "8286:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8294:4:17",
														"nodeType": "YulTypedName",
														"src": "8294:4:17",
														"type": ""
													}
												],
												"src": "8247:121:17"
											},
											{
												"body": {
													"nativeSrc": "8454:437:17",
													"nodeType": "YulBlock",
													"src": "8454:437:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8487:398:17",
																"nodeType": "YulBlock",
																"src": "8487:398:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8508:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8508:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "8511:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "8511:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8501:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8501:6:17"
																			},
																			"nativeSrc": "8501:16:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8501:16:17"
																		},
																		"nativeSrc": "8501:16:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8501:16:17"
																	},
																	{
																		"nativeSrc": "8530:30:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8530:30:17",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8552:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8552:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8555:4:17",
																					"nodeType": "YulLiteral",
																					"src": "8555:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "8542:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8542:9:17"
																			},
																			"nativeSrc": "8542:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8542:18:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "8534:4:17",
																				"nodeType": "YulTypedName",
																				"src": "8534:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8573:57:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8573:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8596:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "8596:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8606:1:17",
																							"nodeType": "YulLiteral",
																							"src": "8606:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "8613:10:17",
																									"nodeType": "YulIdentifier",
																									"src": "8613:10:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8625:2:17",
																									"nodeType": "YulLiteral",
																									"src": "8625:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8609:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "8609:3:17"
																							},
																							"nativeSrc": "8609:19:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8609:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8602:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "8602:3:17"
																					},
																					"nativeSrc": "8602:27:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8602:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8592:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "8592:3:17"
																			},
																			"nativeSrc": "8592:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8592:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8577:11:17",
																				"nodeType": "YulTypedName",
																				"src": "8577:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8667:23:17",
																			"nodeType": "YulBlock",
																			"src": "8667:23:17",
																			"statements": [
																				{
																					"nativeSrc": "8669:19:17",
																					"nodeType": "YulAssignment",
																					"src": "8669:19:17",
																					"value": {
																						"name": "data",
																						"nativeSrc": "8684:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "8684:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8669:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "8669:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8649:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "8649:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8661:4:17",
																					"nodeType": "YulLiteral",
																					"src": "8661:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8646:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "8646:2:17"
																			},
																			"nativeSrc": "8646:20:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8646:20:17"
																		},
																		"nativeSrc": "8643:47:17",
																		"nodeType": "YulIf",
																		"src": "8643:47:17"
																	},
																	{
																		"nativeSrc": "8703:41:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8703:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8717:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "8717:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8727:1:17",
																							"nodeType": "YulLiteral",
																							"src": "8727:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8734:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8734:3:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8739:2:17",
																									"nodeType": "YulLiteral",
																									"src": "8739:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8730:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "8730:3:17"
																							},
																							"nativeSrc": "8730:12:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8730:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8723:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "8723:3:17"
																					},
																					"nativeSrc": "8723:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8723:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8713:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "8713:3:17"
																			},
																			"nativeSrc": "8713:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8713:31:17"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "8707:2:17",
																				"nodeType": "YulTypedName",
																				"src": "8707:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8757:24:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8757:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "8770:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "8770:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "8761:5:17",
																				"nodeType": "YulTypedName",
																				"src": "8761:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8855:20:17",
																			"nodeType": "YulBlock",
																			"src": "8855:20:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8864:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "8864:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8871:1:17",
																								"nodeType": "YulLiteral",
																								"src": "8871:1:17",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "8857:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "8857:6:17"
																						},
																						"nativeSrc": "8857:16:17",
																						"nodeType": "YulFunctionCall",
																						"src": "8857:16:17"
																					},
																					"nativeSrc": "8857:16:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "8857:16:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8805:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "8805:5:17"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "8812:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "8812:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8802:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "8802:2:17"
																			},
																			"nativeSrc": "8802:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8802:13:17"
																		},
																		"nativeSrc": "8794:81:17",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "8816:26:17",
																			"nodeType": "YulBlock",
																			"src": "8816:26:17",
																			"statements": [
																				{
																					"nativeSrc": "8818:22:17",
																					"nodeType": "YulAssignment",
																					"src": "8818:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8831:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "8831:5:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8838:1:17",
																								"nodeType": "YulLiteral",
																								"src": "8838:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8827:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "8827:3:17"
																						},
																						"nativeSrc": "8827:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "8827:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "8818:5:17",
																							"nodeType": "YulIdentifier",
																							"src": "8818:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "8798:3:17",
																			"nodeType": "YulBlock",
																			"src": "8798:3:17",
																			"statements": []
																		},
																		"src": "8794:81:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8470:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8470:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8475:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8475:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8467:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8467:2:17"
																},
																"nativeSrc": "8467:11:17",
																"nodeType": "YulFunctionCall",
																"src": "8467:11:17"
															},
															"nativeSrc": "8464:421:17",
															"nodeType": "YulIf",
															"src": "8464:421:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "8373:518:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8426:5:17",
														"nodeType": "YulTypedName",
														"src": "8426:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8433:3:17",
														"nodeType": "YulTypedName",
														"src": "8433:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8438:10:17",
														"nodeType": "YulTypedName",
														"src": "8438:10:17",
														"type": ""
													}
												],
												"src": "8373:518:17"
											},
											{
												"body": {
													"nativeSrc": "8981:81:17",
													"nodeType": "YulBlock",
													"src": "8981:81:17",
													"statements": [
														{
															"nativeSrc": "8991:65:17",
															"nodeType": "YulAssignment",
															"src": "8991:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9006:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "9006:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9024:1:17",
																										"nodeType": "YulLiteral",
																										"src": "9024:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9027:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "9027:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9020:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "9020:3:17"
																								},
																								"nativeSrc": "9020:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9020:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9037:1:17",
																										"nodeType": "YulLiteral",
																										"src": "9037:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9033:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "9033:3:17"
																								},
																								"nativeSrc": "9033:6:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9033:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9016:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "9016:3:17"
																						},
																						"nativeSrc": "9016:24:17",
																						"nodeType": "YulFunctionCall",
																						"src": "9016:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9012:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:17"
																				},
																				"nativeSrc": "9012:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9012:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9002:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:17"
																		},
																		"nativeSrc": "9002:40:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9002:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9048:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9048:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9051:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "9051:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9044:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9044:3:17"
																		},
																		"nativeSrc": "9044:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9044:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8999:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8999:2:17"
																},
																"nativeSrc": "8999:57:17",
																"nodeType": "YulFunctionCall",
																"src": "8999:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8991:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8991:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8896:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8958:4:17",
														"nodeType": "YulTypedName",
														"src": "8958:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8964:3:17",
														"nodeType": "YulTypedName",
														"src": "8964:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8972:4:17",
														"nodeType": "YulTypedName",
														"src": "8972:4:17",
														"type": ""
													}
												],
												"src": "8896:166:17"
											},
											{
												"body": {
													"nativeSrc": "9163:1249:17",
													"nodeType": "YulBlock",
													"src": "9163:1249:17",
													"statements": [
														{
															"nativeSrc": "9173:24:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9173:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9193:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9193:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9187:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9187:5:17"
																},
																"nativeSrc": "9187:10:17",
																"nodeType": "YulFunctionCall",
																"src": "9187:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9177:6:17",
																	"nodeType": "YulTypedName",
																	"src": "9177:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9240:22:17",
																"nodeType": "YulBlock",
																"src": "9240:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9242:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "9242:16:17"
																			},
																			"nativeSrc": "9242:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9242:18:17"
																		},
																		"nativeSrc": "9242:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9242:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9212:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9212:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9220:18:17",
																		"nodeType": "YulLiteral",
																		"src": "9220:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9209:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9209:2:17"
																},
																"nativeSrc": "9209:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9209:30:17"
															},
															"nativeSrc": "9206:56:17",
															"nodeType": "YulIf",
															"src": "9206:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9315:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "9315:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9353:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "9353:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9347:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "9347:5:17"
																				},
																				"nativeSrc": "9347:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9347:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9321:25:17",
																			"nodeType": "YulIdentifier",
																			"src": "9321:25:17"
																		},
																		"nativeSrc": "9321:38:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9321:38:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9361:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9361:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9271:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9271:43:17"
																},
																"nativeSrc": "9271:97:17",
																"nodeType": "YulFunctionCall",
																"src": "9271:97:17"
															},
															"nativeSrc": "9271:97:17",
															"nodeType": "YulExpressionStatement",
															"src": "9271:97:17"
														},
														{
															"nativeSrc": "9377:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9377:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "9394:1:17",
																"nodeType": "YulLiteral",
																"src": "9394:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9381:9:17",
																	"nodeType": "YulTypedName",
																	"src": "9381:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9404:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9404:23:17",
															"value": {
																"kind": "number",
																"nativeSrc": "9423:4:17",
																"nodeType": "YulLiteral",
																"src": "9423:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "9408:11:17",
																	"nodeType": "YulTypedName",
																	"src": "9408:11:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9436:17:17",
															"nodeType": "YulAssignment",
															"src": "9436:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "9449:4:17",
																"nodeType": "YulLiteral",
																"src": "9449:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9436:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "9436:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9499:656:17",
																		"nodeType": "YulBlock",
																		"src": "9499:656:17",
																		"statements": [
																			{
																				"nativeSrc": "9513:35:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9513:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9532:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "9532:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9544:2:17",
																									"nodeType": "YulLiteral",
																									"src": "9544:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9540:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "9540:3:17"
																							},
																							"nativeSrc": "9540:7:17",
																							"nodeType": "YulFunctionCall",
																							"src": "9540:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9528:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "9528:3:17"
																					},
																					"nativeSrc": "9528:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9528:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9517:7:17",
																						"nodeType": "YulTypedName",
																						"src": "9517:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9561:49:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9561:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9605:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "9605:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "9575:29:17",
																						"nodeType": "YulIdentifier",
																						"src": "9575:29:17"
																					},
																					"nativeSrc": "9575:35:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9575:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9565:6:17",
																						"nodeType": "YulTypedName",
																						"src": "9565:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9623:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9623:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9632:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9632:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9627:1:17",
																						"nodeType": "YulTypedName",
																						"src": "9627:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9710:172:17",
																					"nodeType": "YulBlock",
																					"src": "9710:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9735:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "9735:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9753:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "9753:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9758:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "9758:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9749:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "9749:3:17"
																												},
																												"nativeSrc": "9749:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "9749:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9743:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "9743:5:17"
																										},
																										"nativeSrc": "9743:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "9743:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9728:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "9728:6:17"
																								},
																								"nativeSrc": "9728:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9728:42:17"
																							},
																							"nativeSrc": "9728:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "9728:42:17"
																						},
																						{
																							"nativeSrc": "9787:24:17",
																							"nodeType": "YulAssignment",
																							"src": "9787:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9801:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "9801:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9809:1:17",
																										"nodeType": "YulLiteral",
																										"src": "9809:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9797:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "9797:3:17"
																								},
																								"nativeSrc": "9797:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9797:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9787:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "9787:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9828:40:17",
																							"nodeType": "YulAssignment",
																							"src": "9828:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9845:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "9845:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "9856:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "9856:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9841:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "9841:3:17"
																								},
																								"nativeSrc": "9841:27:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9841:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9828:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "9828:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9657:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "9657:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9660:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "9660:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9654:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "9654:2:17"
																					},
																					"nativeSrc": "9654:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9654:14:17"
																				},
																				"nativeSrc": "9646:236:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9669:28:17",
																					"nodeType": "YulBlock",
																					"src": "9669:28:17",
																					"statements": [
																						{
																							"nativeSrc": "9671:24:17",
																							"nodeType": "YulAssignment",
																							"src": "9671:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9680:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "9680:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "9683:11:17",
																										"nodeType": "YulIdentifier",
																										"src": "9683:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9676:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "9676:3:17"
																								},
																								"nativeSrc": "9676:19:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9676:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9671:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "9671:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9650:3:17",
																					"nodeType": "YulBlock",
																					"src": "9650:3:17",
																					"statements": []
																				},
																				"src": "9646:236:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "9930:166:17",
																					"nodeType": "YulBlock",
																					"src": "9930:166:17",
																					"statements": [
																						{
																							"nativeSrc": "9948:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9948:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9975:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "9975:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9980:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "9980:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9971:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "9971:3:17"
																										},
																										"nativeSrc": "9971:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "9971:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9965:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "9965:5:17"
																								},
																								"nativeSrc": "9965:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "9965:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9952:9:17",
																									"nodeType": "YulTypedName",
																									"src": "9952:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10015:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "10015:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10027:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "10027:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10054:1:17",
																																				"nodeType": "YulLiteral",
																																				"src": "10054:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "10057:6:17",
																																				"nodeType": "YulIdentifier",
																																				"src": "10057:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10050:3:17",
																																			"nodeType": "YulIdentifier",
																																			"src": "10050:3:17"
																																		},
																																		"nativeSrc": "10050:14:17",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10050:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10066:3:17",
																																		"nodeType": "YulLiteral",
																																		"src": "10066:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10046:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "10046:3:17"
																																},
																																"nativeSrc": "10046:24:17",
																																"nodeType": "YulFunctionCall",
																																"src": "10046:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10076:1:17",
																																		"nodeType": "YulLiteral",
																																		"src": "10076:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10072:3:17",
																																	"nodeType": "YulIdentifier",
																																	"src": "10072:3:17"
																																},
																																"nativeSrc": "10072:6:17",
																																"nodeType": "YulFunctionCall",
																																"src": "10072:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10042:3:17",
																															"nodeType": "YulIdentifier",
																															"src": "10042:3:17"
																														},
																														"nativeSrc": "10042:37:17",
																														"nodeType": "YulFunctionCall",
																														"src": "10042:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10038:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "10038:3:17"
																												},
																												"nativeSrc": "10038:42:17",
																												"nodeType": "YulFunctionCall",
																												"src": "10038:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10023:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "10023:3:17"
																										},
																										"nativeSrc": "10023:58:17",
																										"nodeType": "YulFunctionCall",
																										"src": "10023:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10008:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "10008:6:17"
																								},
																								"nativeSrc": "10008:74:17",
																								"nodeType": "YulFunctionCall",
																								"src": "10008:74:17"
																							},
																							"nativeSrc": "10008:74:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "10008:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9901:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "9901:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9910:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "9910:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9898:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "9898:2:17"
																					},
																					"nativeSrc": "9898:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9898:19:17"
																				},
																				"nativeSrc": "9895:201:17",
																				"nodeType": "YulIf",
																				"src": "9895:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10116:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "10116:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10130:1:17",
																											"nodeType": "YulLiteral",
																											"src": "10130:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "10133:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "10133:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10126:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "10126:3:17"
																									},
																									"nativeSrc": "10126:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "10126:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10142:1:17",
																									"nodeType": "YulLiteral",
																									"src": "10142:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10122:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "10122:3:17"
																							},
																							"nativeSrc": "10122:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "10122:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10109:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10109:6:17"
																					},
																					"nativeSrc": "10109:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "10109:36:17"
																				},
																				"nativeSrc": "10109:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "10109:36:17"
																			}
																		]
																	},
																	"nativeSrc": "9492:663:17",
																	"nodeType": "YulCase",
																	"src": "9492:663:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9497:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9497:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10172:234:17",
																		"nodeType": "YulBlock",
																		"src": "10172:234:17",
																		"statements": [
																			{
																				"nativeSrc": "10186:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10186:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10199:1:17",
																					"nodeType": "YulLiteral",
																					"src": "10199:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10190:5:17",
																						"nodeType": "YulTypedName",
																						"src": "10190:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10235:67:17",
																					"nodeType": "YulBlock",
																					"src": "10235:67:17",
																					"statements": [
																						{
																							"nativeSrc": "10253:35:17",
																							"nodeType": "YulAssignment",
																							"src": "10253:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10272:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "10272:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10277:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "10277:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10268:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "10268:3:17"
																										},
																										"nativeSrc": "10268:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "10268:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10262:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "10262:5:17"
																								},
																								"nativeSrc": "10262:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "10262:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10253:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "10253:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10216:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "10216:6:17"
																				},
																				"nativeSrc": "10213:89:17",
																				"nodeType": "YulIf",
																				"src": "10213:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10322:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "10322:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10381:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "10381:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10388:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "10388:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10328:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "10328:52:17"
																							},
																							"nativeSrc": "10328:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "10328:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10315:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10315:6:17"
																					},
																					"nativeSrc": "10315:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "10315:81:17"
																				},
																				"nativeSrc": "10315:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "10315:81:17"
																			}
																		]
																	},
																	"nativeSrc": "10164:242:17",
																	"nodeType": "YulCase",
																	"src": "10164:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9472:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9472:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9480:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9480:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9469:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9469:2:17"
																},
																"nativeSrc": "9469:14:17",
																"nodeType": "YulFunctionCall",
																"src": "9469:14:17"
															},
															"nativeSrc": "9462:944:17",
															"nodeType": "YulSwitch",
															"src": "9462:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9067:1345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9148:4:17",
														"nodeType": "YulTypedName",
														"src": "9148:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9154:3:17",
														"nodeType": "YulTypedName",
														"src": "9154:3:17",
														"type": ""
													}
												],
												"src": "9067:1345:17"
											},
											{
												"body": {
													"nativeSrc": "10604:309:17",
													"nodeType": "YulBlock",
													"src": "10604:309:17",
													"statements": [
														{
															"nativeSrc": "10614:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10614:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10634:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10634:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10628:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10628:5:17"
																},
																"nativeSrc": "10628:13:17",
																"nodeType": "YulFunctionCall",
																"src": "10628:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10618:6:17",
																	"nodeType": "YulTypedName",
																	"src": "10618:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10689:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10689:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10697:4:17",
																				"nodeType": "YulLiteral",
																				"src": "10697:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10685:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10685:3:17"
																		},
																		"nativeSrc": "10685:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10685:17:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10704:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10704:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10709:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10709:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10650:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "10650:34:17"
																},
																"nativeSrc": "10650:66:17",
																"nodeType": "YulFunctionCall",
																"src": "10650:66:17"
															},
															"nativeSrc": "10650:66:17",
															"nodeType": "YulExpressionStatement",
															"src": "10650:66:17"
														},
														{
															"nativeSrc": "10725:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10725:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10742:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10742:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10747:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10747:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10738:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10738:3:17"
																},
																"nativeSrc": "10738:16:17",
																"nodeType": "YulFunctionCall",
																"src": "10738:16:17"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "10729:5:17",
																	"nodeType": "YulTypedName",
																	"src": "10729:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10763:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10763:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10785:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10785:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10779:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10779:5:17"
																},
																"nativeSrc": "10779:13:17",
																"nodeType": "YulFunctionCall",
																"src": "10779:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "10767:8:17",
																	"nodeType": "YulTypedName",
																	"src": "10767:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10840:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10848:4:17",
																				"nodeType": "YulLiteral",
																				"src": "10848:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10836:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10836:3:17"
																		},
																		"nativeSrc": "10836:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10836:17:17"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "10855:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10855:5:17"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10862:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "10862:8:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10801:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "10801:34:17"
																},
																"nativeSrc": "10801:70:17",
																"nodeType": "YulFunctionCall",
																"src": "10801:70:17"
															},
															"nativeSrc": "10801:70:17",
															"nodeType": "YulExpressionStatement",
															"src": "10801:70:17"
														},
														{
															"nativeSrc": "10880:27:17",
															"nodeType": "YulAssignment",
															"src": "10880:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "10891:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10891:5:17"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10898:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "10898:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10887:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10887:3:17"
																},
																"nativeSrc": "10887:20:17",
																"nodeType": "YulFunctionCall",
																"src": "10887:20:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10880:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10880:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10417:496:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10572:3:17",
														"nodeType": "YulTypedName",
														"src": "10572:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10577:6:17",
														"nodeType": "YulTypedName",
														"src": "10577:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10585:6:17",
														"nodeType": "YulTypedName",
														"src": "10585:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10596:3:17",
														"nodeType": "YulTypedName",
														"src": "10596:3:17",
														"type": ""
													}
												],
												"src": "10417:496:17"
											},
											{
												"body": {
													"nativeSrc": "11121:286:17",
													"nodeType": "YulBlock",
													"src": "11121:286:17",
													"statements": [
														{
															"nativeSrc": "11131:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11131:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11149:3:17",
																				"nodeType": "YulLiteral",
																				"src": "11149:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11154:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11154:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11145:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:17"
																		},
																		"nativeSrc": "11145:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11145:11:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11158:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11158:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11141:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11141:3:17"
																},
																"nativeSrc": "11141:19:17",
																"nodeType": "YulFunctionCall",
																"src": "11141:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11135:2:17",
																	"nodeType": "YulTypedName",
																	"src": "11135:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11176:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11176:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11191:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11191:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11199:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11199:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11187:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:17"
																		},
																		"nativeSrc": "11187:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11187:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11169:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11169:6:17"
																},
																"nativeSrc": "11169:34:17",
																"nodeType": "YulFunctionCall",
																"src": "11169:34:17"
															},
															"nativeSrc": "11169:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "11169:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11223:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11223:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11234:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11234:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11219:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11219:3:17"
																		},
																		"nativeSrc": "11219:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11219:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11243:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11243:6:17"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11251:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "11251:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11239:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11239:3:17"
																		},
																		"nativeSrc": "11239:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11239:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11212:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11212:6:17"
																},
																"nativeSrc": "11212:43:17",
																"nodeType": "YulFunctionCall",
																"src": "11212:43:17"
															},
															"nativeSrc": "11212:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "11212:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11275:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11275:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11286:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11286:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11271:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11271:3:17"
																		},
																		"nativeSrc": "11271:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11271:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11291:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11291:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11264:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11264:6:17"
																},
																"nativeSrc": "11264:34:17",
																"nodeType": "YulFunctionCall",
																"src": "11264:34:17"
															},
															"nativeSrc": "11264:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "11264:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11318:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11318:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11329:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11329:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11314:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11314:3:17"
																		},
																		"nativeSrc": "11314:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11334:3:17",
																		"nodeType": "YulLiteral",
																		"src": "11334:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11307:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:17"
																},
																"nativeSrc": "11307:31:17",
																"nodeType": "YulFunctionCall",
																"src": "11307:31:17"
															},
															"nativeSrc": "11307:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "11307:31:17"
														},
														{
															"nativeSrc": "11347:54:17",
															"nodeType": "YulAssignment",
															"src": "11347:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11373:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11373:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11385:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11385:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11396:3:17",
																				"nodeType": "YulLiteral",
																				"src": "11396:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11381:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11381:3:17"
																		},
																		"nativeSrc": "11381:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11381:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11355:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "11355:17:17"
																},
																"nativeSrc": "11355:46:17",
																"nodeType": "YulFunctionCall",
																"src": "11355:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11347:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11347:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10918:489:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11066:9:17",
														"nodeType": "YulTypedName",
														"src": "11066:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11077:6:17",
														"nodeType": "YulTypedName",
														"src": "11077:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11085:6:17",
														"nodeType": "YulTypedName",
														"src": "11085:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11093:6:17",
														"nodeType": "YulTypedName",
														"src": "11093:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11101:6:17",
														"nodeType": "YulTypedName",
														"src": "11101:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11112:4:17",
														"nodeType": "YulTypedName",
														"src": "11112:4:17",
														"type": ""
													}
												],
												"src": "10918:489:17"
											},
											{
												"body": {
													"nativeSrc": "11492:169:17",
													"nodeType": "YulBlock",
													"src": "11492:169:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "11538:16:17",
																"nodeType": "YulBlock",
																"src": "11538:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11547:1:17",
																					"nodeType": "YulLiteral",
																					"src": "11547:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11550:1:17",
																					"nodeType": "YulLiteral",
																					"src": "11550:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11540:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11540:6:17"
																			},
																			"nativeSrc": "11540:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11540:12:17"
																		},
																		"nativeSrc": "11540:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11540:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11513:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11513:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11522:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11522:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11509:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11509:3:17"
																		},
																		"nativeSrc": "11509:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11509:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11534:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11534:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11505:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:17"
																},
																"nativeSrc": "11505:32:17",
																"nodeType": "YulFunctionCall",
																"src": "11505:32:17"
															},
															"nativeSrc": "11502:52:17",
															"nodeType": "YulIf",
															"src": "11502:52:17"
														},
														{
															"nativeSrc": "11563:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11563:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11582:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11582:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11576:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11576:5:17"
																},
																"nativeSrc": "11576:16:17",
																"nodeType": "YulFunctionCall",
																"src": "11576:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11567:5:17",
																	"nodeType": "YulTypedName",
																	"src": "11567:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11625:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11625:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "11601:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "11601:23:17"
																},
																"nativeSrc": "11601:30:17",
																"nodeType": "YulFunctionCall",
																"src": "11601:30:17"
															},
															"nativeSrc": "11601:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "11601:30:17"
														},
														{
															"nativeSrc": "11640:15:17",
															"nodeType": "YulAssignment",
															"src": "11640:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "11650:5:17",
																"nodeType": "YulIdentifier",
																"src": "11650:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11640:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11640:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "11412:249:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11458:9:17",
														"nodeType": "YulTypedName",
														"src": "11458:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11469:7:17",
														"nodeType": "YulTypedName",
														"src": "11469:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11481:6:17",
														"nodeType": "YulTypedName",
														"src": "11481:6:17",
														"type": ""
													}
												],
												"src": "11412:249:17"
											},
											{
												"body": {
													"nativeSrc": "11698:95:17",
													"nodeType": "YulBlock",
													"src": "11698:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11715:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11715:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11722:3:17",
																				"nodeType": "YulLiteral",
																				"src": "11722:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11727:10:17",
																				"nodeType": "YulLiteral",
																				"src": "11727:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11718:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11718:3:17"
																		},
																		"nativeSrc": "11718:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11718:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11708:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11708:6:17"
																},
																"nativeSrc": "11708:31:17",
																"nodeType": "YulFunctionCall",
																"src": "11708:31:17"
															},
															"nativeSrc": "11708:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "11708:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11755:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11755:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11758:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11758:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11748:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:17"
																},
																"nativeSrc": "11748:15:17",
																"nodeType": "YulFunctionCall",
																"src": "11748:15:17"
															},
															"nativeSrc": "11748:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "11748:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11779:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11779:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11782:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11782:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11772:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11772:6:17"
																},
																"nativeSrc": "11772:15:17",
																"nodeType": "YulFunctionCall",
																"src": "11772:15:17"
															},
															"nativeSrc": "11772:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "11772:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11666:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "11666:127:17"
											},
											{
												"body": {
													"nativeSrc": "11927:145:17",
													"nodeType": "YulBlock",
													"src": "11927:145:17",
													"statements": [
														{
															"nativeSrc": "11937:26:17",
															"nodeType": "YulAssignment",
															"src": "11937:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11949:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11949:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11960:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11960:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11945:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11945:3:17"
																},
																"nativeSrc": "11945:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11945:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11937:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11937:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11979:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11979:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11994:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11994:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12010:3:17",
																								"nodeType": "YulLiteral",
																								"src": "12010:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12015:1:17",
																								"nodeType": "YulLiteral",
																								"src": "12015:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12006:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "12006:3:17"
																						},
																						"nativeSrc": "12006:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12006:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12019:1:17",
																						"nodeType": "YulLiteral",
																						"src": "12019:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12002:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12002:3:17"
																				},
																				"nativeSrc": "12002:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12002:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11990:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11990:3:17"
																		},
																		"nativeSrc": "11990:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11990:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11972:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11972:6:17"
																},
																"nativeSrc": "11972:51:17",
																"nodeType": "YulFunctionCall",
																"src": "11972:51:17"
															},
															"nativeSrc": "11972:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "11972:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12043:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12043:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12054:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12054:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12039:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12039:3:17"
																		},
																		"nativeSrc": "12039:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12039:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12059:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12059:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12032:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12032:6:17"
																},
																"nativeSrc": "12032:34:17",
																"nodeType": "YulFunctionCall",
																"src": "12032:34:17"
															},
															"nativeSrc": "12032:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "12032:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11798:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11888:9:17",
														"nodeType": "YulTypedName",
														"src": "11888:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11899:6:17",
														"nodeType": "YulTypedName",
														"src": "11899:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11907:6:17",
														"nodeType": "YulTypedName",
														"src": "11907:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11918:4:17",
														"nodeType": "YulTypedName",
														"src": "11918:4:17",
														"type": ""
													}
												],
												"src": "11798:274:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 0x20), calldataload(_1), dataEnd)\n        value1 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101c6575f3560e01c806370a08231116100fe57806398bdf6f51161009e578063c87b56dd1161006e578063c87b56dd146103d3578063e985e9c5146103e6578063f1537686146103f9578063f2fde38b14610419575f80fd5b806398bdf6f5146103905780639c9b68e31461039a578063a22cb465146103ad578063b88d4fde146103c0575f80fd5b80638da5cb5b116100d95780638da5cb5b146103265780638df9612b1461033c578063901e1c011461036657806395d89b4114610388575f80fd5b806370a0823114610303578063715018a6146103165780638456cb591461031e575f80fd5b806340d097c3116101695780634f4accdf116101445780634f4accdf146102c85780635c975abb146102d25780636352211e146102dd5780636e0cee09146102f0575f80fd5b806340d097c31461028f57806342842e0e146102a257806342966c68146102b5575f80fd5b8063081812fc116101a4578063081812fc14610234578063095ea7b31461025f57806323b872dd146102745780633f4ba83a14610287575f80fd5b806301ffc9a7146101ca57806305d85eda146101f257806306fdde031461021f575b5f80fd5b6101dd6101d8366004611388565b61042c565b60405190151581526020015b60405180910390f35b6102116102003660046113be565b600a6020525f908152604090205481565b6040519081526020016101e9565b61022761047d565b6040516101e99190611424565b610247610242366004611436565b61050c565b6040516001600160a01b0390911681526020016101e9565b61027261026d36600461144d565b610533565b005b610272610282366004611475565b610542565b6102726105d0565b61027261029d3660046113be565b6105e2565b6102726102b0366004611475565b61065e565b6102726102c3366004611436565b61067d565b6008546102119081565b60065460ff166101dd565b6102476102eb366004611436565b610688565b6102726102fe3660046114ae565b610692565b6102116103113660046113be565b6107bb565b610272610800565b610272610811565b60065461010090046001600160a01b0316610247565b61021161034a36600461144d565b600960209081525f928352604080842090915290825290205481565b610379610374366004611436565b610821565b6040516101e9939291906114e7565b6102276108c8565b6007546102119081565b6102726103a8366004611592565b6108d7565b6102726103bb3660046115e7565b610953565b6102726103ce366004611620565b61095e565b6102276103e1366004611436565b610975565b6101dd6103f4366004611697565b6109e6565b61040c6104073660046113be565b610a13565b6040516101e991906116c8565b6102726104273660046113be565b610af1565b5f6001600160e01b031982166380ac58cd60e01b148061045c57506001600160e01b03198216635b5e139f60e01b145b8061047757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461048b9061170b565b80601f01602080910402602001604051908101604052809291908181526020018280546104b79061170b565b80156105025780601f106104d957610100808354040283529160200191610502565b820191905f5260205f20905b8154815290600101906020018083116104e557829003601f168201915b5050505050905090565b5f61051682610b2e565b505f828152600460205260409020546001600160a01b0316610477565b61053e828233610b66565b5050565b6001600160a01b03821661057057604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61057c838333610b73565b9050836001600160a01b0316816001600160a01b0316146105ca576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610567565b50505050565b6105d8610b87565b6105e0610bba565b565b5f6105ec60075490565b90506105f88282610c0c565b6001600160a01b0382165f908152600960209081526040808320600a83528184205484529091529020819055610632600780546001019055565b6001600160a01b0382165f908152600a6020526040812080549161065583611757565b91905055505050565b61067883838360405180602001604052805f81525061095e565b505050565b61053e5f8233610b73565b5f61047782610b2e565b6001600160a01b0383165f908152600960209081526040808320600a9092528220548492906106c290600161176f565b81526020019081526020015f20819055505f6106dd82610a13565b90505f5b815181101561078c57838282815181106106fd576106fd611782565b602002602001015103610784576001600160a01b0383165f818152600960208181526040808420600a8352818520548552808352908420549484529190529061074784600161176f565b815260208082019290925260409081015f908120939093556001600160a01b0386168352600a909152812080549161077e83611796565b91905055505b6001016106e1565b506001600160a01b0384165f908152600a602052604081208054916107b083611757565b919050555050505050565b5f6001600160a01b0382166107e5576040516322718ad960e21b81525f6004820152602401610567565b506001600160a01b03165f9081526003602052604090205490565b610808610b87565b6105e05f610c25565b610819610b87565b6105e0610c7e565b600b6020525f908152604090208054819061083b9061170b565b80601f01602080910402602001604051908101604052809291908181526020018280546108679061170b565b80156108b25780601f10610889576101008083540402835291602001916108b2565b820191905f5260205f20905b81548152906001019060200180831161089557829003601f168201915b5050505050908060010154908060020154905083565b60606001805461048b9061170b565b6108df610b87565b6108ed600880546001019055565b604051806060016040528083815260200182815260200161090d60085490565b9052600b5f61091b60085490565b815260208101919091526040015f208151819061093890826117ef565b50602082015160018201556040909101516002909101555050565b61053e338383610cbb565b610969848484610542565b6105ca84848484610d59565b606061098082610b2e565b505f61099660408051602081019091525f815290565b90505f8151116109b45760405180602001604052805f8152506109df565b806109be84610e7f565b6040516020016109cf9291906118af565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6001600160a01b0381165f908152600a60205260408120546060919067ffffffffffffffff811115610a4757610a4761150b565b604051908082528060200260200182016040528015610a70578160200160208202803683370190505b5090505f5b6001600160a01b0384165f908152600a6020526040902054811015610aea576001600160a01b0384165f90815260096020526040812090610ab783600161176f565b81526020019081526020015f2054828281518110610ad757610ad7611782565b6020908102919091010152600101610a75565b5092915050565b610af9610b87565b6001600160a01b038116610b2257604051631e4fbdf760e01b81525f6004820152602401610567565b610b2b81610c25565b50565b5f818152600260205260408120546001600160a01b03168061047757604051637e27328960e01b815260048101849052602401610567565b6106788383836001610f0f565b5f610b7f848484611013565b949350505050565b6006546001600160a01b036101009091041633146105e05760405163118cdaa760e01b8152336004820152602401610567565b610bc2611027565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61053e828260405180602001604052805f81525061104a565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610c86611060565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bef3390565b6001600160a01b038216610ced57604051630b61174360e31b81526001600160a01b0383166004820152602401610567565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156105ca57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d9b9033908890879087906004016118dd565b6020604051808303815f875af1925050508015610dd5575060408051601f3d908101601f19168201909252610dd291810190611919565b60015b610e3c573d808015610e02576040519150601f19603f3d011682016040523d82523d5f602084013e610e07565b606091505b5080515f03610e3457604051633250574960e11b81526001600160a01b0385166004820152602401610567565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610e7857604051633250574960e11b81526001600160a01b0385166004820152602401610567565b5050505050565b60605f610e8b83611084565b60010190505f8167ffffffffffffffff811115610eaa57610eaa61150b565b6040519080825280601f01601f191660200182016040528015610ed4576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ede57509392505050565b8080610f2357506001600160a01b03821615155b15610fe4575f610f3284610b2e565b90506001600160a01b03831615801590610f5e5750826001600160a01b0316816001600160a01b031614155b8015610f715750610f6f81846109e6565b155b15610f9a5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610567565b8115610fe25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f61101c611060565b610b7f84848461115b565b60065460ff166105e057604051638dfc202b60e01b815260040160405180910390fd5b611054838361124d565b6106785f848484610d59565b60065460ff16156105e05760405163d93c066560e01b815260040160405180910390fd5b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110c25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110ee576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061110c57662386f26fc10000830492506010015b6305f5e1008310611124576305f5e100830492506008015b612710831061113857612710830492506004015b6064831061114a576064830492506002015b600a83106104775760010192915050565b5f828152600260205260408120546001600160a01b0390811690831615611187576111878184866112ae565b6001600160a01b038116156111c1576111a25f855f80610f0f565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156111ef576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b03821661127657604051633250574960e11b81525f6004820152602401610567565b5f61128283835f610b73565b90506001600160a01b03811615610678576040516339e3563760e11b81525f6004820152602401610567565b6112b9838383611312565b610678576001600160a01b0383166112e757604051637e27328960e01b815260048101829052602401610567565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610567565b5f6001600160a01b03831615801590610b7f5750826001600160a01b0316846001600160a01b0316148061134b575061134b84846109e6565b80610b7f5750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610b2b575f80fd5b5f60208284031215611398575f80fd5b81356109df81611373565b80356001600160a01b03811681146113b9575f80fd5b919050565b5f602082840312156113ce575f80fd5b6109df826113a3565b5f5b838110156113f15781810151838201526020016113d9565b50505f910152565b5f81518084526114108160208601602086016113d7565b601f01601f19169290920160200192915050565b602081525f6109df60208301846113f9565b5f60208284031215611446575f80fd5b5035919050565b5f806040838503121561145e575f80fd5b611467836113a3565b946020939093013593505050565b5f805f60608486031215611487575f80fd5b611490846113a3565b925061149e602085016113a3565b9150604084013590509250925092565b5f805f606084860312156114c0575f80fd5b6114c9846113a3565b9250602084013591506114de604085016113a3565b90509250925092565b606081525f6114f960608301866113f9565b60208301949094525060400152919050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156115395761153961150b565b604051601f8501601f19908116603f011681019082821181831017156115615761156161150b565b81604052809350858152868686011115611579575f80fd5b858560208301375f602087830101525050509392505050565b5f80604083850312156115a3575f80fd5b823567ffffffffffffffff8111156115b9575f80fd5b8301601f810185136115c9575f80fd5b6115d88582356020840161151f565b95602094909401359450505050565b5f80604083850312156115f8575f80fd5b611601836113a3565b915060208301358015158114611615575f80fd5b809150509250929050565b5f805f8060808587031215611633575f80fd5b61163c856113a3565b935061164a602086016113a3565b925060408501359150606085013567ffffffffffffffff81111561166c575f80fd5b8501601f8101871361167c575f80fd5b61168b8782356020840161151f565b91505092959194509250565b5f80604083850312156116a8575f80fd5b6116b1836113a3565b91506116bf602084016113a3565b90509250929050565b602080825282518282018190525f9190848201906040850190845b818110156116ff578351835292840192918401916001016116e3565b50909695505050505050565b600181811c9082168061171f57607f821691505b60208210810361173d57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161176857611768611743565b5060010190565b8082018082111561047757610477611743565b634e487b7160e01b5f52603260045260245ffd5b5f816117a4576117a4611743565b505f190190565b601f82111561067857805f5260205f20601f840160051c810160208510156117d05750805b601f840160051c820191505b81811015610e78575f81556001016117dc565b815167ffffffffffffffff8111156118095761180961150b565b61181d81611817845461170b565b846117ab565b602080601f831160018114611850575f84156118395750858301515b5f19600386901b1c1916600185901b1785556118a7565b5f85815260208120601f198616915b8281101561187e5788860151825594840194600190910190840161185f565b508582101561189b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f83516118c08184602088016113d7565b8351908301906118d48183602088016113d7565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061190f908301846113f9565b9695505050505050565b5f60208284031215611929575f80fd5b81516109df8161137356fea264697066735822122094b960ff62e17506bd0b1c8078a71363d9d30f5fa261fddcec83116810533b1264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0x98BDF6F5 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xF1537686 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x419 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98BDF6F5 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x9C9B68E3 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x8DF9612B EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x901E1C01 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x31E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40D097C3 GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x4F4ACCDF GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x4F4ACCDF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x6E0CEE09 EQ PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x5D85EDA EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x211 SWAP1 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x247 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x272 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x247 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x379 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x211 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x40C PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x477 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x502 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x502 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x516 DUP3 PUSH2 0xB2E JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x477 JUMP JUMPDEST PUSH2 0x53E DUP3 DUP3 CALLER PUSH2 0xB66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x57C DUP4 DUP4 CALLER PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0xBBA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5EC PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F8 DUP3 DUP3 PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x632 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x655 DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x678 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x95E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x53E PUSH0 DUP3 CALLER PUSH2 0xB73 JUMP JUMPDEST PUSH0 PUSH2 0x477 DUP3 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6C2 SWAP1 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x6DD DUP3 PUSH2 0xA13 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x78C JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FD JUMPI PUSH2 0x6FD PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x784 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD DUP6 MSTORE DUP1 DUP4 MSTORE SWAP1 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 PUSH2 0x747 DUP5 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x77E DUP4 PUSH2 0x1796 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6E1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x7B0 DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x808 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x5E0 PUSH0 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x819 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x83B SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x867 SWAP1 PUSH2 0x170B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x889 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x895 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x8DF PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x8ED PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x90D PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0xB PUSH0 PUSH2 0x91B PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x938 SWAP1 DUP3 PUSH2 0x17EF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH2 0x53E CALLER DUP4 DUP4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x969 DUP5 DUP5 DUP5 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x5CA DUP5 DUP5 DUP5 DUP5 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x980 DUP3 PUSH2 0xB2E JUMP JUMPDEST POP PUSH0 PUSH2 0x996 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9DF JUMP JUMPDEST DUP1 PUSH2 0x9BE DUP5 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CF SWAP3 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA47 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA70 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xAB7 DUP4 PUSH1 0x1 PUSH2 0x176F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAD7 JUMPI PUSH2 0xAD7 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA75 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF9 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xC25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x678 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF0F JUMP JUMPDEST PUSH0 PUSH2 0xB7F DUP5 DUP5 DUP5 PUSH2 0x1013 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xBC2 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x53E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x104A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC86 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBEF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD9B SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDD5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDD2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE3C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE8B DUP4 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEAA PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xED4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEDE JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF23 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFE4 JUMPI PUSH0 PUSH2 0xF32 DUP5 PUSH2 0xB2E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF5E JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF71 JUMPI POP PUSH2 0xF6F DUP2 DUP5 PUSH2 0x9E6 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFE2 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x101C PUSH2 0x1060 JUMP JUMPDEST PUSH2 0xB7F DUP5 DUP5 DUP5 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1054 DUP4 DUP4 PUSH2 0x124D JUMP JUMPDEST PUSH2 0x678 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x10C2 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x10EE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x110C JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1124 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1138 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x114A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x477 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1187 DUP2 DUP5 DUP7 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x11C1 JUMPI PUSH2 0x11A2 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x11EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1276 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH0 PUSH2 0x1282 DUP4 DUP4 PUSH0 PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x12B9 DUP4 DUP4 DUP4 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x678 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x567 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB7F JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x134B JUMPI POP PUSH2 0x134B DUP5 DUP5 PUSH2 0x9E6 JUMP JUMPDEST DUP1 PUSH2 0xB7F JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB2B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9DF DUP2 PUSH2 0x1373 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9DF DUP3 PUSH2 0x13A3 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13F1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13D9 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1410 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F9 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1467 DUP4 PUSH2 0x13A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1487 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1490 DUP5 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x149E PUSH1 0x20 DUP6 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C9 DUP5 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x14DE PUSH1 0x40 DUP6 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH2 0x14F9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x1539 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1561 JUMPI PUSH2 0x1561 PUSH2 0x150B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1579 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x15C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15D8 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x151F JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1601 DUP4 PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1615 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x163C DUP6 PUSH2 0x13A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x164A PUSH1 0x20 DUP7 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x166C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x167C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x168B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x151F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B1 DUP4 PUSH2 0x13A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BF PUSH1 0x20 DUP5 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16FF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x16E3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x171F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x173D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1768 JUMPI PUSH2 0x1768 PUSH2 0x1743 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x477 JUMPI PUSH2 0x477 PUSH2 0x1743 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0x17A4 JUMPI PUSH2 0x17A4 PUSH2 0x1743 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x678 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17D0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE78 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17DC JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1809 JUMPI PUSH2 0x1809 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x181D DUP2 PUSH2 0x1817 DUP5 SLOAD PUSH2 0x170B JUMP JUMPDEST DUP5 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1850 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1839 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x18A7 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x187E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x185F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x189B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x18C0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13D7 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x18D4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x13D7 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x190F SWAP1 DUP4 ADD DUP5 PUSH2 0x13F9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1929 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9DF DUP2 PUSH2 0x1373 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB9 PUSH1 0xFF PUSH3 0xE17506 0xBD SIGNEXTEND SHR DUP1 PUSH25 0xA71363D9D30F5FA261FDDCEC83116810533B1264736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "426:2304:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:2;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1561:300:2;;;;;;;;693:40:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1107:25:17;;;1095:2;1080:18;693:40:16;961:177:17;2365:89:2;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2248:32:17;;;2230:51;;2218:2;2203:18;3497:154:2;2084:203:17;3323:113:2;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;:::i;:::-;;:::i;1054:63:16:-;;;:::i;1585:224::-;;;;;;:::i;:::-;;:::i;4787:132:2:-;;;;;;:::i;:::-;;:::i;561:314:5:-;;;;;;:::i;:::-;;:::i;587:32:16:-;;;;;;;1850:84:10;1920:7;;;;1850:84;;2185:118:2;;;;;;:::i;:::-;;:::i;2087:432:16:-;;;;;;:::i;:::-;;:::i;1920:208:2:-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;989:59:16:-;;;:::i;1638:85:0:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:0;1638:85;;625:62:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;740:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2518:93:2:-;;;:::i;543:38:16:-;;;;;;;1395:184;;;;;;:::i;:::-;;:::i;3718:144:2:-;;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;:::i;:::-;;:::i;3928:153::-;;;;;;:::i;:::-;;:::i;1814:268:16:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1561:300:2:-;1663:4;-1:-1:-1;;;;;;1698:40:2;;-1:-1:-1;;;1698:40:2;;:104;;-1:-1:-1;;;;;;;1754:48:2;;-1:-1:-1;;;1754:48:2;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:12;;;1818:36:2;1679:175;1561:300;-1:-1:-1;;1561:300:2:o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:8;3394:8:2;:35::i;:::-;3323:113;;:::o;4143:578::-;-1:-1:-1;;;;;4237:16:2;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:2;;4306:1;4276:33;;;2230:51:17;2203:18;;4276:33:2;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:8;4562:7:2;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:2;:13;-1:-1:-1;;;;;4610:21:2;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:2;;-1:-1:-1;;;;;7450:15:17;;;4654:50:2;;;7432:34:17;7482:18;;;7475:34;;;7545:15;;7525:18;;;7518:43;7367:18;;4654:50:2;7192:375:17;4606:109:2;4223:498;4143:578;;;:::o;1054:63:16:-;1531:13:0;:11;:13::i;:::-;1100:10:16::1;:8;:10::i;:::-;1054:63::o:0;1585:224::-;1632:12;1647:24;:14;918::9;;827:112;1647:24:16;1632:39;;1681:22;1691:2;1695:7;1681:9;:22::i;:::-;-1:-1:-1;;;;;1713:11:16;;;;;;:7;:11;;;;;;;;1725:5;:9;;;;;;1713:22;;;;;;;:32;;;1755:26;:14;1032:19:9;;1050:1;1032:19;;;945:123;1755:26:16;-1:-1:-1;;;;;1791:9:16;;;;;;:5;:9;;;;;:11;;;;;;:::i;:::-;;;;;;1622:187;1585:224;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;561:314:5:-;826:42;842:1;846:7;735:10:8;4562:7:2;:34::i;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;2087:432:16:-;-1:-1:-1;;;;;2172:12:16;;;;;;:7;:12;;;;;;;;2185:5;:10;;;;;;2203:8;;2172:12;2185:14;;2198:1;2185:14;:::i;:::-;2172:28;;;;;;;;;;;:39;;;;2221:24;2249:19;2260:7;2249:10;:19::i;:::-;2221:47;;2282:6;2278:213;2297:7;:14;2293:1;:18;2278:213;;;2349:8;2335:7;2343:1;2335:10;;;;;;;;:::i;:::-;;;;;;;:22;2332:149;;-1:-1:-1;;;;;2400:16:16;;;;;;:7;:16;;;;;;;;2417:5;:14;;;;;;2400:32;;;;;;;;;2376:16;;;;;;2400;2393:3;:1;2395;2393:3;:::i;:::-;2376:21;;;;;;;;;;;;;;-1:-1:-1;2376:21:16;;;:56;;;;-1:-1:-1;;;;;2450:14:16;;;;:5;:14;;;;;:16;;;;;;:::i;:::-;;;;;;2332:149;2314:3;;2278:213;;;-1:-1:-1;;;;;;2500:10:16;;;;;;:5;:10;;;;;:12;;;;;;:::i;:::-;;;;;;2162:357;2087:432;;;:::o;1920:208:2:-;1983:7;-1:-1:-1;;;;;2006:19:2;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:2;;2075:1;2048:30;;;2230:51:17;2203:18;;2048:30:2;2084:203:17;2002:87:2;-1:-1:-1;;;;;;2105:16:2;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;989:59:16:-:0;1531:13:0;:11;:13::i;:::-;1033:8:16::1;:6;:8::i;740:37::-:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;1395:184:16:-;1531:13:0;:11;:13::i;:::-;1476:20:16::1;:8;1032:19:9::0;;1050:1;1032:19;;;945:123;1476:20:16::1;1532:40;;;;;;;;1538:4;1532:40;;;;1543:9;1532:40;;;;1553:18;:8;918:14:9::0;;827:112;1553:18:16::1;1532:40:::0;;1506:3:::1;:23;1510:18;:8;918:14:9::0;;827:112;1510:18:16::1;1506:23:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1506:23:16;:66;;:23;;:66:::1;::::0;:23;:66:::1;:::i;:::-;-1:-1:-1::0;1506:66:16::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;1395:184:16:o;3718:144:2:-;3803:52;735:10:8;3836:8:2;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:2;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:2:o;3928:153::-;-1:-1:-1;;;;;4039:25:2;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;1814:268:16:-;-1:-1:-1;;;;;1936:9:16;;1895:24;1936:9;;;:5;:9;;;;;;1867:16;;1895:24;1922;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1922:24:16;;1895:51;;1961:9;1956:96;-1:-1:-1;;;;;1980:9:16;;;;;;:5;:9;;;;;;1976:13;;1956:96;;;-1:-1:-1;;;;;2023:11:16;;;;;;:7;:11;;;;;;2035:5;:1;2039;2035:5;:::i;:::-;2023:18;;;;;;;;;;;;2010:7;2018:1;2010:10;;;;;;;;:::i;:::-;;;;;;;;;;:31;1991:3;;1956:96;;;-1:-1:-1;2068:7:16;1814:268;-1:-1:-1;;1814:268:16:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2230:51:17::0;2203:18;;2672:31:0::1;2084:203:17::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;16154:241:2:-;16217:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;16279:88;;16325:31;;-1:-1:-1;;;16325:31:2;;;;;1107:25:17;;;1080:18;;16325:31:2;961:177:17;14435:120:2;14515:33;14524:2;14528:7;14537:4;14543;14515:8;:33::i;2524:204:16:-;2659:7;2689:32;2703:2;2707:7;2716:4;2689:13;:32::i;:::-;2682:39;2524:204;-1:-1:-1;;;;2524:204:16:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;;;;;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;2230:51:17;2203:18;;1901:40:0;2084:203:17;2710:117:10;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:10::1;::::0;;2798:22:::1;735:10:8::0;2807:12:10::1;2798:22;::::0;-1:-1:-1;;;;;2248:32:17;;;2230:51;;2218:2;2203:18;2798:22:10::1;;;;;;;2710:117::o:0;10650:100:2:-;10717:26;10727:2;10731:7;10717:26;;;;;;;;;;;;:9;:26::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2463:115:10:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:10::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:8::0;;656:96;15607:312:2;-1:-1:-1;;;;;15714:22:2;;15710:91;;15759:31;;-1:-1:-1;;;15759:31:2;;-1:-1:-1;;;;;2248:32:17;;15759:31:2;;;2230:51:17;2203:18;;15759:31:2;2084:203:17;15710:91:2;-1:-1:-1;;;;;15810:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15810:46:2;;;;;;;;;;15871:41;;540::17;;;15871::2;;513:18:17;15871:41:2;;;;;;;15607:312;;;:::o;16934:782::-;-1:-1:-1;;;;;17050:14:2;;;:18;17046:664;;17088:71;;-1:-1:-1;;;17088:71:2;;-1:-1:-1;;;;;17088:36:2;;;;;:71;;735:10:8;;17139:4:2;;17145:7;;17154:4;;17088:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17088:71:2;;;;;;;;-1:-1:-1;;17088:71:2;;;;;;;;;;;;:::i;:::-;;;17084:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17397:6;:13;17414:1;17397:18;17393:293;;17446:25;;-1:-1:-1;;;17446:25:2;;-1:-1:-1;;;;;2248:32:17;;17446:25:2;;;2230:51:17;2203:18;;17446:25:2;2084:203:17;17393:293:2;17638:6;17632:13;17623:6;17619:2;17615:15;17608:38;17084:616;-1:-1:-1;;;;;;17206:51:2;;-1:-1:-1;;;17206:51:2;17202:130;;17288:25;;-1:-1:-1;;;17288:25:2;;-1:-1:-1;;;;;2248:32:17;;17288:25:2;;;2230:51:17;2203:18;;17288:25:2;2084:203:17;17202:130:2;17160:186;16934:782;;;;:::o;637:698:11:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:11;-1:-1:-1;794:41:11;-1:-1:-1;955:28:11;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:11;-1:-1:-1;;;1175:2:11;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:11;1010:282;1256:21;-1:-1:-1;1312:6:11;637:698;-1:-1:-1;;;637:698:11:o;14737:661:2:-;14897:9;:31;;;-1:-1:-1;;;;;;14910:18:2;;;;14897:31;14893:460;;;14944:13;14960:22;14974:7;14960:13;:22::i;:::-;14944:38;-1:-1:-1;;;;;;15110:18:2;;;;;;:35;;;15141:4;-1:-1:-1;;;;;15132:13:2;:5;-1:-1:-1;;;;;15132:13:2;;;15110:35;:69;;;;;15150:29;15167:5;15174:4;15150:16;:29::i;:::-;15149:30;15110:69;15106:142;;;15206:27;;-1:-1:-1;;;15206:27:2;;-1:-1:-1;;;;;2248:32:17;;15206:27:2;;;2230:51:17;2203:18;;15206:27:2;2084:203:17;15106:142:2;15266:9;15262:81;;;15320:7;15316:2;-1:-1:-1;;;;;15300:28:2;15309:5;-1:-1:-1;;;;;15300:28:2;;;;;;;;;;;15262:81;14930:423;14893:460;-1:-1:-1;;15362:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15362:29:2;-1:-1:-1;;;;;15362:29:2;;;;;;;;;;14737:661::o;1120:204:6:-;1259:7;1474:19:10;:17;:19::i;:::-;1285:32:6::1;1299:2;1303:7;1312:4;1285:13;:32::i;2202:126:10:-:0;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:10;;;;;;;;;;;10971:182:2;11065:18;11071:2;11075:7;11065:5;:18::i;:::-;11093:53;11124:1;11128:2;11132:7;11141:4;11093:22;:53::i;2002:128:10:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:10;;;;;;;;;;;12214:916:14;12267:7;;-1:-1:-1;;;12342:17:14;;12338:103;;-1:-1:-1;;;12379:17:14;;;-1:-1:-1;12424:2:14;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:14;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:14;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:14;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:14;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:14;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:14:o;8838:795:2:-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:2;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:2;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:2;;;9157:256;-1:-1:-1;;;;;9427:16:2;;;9423:107;;-1:-1:-1;;;;;9487:13:2;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:2;-1:-1:-1;;;;;9540:21:2;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:2:o;9972:327::-;-1:-1:-1;;;;;10039:16:2;;10035:87;;10078:33;;-1:-1:-1;;;10078:33:2;;10108:1;10078:33;;;2230:51:17;2203:18;;10078:33:2;2084:203:17;10035:87:2;10131:21;10155:32;10163:2;10167:7;10184:1;10155:7;:32::i;:::-;10131:56;-1:-1:-1;;;;;;10201:27:2;;;10197:96;;10251:31;;-1:-1:-1;;;10251:31:2;;10279:1;10251:31;;;2230:51:17;2203:18;;10251:31:2;2084:203:17;7082:368:2;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:2;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:2;;;;;1107:25:17;;;1080:18;;7298:31:2;961:177:17;7248:186:2;7375:44;;-1:-1:-1;;;7375:44:2;;-1:-1:-1;;;;;11990:32:17;;7375:44:2;;;11972:51:17;12039:18;;;12032:34;;;11945:18;;7375:44:2;11798:274:17;6376:272:2;6479:4;-1:-1:-1;;;;;6514:21:2;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:2;:5;-1:-1:-1;;;;;6552:16:2;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:2;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:2;;;6608:32;;;;;-1:-1:-1;6376:272:2:o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:173::-;660:20;;-1:-1:-1;;;;;709:31:17;;699:42;;689:70;;755:1;752;745:12;689:70;592:173;;;:::o;770:186::-;829:6;882:2;870:9;861:7;857:23;853:32;850:52;;;898:1;895;888:12;850:52;921:29;940:9;921:29;:::i;1143:250::-;1228:1;1238:113;1252:6;1249:1;1246:13;1238:113;;;1328:11;;;1322:18;1309:11;;;1302:39;1274:2;1267:10;1238:113;;;-1:-1:-1;;1385:1:17;1367:16;;1360:27;1143:250::o;1398:271::-;1440:3;1478:5;1472:12;1505:6;1500:3;1493:19;1521:76;1590:6;1583:4;1578:3;1574:14;1567:4;1560:5;1556:16;1521:76;:::i;:::-;1651:2;1630:15;-1:-1:-1;;1626:29:17;1617:39;;;;1658:4;1613:50;;1398:271;-1:-1:-1;;1398:271:17:o;1674:220::-;1823:2;1812:9;1805:21;1786:4;1843:45;1884:2;1873:9;1869:18;1861:6;1843:45;:::i;1899:180::-;1958:6;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;-1:-1:-1;2050:23:17;;1899:180;-1:-1:-1;1899:180:17:o;2292:254::-;2360:6;2368;2421:2;2409:9;2400:7;2396:23;2392:32;2389:52;;;2437:1;2434;2427:12;2389:52;2460:29;2479:9;2460:29;:::i;:::-;2450:39;2536:2;2521:18;;;;2508:32;;-1:-1:-1;;;2292:254:17:o;2551:328::-;2628:6;2636;2644;2697:2;2685:9;2676:7;2672:23;2668:32;2665:52;;;2713:1;2710;2703:12;2665:52;2736:29;2755:9;2736:29;:::i;:::-;2726:39;;2784:38;2818:2;2807:9;2803:18;2784:38;:::i;:::-;2774:48;;2869:2;2858:9;2854:18;2841:32;2831:42;;2551:328;;;;;:::o;2884:::-;2961:6;2969;2977;3030:2;3018:9;3009:7;3005:23;3001:32;2998:52;;;3046:1;3043;3036:12;2998:52;3069:29;3088:9;3069:29;:::i;:::-;3059:39;;3145:2;3134:9;3130:18;3117:32;3107:42;;3168:38;3202:2;3191:9;3187:18;3168:38;:::i;:::-;3158:48;;2884:328;;;;;:::o;3217:362::-;3422:2;3411:9;3404:21;3385:4;3442:45;3483:2;3472:9;3468:18;3460:6;3442:45;:::i;:::-;3518:2;3503:18;;3496:34;;;;-1:-1:-1;3561:2:17;3546:18;3539:34;3434:53;3217:362;-1:-1:-1;3217:362:17:o;3584:127::-;3645:10;3640:3;3636:20;3633:1;3626:31;3676:4;3673:1;3666:15;3700:4;3697:1;3690:15;3716:632;3781:5;3811:18;3852:2;3844:6;3841:14;3838:40;;;3858:18;;:::i;:::-;3933:2;3927:9;3901:2;3987:15;;-1:-1:-1;;3983:24:17;;;4009:2;3979:33;3975:42;3963:55;;;4033:18;;;4053:22;;;4030:46;4027:72;;;4079:18;;:::i;:::-;4119:10;4115:2;4108:22;4148:6;4139:15;;4178:6;4170;4163:22;4218:3;4209:6;4204:3;4200:16;4197:25;4194:45;;;4235:1;4232;4225:12;4194:45;4285:6;4280:3;4273:4;4265:6;4261:17;4248:44;4340:1;4333:4;4324:6;4316;4312:19;4308:30;4301:41;;;;3716:632;;;;;:::o;4353:523::-;4431:6;4439;4492:2;4480:9;4471:7;4467:23;4463:32;4460:52;;;4508:1;4505;4498:12;4460:52;4548:9;4535:23;4581:18;4573:6;4570:30;4567:50;;;4613:1;4610;4603:12;4567:50;4636:22;;4689:4;4681:13;;4677:27;-1:-1:-1;4667:55:17;;4718:1;4715;4708:12;4667:55;4741:76;4809:7;4804:2;4791:16;4784:4;4780:2;4776:13;4741:76;:::i;:::-;4731:86;4864:4;4849:20;;;;4836:34;;-1:-1:-1;;;;4353:523:17:o;4881:347::-;4946:6;4954;5007:2;4995:9;4986:7;4982:23;4978:32;4975:52;;;5023:1;5020;5013:12;4975:52;5046:29;5065:9;5046:29;:::i;:::-;5036:39;;5125:2;5114:9;5110:18;5097:32;5172:5;5165:13;5158:21;5151:5;5148:32;5138:60;;5194:1;5191;5184:12;5138:60;5217:5;5207:15;;;4881:347;;;;;:::o;5233:667::-;5328:6;5336;5344;5352;5405:3;5393:9;5384:7;5380:23;5376:33;5373:53;;;5422:1;5419;5412:12;5373:53;5445:29;5464:9;5445:29;:::i;:::-;5435:39;;5493:38;5527:2;5516:9;5512:18;5493:38;:::i;:::-;5483:48;;5578:2;5567:9;5563:18;5550:32;5540:42;;5633:2;5622:9;5618:18;5605:32;5660:18;5652:6;5649:30;5646:50;;;5692:1;5689;5682:12;5646:50;5715:22;;5768:4;5760:13;;5756:27;-1:-1:-1;5746:55:17;;5797:1;5794;5787:12;5746:55;5820:74;5886:7;5881:2;5868:16;5863:2;5859;5855:11;5820:74;:::i;:::-;5810:84;;;5233:667;;;;;;;:::o;5905:260::-;5973:6;5981;6034:2;6022:9;6013:7;6009:23;6005:32;6002:52;;;6050:1;6047;6040:12;6002:52;6073:29;6092:9;6073:29;:::i;:::-;6063:39;;6121:38;6155:2;6144:9;6140:18;6121:38;:::i;:::-;6111:48;;5905:260;;;;;:::o;6170:632::-;6341:2;6393:21;;;6463:13;;6366:18;;;6485:22;;;6312:4;;6341:2;6564:15;;;;6538:2;6523:18;;;6312:4;6607:169;6621:6;6618:1;6615:13;6607:169;;;6682:13;;6670:26;;6751:15;;;;6716:12;;;;6643:1;6636:9;6607:169;;;-1:-1:-1;6793:3:17;;6170:632;-1:-1:-1;;;;;;6170:632:17:o;6807:380::-;6886:1;6882:12;;;;6929;;;6950:61;;7004:4;6996:6;6992:17;6982:27;;6950:61;7057:2;7049:6;7046:14;7026:18;7023:38;7020:161;;7103:10;7098:3;7094:20;7091:1;7084:31;7138:4;7135:1;7128:15;7166:4;7163:1;7156:15;7020:161;;6807:380;;;:::o;7572:127::-;7633:10;7628:3;7624:20;7621:1;7614:31;7664:4;7661:1;7654:15;7688:4;7685:1;7678:15;7704:135;7743:3;7764:17;;;7761:43;;7784:18;;:::i;:::-;-1:-1:-1;7831:1:17;7820:13;;7704:135::o;7844:125::-;7909:9;;;7930:10;;;7927:36;;;7943:18;;:::i;7974:127::-;8035:10;8030:3;8026:20;8023:1;8016:31;8066:4;8063:1;8056:15;8090:4;8087:1;8080:15;8106:136;8145:3;8173:5;8163:39;;8182:18;;:::i;:::-;-1:-1:-1;;;8218:18:17;;8106:136::o;8373:518::-;8475:2;8470:3;8467:11;8464:421;;;8511:5;8508:1;8501:16;8555:4;8552:1;8542:18;8625:2;8613:10;8609:19;8606:1;8602:27;8596:4;8592:38;8661:4;8649:10;8646:20;8643:47;;;-1:-1:-1;8684:4:17;8643:47;8739:2;8734:3;8730:12;8727:1;8723:20;8717:4;8713:31;8703:41;;8794:81;8812:2;8805:5;8802:13;8794:81;;;8871:1;8857:16;;8838:1;8827:13;8794:81;;9067:1345;9193:3;9187:10;9220:18;9212:6;9209:30;9206:56;;;9242:18;;:::i;:::-;9271:97;9361:6;9321:38;9353:4;9347:11;9321:38;:::i;:::-;9315:4;9271:97;:::i;:::-;9423:4;;9480:2;9469:14;;9497:1;9492:663;;;;10199:1;10216:6;10213:89;;;-1:-1:-1;10268:19:17;;;10262:26;10213:89;-1:-1:-1;;9024:1:17;9020:11;;;9016:24;9012:29;9002:40;9048:1;9044:11;;;8999:57;10315:81;;9462:944;;9492:663;8320:1;8313:14;;;8357:4;8344:18;;-1:-1:-1;;9528:20:17;;;9646:236;9660:7;9657:1;9654:14;9646:236;;;9749:19;;;9743:26;9728:42;;9841:27;;;;9809:1;9797:14;;;;9676:19;;9646:236;;;9650:3;9910:6;9901:7;9898:19;9895:201;;;9971:19;;;9965:26;-1:-1:-1;;10054:1:17;10050:14;;;10066:3;10046:24;10042:37;10038:42;10023:58;10008:74;;9895:201;;;10142:1;10133:6;10130:1;10126:14;10122:22;10116:4;10109:36;9462:944;;;;;9067:1345;;:::o;10417:496::-;10596:3;10634:6;10628:13;10650:66;10709:6;10704:3;10697:4;10689:6;10685:17;10650:66;:::i;:::-;10779:13;;10738:16;;;;10801:70;10779:13;10738:16;10848:4;10836:17;;10801:70;:::i;:::-;10887:20;;10417:496;-1:-1:-1;;;;10417:496:17:o;10918:489::-;-1:-1:-1;;;;;11187:15:17;;;11169:34;;11239:15;;11234:2;11219:18;;11212:43;11286:2;11271:18;;11264:34;;;11334:3;11329:2;11314:18;;11307:31;;;11112:4;;11355:46;;11381:19;;11373:6;11355:46;:::i;:::-;11347:54;10918:489;-1:-1:-1;;;;;;10918:489:17:o;11412:249::-;11481:6;11534:2;11522:9;11513:7;11509:23;11505:32;11502:52;;;11550:1;11547;11540:12;11502:52;11582:9;11576:16;11601:30;11625:5;11601:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1301200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EnterData(string,uint256)": "infinite",
								"TokenId(address,uint256)": "2676",
								"URI(uint256)": "infinite",
								"URICount()": "2342",
								"approve(address,uint256)": "31509",
								"balanceOf(address)": "2631",
								"burn(uint256)": "infinite",
								"count(address)": "2585",
								"getApproved(uint256)": "infinite",
								"getTokenId(address)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2386",
								"ownerOf(uint256)": "infinite",
								"pause()": "infinite",
								"paused()": "2359",
								"renounceOwnership()": "infinite",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26745",
								"supportsInterface(bytes4)": "554",
								"symbol()": "infinite",
								"tokenIdCounter()": "2342",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28476",
								"unpause()": "infinite",
								"updateTokenId(address,uint256,address)": "infinite"
							},
							"internal": {
								"_update(address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 875,
									"end": 983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 875,
									"end": 983,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 875,
									"end": 983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 963,
									"end": 975,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4469737061746368204149"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "44504149"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3193,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 875,
									"end": 983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 17,
									"value": "10"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 17,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2996,
									"end": 3199,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 2996,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 2730,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094b960ff62e17506bd0b1c8078a71363d9d30f5fa261fddcec83116810533b1264736f6c63430008160033",
									".code": [
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "98BDF6F5"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "F1537686"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "98BDF6F5"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "9C9B68E3"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "8DF9612B"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "901E1C01"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "8456CB59"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "40D097C3"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "4F4ACCDF"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "4F4ACCDF"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "5C975ABB"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "6E0CEE09"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "40D097C3"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "42966C68"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "3F4BA83A"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "5D85EDA"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 2730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 693,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 693,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 733,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 693,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 961,
											"end": 1138,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1117,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1054,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1054,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1054,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 1054,
											"end": 1117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1585,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "tag",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 1585,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 561,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 561,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 619,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 587,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 587,
											"end": 619,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 587,
											"end": 619,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 2087,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 2087,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1048,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 989,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 989,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 989,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 989,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 687,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 625,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 687,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 625,
											"end": 687,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 740,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 740,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 740,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 543,
											"end": 581,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 543,
											"end": 581,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 543,
											"end": 581,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 543,
											"end": 581,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 543,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 543,
											"end": 581,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 543,
											"end": 581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 543,
											"end": 581,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 1395,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 1395,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1814,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1814,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 1814,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7466,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7475,
											"end": 7509,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7475,
											"end": 7509,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7475,
											"end": 7509,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7545,
											"end": 7560,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7545,
											"end": 7560,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7518,
											"end": 7561,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7192,
											"end": 7567,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1117,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 1054,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 1100,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 1100,
											"end": 1110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 1100,
											"end": 1110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1054,
											"end": 1117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 1647,
											"end": 1661,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1671,
											"name": "tag",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 1647,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1632,
											"end": 1671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1632,
											"end": 1671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 1691,
											"end": 1693,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1695,
											"end": 1702,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1681,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1681,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "tag",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1725,
											"end": 1730,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1735,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1745,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1745,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1755,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 1755,
											"end": 1769,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1781,
											"name": "tag",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 1755,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 1791,
											"end": 1802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "tag",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1802,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1622,
											"end": 1809,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1585,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 561,
											"end": 875,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 561,
											"end": 875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2179,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2211,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2203,
											"end": 2211,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 2185,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2211,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2211,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2211,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2211,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 2249,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2268,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2268,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2297,
											"end": 2311,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2357,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2335,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "tag",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2332,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 2332,
											"end": 2481,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 2393,
											"end": 2394,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 2393,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2397,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2432,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2432,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2432,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2432,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 2450,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2332,
											"end": 2481,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 2332,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 2278,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 2500,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2087,
											"end": 2519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1048,
											"name": "tag",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 989,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "184"
										},
										{
											"begin": 1033,
											"end": 1039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 1033,
											"end": 1041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "B"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 740,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 740,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "tag",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 740,
											"end": 777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "tag",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 1395,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 1476,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 1476,
											"end": 1496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1542,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1543,
											"end": 1552,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1553,
											"end": 1571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 1553,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 1553,
											"end": 1571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1572,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "B"
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 1510,
											"end": 1518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 1510,
											"end": 1528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 1506,
											"end": 1572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1941,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 1922,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1976,
											"end": 1989,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1976,
											"end": 1989,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2035,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2035,
											"end": 2036,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2035,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 2035,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2035,
											"end": 2040,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2035,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2017,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2010,
											"end": 2020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2010,
											"end": 2041,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 1956,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2075,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1814,
											"end": 2082,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 2082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16154,
											"end": 16395,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 16154,
											"end": 16395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16217,
											"end": 16224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16279,
											"end": 16367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 16279,
											"end": 16367,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16325,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 961,
											"end": 1138,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14435,
											"end": 14555,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14435,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14515,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 14524,
											"end": 14526,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14537,
											"end": 14541,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14543,
											"end": 14547,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14515,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14515,
											"end": 14548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2728,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 2524,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2659,
											"end": 2666,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 2703,
											"end": 2705,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2707,
											"end": 2714,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 2689,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2689,
											"end": 2721,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 2689,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2682,
											"end": 2721,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2524,
											"end": 2728,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2524,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10750,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10650,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10727,
											"end": 10729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10731,
											"end": 10738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10717,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 10717,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15607,
											"end": 15919,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 15607,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15714,
											"end": 15736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15714,
											"end": 15736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15710,
											"end": 15801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 15710,
											"end": 15801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15710,
											"end": 15801,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 15710,
											"end": 15801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15828,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15835,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15845,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15810,
											"end": 15856,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15912,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15607,
											"end": 15919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15607,
											"end": 15919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15607,
											"end": 15919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15607,
											"end": 15919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16934,
											"end": 17716,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 16934,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17050,
											"end": 17064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17050,
											"end": 17064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17050,
											"end": 17064,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17050,
											"end": 17068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17046,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 17046,
											"end": 17710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17088,
											"end": 17124,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17124,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17088,
											"end": 17124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17139,
											"end": 17143,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17145,
											"end": 17152,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17145,
											"end": 17152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17154,
											"end": 17158,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17154,
											"end": 17158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 17088,
											"end": 17159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 17088,
											"end": 17159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 17088,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17397,
											"end": 17403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17397,
											"end": 17410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17414,
											"end": 17415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17397,
											"end": 17415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 17393,
											"end": 17686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17446,
											"end": 17471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17393,
											"end": 17686,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 17393,
											"end": 17686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17638,
											"end": 17644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17632,
											"end": 17645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 17629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17619,
											"end": 17621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17615,
											"end": 17630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17608,
											"end": 17646,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 17084,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17206,
											"end": 17257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17206,
											"end": 17257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17206,
											"end": 17257,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17202,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 17202,
											"end": 17332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17202,
											"end": 17332,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 17202,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16934,
											"end": 17716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16934,
											"end": 17716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16934,
											"end": 17716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16934,
											"end": 17716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16934,
											"end": 17716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14737,
											"end": 15398,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14737,
											"end": 15398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 14928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14897,
											"end": 14928,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 14928,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14897,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 15353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14893,
											"end": 15353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14944,
											"end": 14957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14960,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 14974,
											"end": 14981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14960,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 14960,
											"end": 14982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14960,
											"end": 14982,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 14960,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14944,
											"end": 14982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15110,
											"end": 15128,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 15110,
											"end": 15145,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15141,
											"end": 15145,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15145,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 15110,
											"end": 15145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 15167,
											"end": 15172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15178,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 15150,
											"end": 15179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15179,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 15150,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15179,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 15110,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15106,
											"end": 15248,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15106,
											"end": 15248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 15106,
											"end": 15248,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15106,
											"end": 15248,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 15106,
											"end": 15248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15266,
											"end": 15275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15262,
											"end": 15343,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15262,
											"end": 15343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 15262,
											"end": 15343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15320,
											"end": 15327,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15316,
											"end": 15318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15309,
											"end": 15314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15328,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15262,
											"end": 15343,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 15262,
											"end": 15343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 15353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 15353,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14893,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15386,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14737,
											"end": 15398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1299,
											"end": 1301,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1316,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1285,
											"end": 1317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10971,
											"end": 11153,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 10971,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11065,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 11065,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11093,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11124,
											"end": 11125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11093,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 11093,
											"end": 11146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9972,
											"end": 10299,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 9972,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10039,
											"end": 10055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10055,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10035,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 10035,
											"end": 10122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10108,
											"end": 10109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10078,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10035,
											"end": 10122,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 10035,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10174,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10155,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10187,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 10155,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10131,
											"end": 10187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10201,
											"end": 10228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10201,
											"end": 10228,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10201,
											"end": 10228,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10197,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10197,
											"end": 10293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2281,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10251,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2287,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 961,
											"end": 1138,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11990,
											"end": 12022,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11990,
											"end": 12022,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11972,
											"end": 12023,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12039,
											"end": 12057,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12039,
											"end": 12057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12039,
											"end": 12057,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12032,
											"end": 12066,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12032,
											"end": 12066,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12032,
											"end": 12066,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11798,
											"end": 12072,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 765,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 592,
											"end": 765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 660,
											"end": 680,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 709,
											"end": 740,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 699,
											"end": 741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 699,
											"end": 741,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 759,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 592,
											"end": 765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 592,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 770,
											"end": 956,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 770,
											"end": 956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 829,
											"end": 835,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 850,
											"end": 902,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 850,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 898,
											"end": 899,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 896,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 888,
											"end": 900,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 850,
											"end": 902,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 921,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 921,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 921,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1393,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 1143,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1309,
											"end": 1320,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1309,
											"end": 1320,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1309,
											"end": 1320,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1341,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1277,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1383,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1367,
											"end": 1383,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1669,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 1398,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1443,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1472,
											"end": 1484,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1511,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1500,
											"end": 1503,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1493,
											"end": 1512,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1581,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 1521,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1651,
											"end": 1653,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1658,
											"end": 1662,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1663,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1663,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1669,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1398,
											"end": 1669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1894,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 1674,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1786,
											"end": 1790,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1843,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 1843,
											"end": 1888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 2079,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1899,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1982,
											"end": 2014,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2027,
											"end": 2028,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2073,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2073,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 2079,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2546,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 2292,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2421,
											"end": 2423,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2419,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2392,
											"end": 2424,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2389,
											"end": 2441,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2389,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 2389,
											"end": 2441,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2389,
											"end": 2441,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 2389,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 2460,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2489,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 2460,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2450,
											"end": 2489,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2508,
											"end": 2540,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2508,
											"end": 2540,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2292,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2642,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2685,
											"end": 2694,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2672,
											"end": 2695,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2668,
											"end": 2700,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2665,
											"end": 2717,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2665,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 2665,
											"end": 2717,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2711,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2715,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2665,
											"end": 2717,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 2665,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2736,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2736,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 2736,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2736,
											"end": 2765,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 2736,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2726,
											"end": 2765,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2726,
											"end": 2765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 2818,
											"end": 2820,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2803,
											"end": 2821,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 2784,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 2822,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 2784,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2774,
											"end": 2822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2774,
											"end": 2822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2872,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2873,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2831,
											"end": 2873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2831,
											"end": 2873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2551,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2977,
											"end": 2983,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3009,
											"end": 3016,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2998,
											"end": 3050,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2998,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 2998,
											"end": 3050,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3044,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3036,
											"end": 3048,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2998,
											"end": 3050,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 2998,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 3069,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3098,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 3069,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3098,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3149,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3149,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3168,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 3202,
											"end": 3204,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3168,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 3168,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3168,
											"end": 3206,
											"name": "tag",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 3168,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3158,
											"end": 3206,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3158,
											"end": 3206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 3212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3217,
											"end": 3579,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 3217,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3411,
											"end": 3420,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3404,
											"end": 3425,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3385,
											"end": 3389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 3483,
											"end": 3485,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3442,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 3442,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3442,
											"end": 3487,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 3442,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3530,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3530,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3530,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3530,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3563,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3564,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3539,
											"end": 3573,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3434,
											"end": 3487,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3217,
											"end": 3579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3217,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3584,
											"end": 3711,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 3584,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 3640,
											"end": 3643,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3636,
											"end": 3656,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3657,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3676,
											"end": 3680,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3673,
											"end": 3674,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3666,
											"end": 3681,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3704,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3705,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3781,
											"end": 3786,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3841,
											"end": 3855,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3838,
											"end": 3878,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3838,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 3838,
											"end": 3878,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 3858,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4007,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4007,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4007,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4009,
											"end": 4011,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 3979,
											"end": 4012,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 4017,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 4018,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 4018,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 4018,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4075,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4075,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4075,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4030,
											"end": 4076,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 4079,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4115,
											"end": 4117,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4139,
											"end": 4154,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4139,
											"end": 4154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4170,
											"end": 4176,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4209,
											"end": 4215,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4204,
											"end": 4207,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4197,
											"end": 4222,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4194,
											"end": 4239,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4194,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 4194,
											"end": 4239,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4235,
											"end": 4236,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4233,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4194,
											"end": 4239,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 4194,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4273,
											"end": 4277,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4271,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4261,
											"end": 4278,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4248,
											"end": 4292,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 4340,
											"end": 4341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4337,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4331,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4301,
											"end": 4342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4301,
											"end": 4342,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4301,
											"end": 4342,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4301,
											"end": 4342,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 4348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4353,
											"end": 4876,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 4353,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4439,
											"end": 4445,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4463,
											"end": 4495,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4460,
											"end": 4512,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4460,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 4460,
											"end": 4512,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4508,
											"end": 4509,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4506,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4460,
											"end": 4512,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 4460,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4548,
											"end": 4557,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 4558,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4600,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4617,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 4567,
											"end": 4617,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4603,
											"end": 4615,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4617,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 4567,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4636,
											"end": 4658,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4636,
											"end": 4658,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4681,
											"end": 4694,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4681,
											"end": 4694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4677,
											"end": 4704,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4667,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 4667,
											"end": 4722,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4718,
											"end": 4719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4720,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4667,
											"end": 4722,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 4667,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4741,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 4809,
											"end": 4816,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4806,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4791,
											"end": 4807,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4784,
											"end": 4788,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4741,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 4741,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4741,
											"end": 4817,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 4741,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4731,
											"end": 4817,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4864,
											"end": 4868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4836,
											"end": 4870,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4836,
											"end": 4870,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4353,
											"end": 4876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4960,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5009,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4993,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4982,
											"end": 5005,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4978,
											"end": 5010,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5023,
											"end": 5024,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5013,
											"end": 5025,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5046,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 5065,
											"end": 5074,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5046,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 5046,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5046,
											"end": 5075,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 5046,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5036,
											"end": 5075,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5036,
											"end": 5075,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5114,
											"end": 5123,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5097,
											"end": 5129,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5172,
											"end": 5177,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5165,
											"end": 5178,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5179,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5151,
											"end": 5156,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5148,
											"end": 5180,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5138,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 5138,
											"end": 5198,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5196,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5138,
											"end": 5198,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 5138,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5217,
											"end": 5222,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5222,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5222,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5222,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 5228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "tag",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5328,
											"end": 5334,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5358,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5405,
											"end": 5408,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 5393,
											"end": 5402,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5384,
											"end": 5391,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5380,
											"end": 5403,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5376,
											"end": 5409,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5412,
											"end": 5424,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5445,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5445,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 5445,
											"end": 5474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5445,
											"end": 5474,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 5445,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5435,
											"end": 5474,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5435,
											"end": 5474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5493,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 5527,
											"end": 5529,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5525,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5493,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 5493,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5493,
											"end": 5531,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 5493,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5483,
											"end": 5531,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5483,
											"end": 5531,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5550,
											"end": 5582,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5540,
											"end": 5582,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5540,
											"end": 5582,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5618,
											"end": 5636,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5652,
											"end": 5658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5649,
											"end": 5679,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5690,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5756,
											"end": 5783,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5746,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 5746,
											"end": 5801,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5746,
											"end": 5801,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 5746,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5820,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 5886,
											"end": 5893,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5881,
											"end": 5883,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5868,
											"end": 5884,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5855,
											"end": 5866,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5820,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 5820,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5820,
											"end": 5894,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 5820,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5810,
											"end": 5894,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5810,
											"end": 5894,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5810,
											"end": 5894,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "tag",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5973,
											"end": 5979,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6009,
											"end": 6032,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6005,
											"end": 6037,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6002,
											"end": 6054,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6002,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 6002,
											"end": 6054,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6040,
											"end": 6052,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6002,
											"end": 6054,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 6002,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6073,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 6092,
											"end": 6101,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6073,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 6073,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6073,
											"end": 6102,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 6073,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6102,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6063,
											"end": 6102,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 6155,
											"end": 6157,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6144,
											"end": 6153,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 6121,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6111,
											"end": 6159,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6111,
											"end": 6159,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 6165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6170,
											"end": 6802,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 6170,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6476,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6476,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6485,
											"end": 6507,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6485,
											"end": 6507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6485,
											"end": 6507,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6538,
											"end": 6540,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6621,
											"end": 6627,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6618,
											"end": 6619,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6615,
											"end": 6628,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6682,
											"end": 6695,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6682,
											"end": 6695,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6670,
											"end": 6696,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6670,
											"end": 6696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6751,
											"end": 6766,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6751,
											"end": 6766,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6751,
											"end": 6766,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6751,
											"end": 6766,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6643,
											"end": 6644,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6636,
											"end": 6645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 6607,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 6170,
											"end": 6802,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6170,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 7187,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 6807,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6950,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 6950,
											"end": 7011,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 7009,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 7009,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6950,
											"end": 7011,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 6950,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7057,
											"end": 7059,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7049,
											"end": 7055,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7046,
											"end": 7060,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7023,
											"end": 7061,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7020,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 7020,
											"end": 7181,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7103,
											"end": 7113,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 7098,
											"end": 7101,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7094,
											"end": 7114,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7115,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7143,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7166,
											"end": 7170,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7171,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7020,
											"end": 7181,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 7020,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7020,
											"end": 7181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 7187,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 7187,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 7187,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 7187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7572,
											"end": 7699,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 7572,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 7628,
											"end": 7631,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7624,
											"end": 7644,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7614,
											"end": 7645,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7664,
											"end": 7668,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7654,
											"end": 7669,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 7692,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7685,
											"end": 7686,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7693,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7839,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 7704,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7743,
											"end": 7746,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7781,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7764,
											"end": 7781,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7764,
											"end": 7781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7761,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 7761,
											"end": 7804,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 7784,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7831,
											"end": 7832,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7820,
											"end": 7833,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7820,
											"end": 7833,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7844,
											"end": 7969,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 7844,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7930,
											"end": 7940,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7930,
											"end": 7940,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7930,
											"end": 7940,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7927,
											"end": 7963,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7927,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 7927,
											"end": 7963,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 7943,
											"end": 7961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7974,
											"end": 8101,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 7974,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8035,
											"end": 8045,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 8030,
											"end": 8033,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 8023,
											"end": 8024,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8047,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8066,
											"end": 8070,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 8063,
											"end": 8064,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8056,
											"end": 8071,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8095,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8106,
											"end": 8242,
											"name": "tag",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 8106,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8145,
											"end": 8148,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8178,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 8163,
											"end": 8202,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 8182,
											"end": 8200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8218,
											"end": 8236,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8218,
											"end": 8236,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8106,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8891,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 8373,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8475,
											"end": 8477,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8470,
											"end": 8473,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8467,
											"end": 8478,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8464,
											"end": 8885,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8464,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 8464,
											"end": 8885,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8516,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8517,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8555,
											"end": 8559,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8625,
											"end": 8627,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8609,
											"end": 8628,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8606,
											"end": 8607,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 8602,
											"end": 8629,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8592,
											"end": 8630,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8661,
											"end": 8665,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8649,
											"end": 8659,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8646,
											"end": 8666,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8643,
											"end": 8690,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8643,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 8643,
											"end": 8690,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8688,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8643,
											"end": 8690,
											"name": "tag",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 8643,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8734,
											"end": 8737,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8730,
											"end": 8742,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8727,
											"end": 8728,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8713,
											"end": 8744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8703,
											"end": 8744,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8703,
											"end": 8744,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8812,
											"end": 8814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8805,
											"end": 8810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 8815,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8857,
											"end": 8873,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8857,
											"end": 8873,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 8838,
											"end": 8839,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8827,
											"end": 8840,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 8794,
											"end": 8875,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9067,
											"end": 10412,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 9067,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9193,
											"end": 9196,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9187,
											"end": 9197,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9220,
											"end": 9238,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9209,
											"end": 9239,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9206,
											"end": 9262,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9206,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 9206,
											"end": 9262,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 9242,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 9361,
											"end": 9367,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9321,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 9353,
											"end": 9357,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9347,
											"end": 9358,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9321,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 9321,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9321,
											"end": 9359,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 9321,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9315,
											"end": 9319,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 9271,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9368,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 9271,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9480,
											"end": 9482,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 9469,
											"end": 9483,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9469,
											"end": 9483,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9497,
											"end": 9498,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9492,
											"end": 10155,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9492,
											"end": 10155,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9492,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 9492,
											"end": 10155,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10199,
											"end": 10200,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10216,
											"end": 10222,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10213,
											"end": 10302,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10213,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 10213,
											"end": 10302,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10262,
											"end": 10288,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10213,
											"end": 10302,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 10213,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9024,
											"end": 9025,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 9020,
											"end": 9031,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9020,
											"end": 9031,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9020,
											"end": 9031,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9016,
											"end": 9040,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 9002,
											"end": 9042,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9048,
											"end": 9049,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9044,
											"end": 9055,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9044,
											"end": 9055,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9044,
											"end": 9055,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 8999,
											"end": 9056,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 10315,
											"end": 10396,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10315,
											"end": 10396,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9492,
											"end": 10155,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 9492,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8320,
											"end": 8321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8327,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8313,
											"end": 8327,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8313,
											"end": 8327,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9660,
											"end": 9667,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9657,
											"end": 9658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9654,
											"end": 9668,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9749,
											"end": 9768,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9743,
											"end": 9769,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9797,
											"end": 9811,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9797,
											"end": 9811,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9797,
											"end": 9811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9797,
											"end": 9811,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 9646,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9650,
											"end": 9653,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9910,
											"end": 9916,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9901,
											"end": 9908,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9898,
											"end": 9917,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9965,
											"end": 9991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 10050,
											"end": 10064,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10050,
											"end": 10064,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10050,
											"end": 10064,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 10066,
											"end": 10069,
											"name": "PUSH",
											"source": 17,
											"value": "F8"
										},
										{
											"begin": 10046,
											"end": 10070,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10042,
											"end": 10079,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 10038,
											"end": 10080,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 10023,
											"end": 10081,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10008,
											"end": 10082,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10008,
											"end": 10082,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9895,
											"end": 10096,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10142,
											"end": 10143,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10126,
											"end": 10140,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 10122,
											"end": 10144,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10116,
											"end": 10120,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10109,
											"end": 10145,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "tag",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9462,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9067,
											"end": 10412,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9067,
											"end": 10412,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9067,
											"end": 10412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10417,
											"end": 10913,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 10417,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10596,
											"end": 10599,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10640,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10628,
											"end": 10641,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10650,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 10709,
											"end": 10715,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10704,
											"end": 10707,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10697,
											"end": 10701,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10685,
											"end": 10702,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10650,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 10650,
											"end": 10716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10650,
											"end": 10716,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 10650,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10779,
											"end": 10792,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10779,
											"end": 10792,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10801,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 10779,
											"end": 10792,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10801,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 10801,
											"end": 10871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10801,
											"end": 10871,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 10801,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10417,
											"end": 10913,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10918,
											"end": 11407,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 10918,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11187,
											"end": 11202,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11187,
											"end": 11202,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11187,
											"end": 11202,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11169,
											"end": 11203,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11169,
											"end": 11203,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11239,
											"end": 11254,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11239,
											"end": 11254,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11234,
											"end": 11236,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11212,
											"end": 11255,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11286,
											"end": 11288,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11271,
											"end": 11289,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11271,
											"end": 11289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11298,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11298,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11264,
											"end": 11298,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11334,
											"end": 11337,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 11329,
											"end": 11331,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11314,
											"end": 11332,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11314,
											"end": 11332,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11307,
											"end": 11338,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11112,
											"end": 11116,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11116,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11355,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 11355,
											"end": 11401,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11381,
											"end": 11400,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11381,
											"end": 11400,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11373,
											"end": 11379,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11355,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 11355,
											"end": 11401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11355,
											"end": 11401,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 11355,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11347,
											"end": 11401,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 10918,
											"end": 11407,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10918,
											"end": 11407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11412,
											"end": 11661,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 11412,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11481,
											"end": 11487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11522,
											"end": 11531,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11513,
											"end": 11520,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11509,
											"end": 11532,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11505,
											"end": 11537,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11502,
											"end": 11554,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11502,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 11502,
											"end": 11554,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11540,
											"end": 11552,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11502,
											"end": 11554,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 11502,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11582,
											"end": 11591,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11576,
											"end": 11592,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11601,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 11625,
											"end": 11630,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11601,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 11601,
											"end": 11631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/mintStones.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EnterData(string,uint256)": "9c9b68e3",
							"TokenId(address,uint256)": "8df9612b",
							"URI(uint256)": "901e1c01",
							"URICount()": "4f4accdf",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"count(address)": "05d85eda",
							"getApproved(uint256)": "081812fc",
							"getTokenId(address)": "f1537686",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenIdCounter()": "98bdf6f5",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateTokenId(address,uint256,address)": "6e0cee09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"}],\"name\":\"EnterData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"URI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"URICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"updateTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dispatch_AI/mintStones.sol\":\"Dispatch\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ae0bacd8623ce1cfad08c70ed111e995d23c66ad057b779b838ad2e5598681\",\"dweb:/ipfs/QmWZGSEjZ9DmbQmHjjsdkRbJtU25Ai65VScDnEziRCkPRB\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xab7469fb4d5dbca13494abb44b720b63b62a48d594083312de4865ba50cd80b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334002204a6c9af1bb233295dfae3052ea887c2f1913130fb931fe1b11692319\",\"dweb:/ipfs/Qme5siHWg53YLWpXBb1rBTSRaTVbtWLnYUBa4Pjq2CYFpt\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Dispatch_AI/mintStones.sol\":{\"keccak256\":\"0x2577a165d271bd6bd4ce7645d95b3be6710373848a02e753a8e3a03d3e8d7c4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d87f5c7b363528f9be99f6ceae686b2507a2da0ea4ba97ad12ea6a84c6ceb00\",\"dweb:/ipfs/QmfQaBXtpFeuaKvx8eecXHZFPSGYRjeY8aTusbw16JSvA1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1625,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 3205,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1548_storage"
							},
							{
								"astId": 3208,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "URICount",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)1548_storage"
							},
							{
								"astId": 3214,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "TokenId",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 3218,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "count",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3223,
								"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
								"label": "URI",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_struct(Admin)3230_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Admin)3230_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Dispatch.Admin)",
								"numberOfBytes": "32",
								"value": "t_struct(Admin)3230_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Admin)3230_storage": {
								"encoding": "inplace",
								"label": "struct Dispatch.Admin",
								"members": [
									{
										"astId": 3225,
										"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
										"label": "URI",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 3227,
										"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
										"label": "capAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3229,
										"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
										"label": "Count",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Counter)1548_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1547,
										"contract": "contracts/Dispatch_AI/mintStones.sol:Dispatch",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1542
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1543,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1542,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1542,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1542
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1542
						],
						"ERC165": [
							2012
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							2024
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1520
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							1988
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1521,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1543,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1542,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1989,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1988,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 2013,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2024,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2012,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1542,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2012,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1520,
								1410,
								2012,
								2024,
								1542
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1988,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2011,
										2023
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1520_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1520_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1520",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2011,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2012,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2024,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1505
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1511
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1519
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1801,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10025:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10039:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10053:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10045:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10045:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10039:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10035:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10057:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10108:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10100:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10100:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10100:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10078:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10078:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10071:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10139:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10131:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10131:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10163:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10167:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10184:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10176:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10176:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10176:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10155:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10155:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10131:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10201:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10218:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10218:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10218:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10201:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10197:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10230:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10279:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10271:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10271:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10271:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10251:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10251:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10244:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:328:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\nsetApprovalForAll\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9981:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9995:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9987:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9987:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9986:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10025:0:2"
									},
									"scope": 1293,
									"src": "9972:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10707:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10727:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10731:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10740:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10717:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10717:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10717:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10305:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10659:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10677:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10669:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10689:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10681:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10668:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10707:0:2"
									},
									"scope": 1293,
									"src": "10650:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11055:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11071:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11075:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11065:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11065:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11065:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11124:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11116:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11116:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11116:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11128:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11132:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11141:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11093:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11093:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11093:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10756:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10980:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10998:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10990:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11010:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11032:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11019:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11019:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10989:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11055:0:2"
									},
									"scope": 1293,
									"src": "10971:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11520:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11538:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11530:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11530:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11570:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11562:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11562:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11562:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11591:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11583:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11583:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11583:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11554:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11554:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11530:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11608:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11633:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11625:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11625:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11608:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11604:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11637:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11658:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11658:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11651:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11159:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11488:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11493:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11520:0:2"
									},
									"scope": 1293,
									"src": "11479:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12101:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12115:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12129:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12121:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12121:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12115:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12111:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12133:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12184:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12176:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12176:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12176:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12154:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12154:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12147:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12215:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12207:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12207:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12239:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12260:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12252:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12252:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12252:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12231:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12231:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12207:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12277:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12294:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12294:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12277:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12379:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12396:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12379:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12375:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12402:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12444:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12450:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12459:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12423:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12423:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12416:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12273:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12306:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12350:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12327:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12327:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12320:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11712:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12039:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12071:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12063:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12083:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12075:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12048:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12101:0:2"
									},
									"scope": 1293,
									"src": "12030:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13498:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13522:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13528:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13532:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13541:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13508:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13508:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13508:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12496:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13432:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13454:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13446:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13446:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13468:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13460:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13480:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13472:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13445:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13498:0:2"
									},
									"scope": 1293,
									"src": "13423:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13890:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13910:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13916:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13920:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13900:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13900:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13900:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13961:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13967:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13971:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13980:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13938:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13938:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13938:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13557:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13797:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13819:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13811:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13833:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13825:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13825:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13845:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13867:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13854:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13854:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13810:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13890:0:2"
									},
									"scope": 1293,
									"src": "13788:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14505:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14528:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14537:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14543:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14515:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14515:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14515:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13998:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14444:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14461:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14453:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14473:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14490:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14482:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14482:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14452:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14505:0:2"
									},
									"scope": 1293,
									"src": "14435:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14831:567:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14897:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14910:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14926:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14918:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14918:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14918:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14910:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14897:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14893:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14930:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14952:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14944:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14944:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14974:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14960:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14960:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14944:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15110:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15126:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15118:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15118:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15118:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15110:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15132:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15141:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15132:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15110:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15149:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15167:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15174:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15150:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15150:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15110:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15106:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15181:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15228:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15206:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15206:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15199:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15266:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15262:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15277:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15309:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15316:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15320:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15300:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15300:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15295:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15362:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15362:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15389:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15362:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15362:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14561:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14746:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14763:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14755:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14755:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14775:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14792:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14784:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14803:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14798:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14798:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14754:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14831:0:2"
									},
									"scope": 1293,
									"src": "14737:661:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15700:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15714:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15710:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15738:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15781:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15759:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15759:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15752:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15829:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15810:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15848:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15810:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15810:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15886:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15893:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15903:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15871:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15871:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15866:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15404:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15616:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15643:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15635:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15658:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15650:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15650:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15673:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15668:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15634:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15700:0:2"
									},
									"scope": 1293,
									"src": "15607:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16226:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16244:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16236:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16236:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16261:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16252:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16252:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16236:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16283:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16300:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16292:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16292:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16283:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16279:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16304:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16348:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16325:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16325:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16318:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16383:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16376:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15925:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16163:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16185:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16177:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16176:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16217:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16216:9:2"
									},
									"scope": 1293,
									"src": "16154:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17036:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17050:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17053:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17050:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17058:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17050:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17067:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17050:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17046:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17070:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17184:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17206:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17216:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17232:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17216:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17249:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17216:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17206:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17202:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17259:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17310:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17288:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17288:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17281:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17176:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17169:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17169:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17168:15:2"
																	},
																	"src": "17160:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17375:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17397:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17404:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17397:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17414:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17397:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17496:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17582:86:2",
																								"nodeType": "YulBlock",
																								"src": "17582:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17619:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17619:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17623:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17623:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17615:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17615:3:2"
																													},
																													"nativeSrc": "17615:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17615:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17638:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17638:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17632:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17632:5:2"
																													},
																													"nativeSrc": "17632:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17632:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17608:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17608:6:2"
																											},
																											"nativeSrc": "17608:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17608:38:2"
																										},
																										"nativeSrc": "17608:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17608:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17623:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17638:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17573:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17393:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17417:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17468:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17446:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17446:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17439:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17367:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17354:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17354:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17353:21:2"
																	},
																	"src": "17347:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "17125:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17125:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17139:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17154:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17104:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17088:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17088:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17108:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17088:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17088:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17084:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16401:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16943:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16974:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16966:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16988:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16980:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17000:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16992:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17022:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "17009:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17009:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16965:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17036:0:2"
									},
									"scope": 1293,
									"src": "16934:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16942:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17612:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2024
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 2025,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2024,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2024,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								2024
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1542
						],
						"ERC721": [
							1293
						],
						"ERC721Burnable": [
							1457
						]
					},
					"id": 1458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1458,
							"sourceUnit": 1294,
							"src": "152:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "160:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1458,
							"sourceUnit": 1543,
							"src": "190:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1433,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1542,
										"src": "198:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1436,
										"name": "Context",
										"nameLocations": [
											"372:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1542,
										"src": "372:7:5"
									},
									"id": 1437,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:5"
								},
								{
									"baseName": {
										"id": 1438,
										"name": "ERC721",
										"nameLocations": [
											"381:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "381:6:5"
									},
									"id": 1439,
									"nodeType": "InheritanceSpecifier",
									"src": "381:6:5"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1435,
								"nodeType": "StructuredDocumentation",
								"src": "243:92:5",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1457,
							"linearizedBaseContracts": [
								1457,
								1293,
								237,
								1520,
								1410,
								2012,
								2024,
								1542
							],
							"name": "ERC721Burnable",
							"nameLocation": "354:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "607:268:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "834:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "834:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "834:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1450,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "846:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1451,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "855:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1445,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "826:42:5"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "394:162:5",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "570:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "583:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "575:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:17:5"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:5"
									},
									"scope": 1457,
									"src": "561:314:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1458,
							"src": "336:541:5",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "126:752:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
					"exportedSymbols": {
						"ERC721": [
							1293
						],
						"ERC721Pausable": [
							1492
						],
						"Pausable": [
							1733
						]
					},
					"id": 1493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 1294,
							"src": "152:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1460,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "160:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 1734,
							"src": "190:53:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1462,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1733,
										"src": "198:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1465,
										"name": "ERC721",
										"nameLocations": [
											"970:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "970:6:6"
									},
									"id": 1466,
									"nodeType": "InheritanceSpecifier",
									"src": "970:6:6"
								},
								{
									"baseName": {
										"id": 1467,
										"name": "Pausable",
										"nameLocations": [
											"978:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1733,
										"src": "978:8:6"
									},
									"id": 1468,
									"nodeType": "InheritanceSpecifier",
									"src": "978:8:6"
								}
							],
							"canonicalName": "ERC721Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1464,
								"nodeType": "StructuredDocumentation",
								"src": "245:688:6",
								"text": " @dev ERC721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1492,
							"linearizedBaseContracts": [
								1492,
								1733,
								1293,
								237,
								1520,
								1410,
								2012,
								2024,
								1542
							],
							"name": "ERC721Pausable",
							"nameLocation": "952:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										850
									],
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "1268:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "1299:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "1303:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1487,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "1312:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1483,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1285:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Pausable_$1492_$",
																"typeString": "type(contract super ERC721Pausable)"
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1291:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "1285:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1489,
												"nodeType": "Return",
												"src": "1278:39:6"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "993:122:6",
										"text": " @dev See {ERC721-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1478,
												"name": "whenNotPaused",
												"nameLocations": [
													"1236:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1658,
												"src": "1236:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1236:13:6"
										}
									],
									"name": "_update",
									"nameLocation": "1129:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1227:8:6"
									},
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1154:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1146:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1174:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1166:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "1199:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1191:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:73:6"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1259:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:9:6"
									},
									"scope": 1492,
									"src": "1120:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1493,
							"src": "934:392:6",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1638,
								1641
							],
							"usedEvents": [
								1309,
								1318,
								1327,
								1630,
								1635
							]
						}
					],
					"src": "126:1201:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1520
						]
					},
					"id": 1521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 1411,
							"src": "153:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1495,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1498,
										"name": "IERC721",
										"nameLocations": [
											"357:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:7"
									},
									"id": 1499,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1497,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1520,
							"linearizedBaseContracts": [
								1520,
								1410,
								2024
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:7"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:7"
									},
									"scope": 1520,
									"src": "434:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:7"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "600:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:7"
									},
									"scope": 1520,
									"src": "559:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:7"
									},
									"scope": 1520,
									"src": "716:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1521,
							"src": "328:463:7",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1542
						]
					},
					"id": 1543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1542,
							"linearizedBaseContracts": [
								1542
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1530,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1542,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1537,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1539,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1542,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1543,
							"src": "624:235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1616
						]
					},
					"id": 1617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1545,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1616,
							"linearizedBaseContracts": [
								1616
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1548,
									"members": [
										{
											"constant": false,
											"id": 1547,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1548,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1546,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 1616,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1556,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1547,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1558,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1549,
														"name": "Counter",
														"nameLocations": [
															"844:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1548,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1548,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 1616,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1572,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1566,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1547,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1571,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1562,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1561,
														"name": "Counter",
														"nameLocations": [
															"964:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1548,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1548,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 1616,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"expression": {
														"id": 1582,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1547,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1586,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 1600,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1592,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1547,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1599,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1575,
														"name": "Counter",
														"nameLocations": [
															"1093:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1548,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1548,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 1616,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1608,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1603,
														"name": "Counter",
														"nameLocations": [
															"1324:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1548,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1548,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 1616,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1617,
							"src": "424:971:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1542
						],
						"Pausable": [
							1733
						]
					},
					"id": 1734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1734,
							"sourceUnit": 1543,
							"src": "128:45:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1619,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1542,
										"src": "136:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1622,
										"name": "Context",
										"nameLocations": [
											"645:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1542,
										"src": "645:7:10"
									},
									"id": 1623,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:10"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1621,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:10",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1733,
							"linearizedBaseContracts": [
								1733,
								1542
							],
							"name": "Pausable",
							"nameLocation": "633:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1625,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1733,
									"src": "659:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1624,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:10",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1630,
									"name": "Paused",
									"nameLocation": "770:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "777:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:10"
									},
									"src": "764:30:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:10",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1635,
									"name": "Unpaused",
									"nameLocation": "881:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "890:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:10"
									},
									"src": "875:32:10"
								},
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:10",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1638,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:10"
									},
									"src": "994:22:10"
								},
								{
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:10",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1641,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:10"
									},
									"src": "1107:22:10"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "1221:32:10",
										"statements": [
											{
												"expression": {
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "1231:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:10"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:10",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1650,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:10"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:10"
									},
									"scope": 1733,
									"src": "1207:46:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "1464:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1653,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "1474:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:10"
											},
											{
												"id": 1656,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:10"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:10",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1658,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:10"
									},
									"src": "1439:72:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "1711:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1661,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "1721:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:10"
											},
											{
												"id": 1664,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:10"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:10",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1666,
									"name": "whenPaused",
									"nameLocation": "1698:10:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:10"
									},
									"src": "1689:66:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "1903:31:10",
										"statements": [
											{
												"expression": {
													"id": 1672,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1625,
													"src": "1920:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1671,
												"id": 1673,
												"nodeType": "Return",
												"src": "1913:14:10"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:10",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:10"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1897:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:10"
									},
									"scope": 1733,
									"src": "1850:84:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "2053:77:10",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1679,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "2067:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "2063:61:10",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "2077:47:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1681,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "2098:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1683,
															"nodeType": "RevertStatement",
															"src": "2091:22:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:10",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:10"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:10"
									},
									"scope": 1733,
									"src": "2002:128:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "2250:78:10",
										"statements": [
											{
												"condition": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:10",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1691,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "2265:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "2260:62:10",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "2275:47:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1694,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "2296:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1696,
															"nodeType": "RevertStatement",
															"src": "2289:22:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:10",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:10"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:10"
									},
									"scope": 1733,
									"src": "2202:126:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "2512:66:10",
										"statements": [
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2522:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1711,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "2558:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1710,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "2551:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "EmitStatement",
												"src": "2546:25:10"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:10",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1704,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1703,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1658,
												"src": "2498:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:10"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:10"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:10"
									},
									"scope": 1733,
									"src": "2463:115:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "2758:69:10",
										"statements": [
											{
												"expression": {
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1722,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2768:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1727,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "2807:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1726,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "2798:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "EmitStatement",
												"src": "2793:27:10"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:10",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1719,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1666,
												"src": "2747:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:10"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:10"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:10"
									},
									"scope": 1733,
									"src": "2710:117:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1734,
							"src": "615:2214:10",
							"usedErrors": [
								1638,
								1641
							],
							"usedEvents": [
								1630,
								1635
							]
						}
					],
					"src": "102:2728:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3078
						],
						"SignedMath": [
							3183
						],
						"Strings": [
							1988
						]
					},
					"id": 1989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 3079,
							"src": "127:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1736,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3078,
										"src": "135:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 3184,
							"src": "165:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1738,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3183,
										"src": "173:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1740,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1988,
							"linearizedBaseContracts": [
								1988
							],
							"name": "Strings",
							"nameLocation": "259:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1743,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1988,
									"src": "273:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1741,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1742,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1746,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1988,
									"src": "335:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1744,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1745,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1753,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "505:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "520:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:11"
									},
									"src": "470:66:11"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "708:627:11",
										"statements": [
											{
												"id": 1799,
												"nodeType": "UncheckedBlock",
												"src": "718:611:11",
												"statements": [
													{
														"assignments": [
															1762
														],
														"declarations": [
															{
																"constant": false,
																"id": 1762,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1799,
																"src": "742:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1761,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1769,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1765,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "770:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1763,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3078,
																		"src": "759:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3078_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2898,
																	"src": "759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:11"
													},
													{
														"assignments": [
															1771
														],
														"declarations": [
															{
																"constant": false,
																"id": 1771,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1799,
																"src": "794:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1770,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1776,
														"initialValue": {
															"arguments": [
																{
																	"id": 1774,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "828:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:11"
													},
													{
														"assignments": [
															1778
														],
														"declarations": [
															{
																"constant": false,
																"id": 1778,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1799,
																"src": "849:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1777,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1779,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:11"
													},
													{
														"AST": {
															"nativeSrc": "930:67:11",
															"nodeType": "YulBlock",
															"src": "930:67:11",
															"statements": [
																{
																	"nativeSrc": "948:35:11",
																	"nodeType": "YulAssignment",
																	"src": "948:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:11",
																						"nodeType": "YulLiteral",
																						"src": "971:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:11"
																				},
																				"nativeSrc": "967:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:11"
																		},
																		"nativeSrc": "955:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1771,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1762,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1778,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:11",
																"valueSize": 1
															}
														],
														"id": 1780,
														"nodeType": "InlineAssembly",
														"src": "921:76:11"
													},
													{
														"body": {
															"id": 1795,
															"nodeType": "Block",
															"src": "1023:269:11",
															"statements": [
																{
																	"expression": {
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:11",
																		"subExpression": {
																			"id": 1782,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1778,
																			"src": "1041:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1784,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:11"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:11",
																		"nodeType": "YulBlock",
																		"src": "1124:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:11",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:11"
																									},
																									"nativeSrc": "1164:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:11"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:11"
																							},
																							"nativeSrc": "1159:32:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:11",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:11"
																					},
																					"nativeSrc": "1146:46:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:11"
																				},
																				"nativeSrc": "1146:46:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1743,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1778,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1756,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1785,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:11"
																},
																{
																	"expression": {
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1786,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "1227:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1789,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1790,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "1260:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1794,
																	"nodeType": "IfStatement",
																	"src": "1256:21:11",
																	"trueBody": {
																		"id": 1793,
																		"nodeType": "Break",
																		"src": "1272:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1796,
														"nodeType": "WhileStatement",
														"src": "1010:282:11"
													},
													{
														"expression": {
															"id": 1797,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "1312:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1760,
														"id": 1798,
														"nodeType": "Return",
														"src": "1305:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "655:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:11"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:11"
									},
									"scope": 1988,
									"src": "637:698:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "1511:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1812,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "1542:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1821,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "1588:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1819,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "1573:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3183_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3182,
																		"src": "1573:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1818,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1564:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1809,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1825,
												"nodeType": "Return",
												"src": "1521:75:11"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1459:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1803,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:11"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1496:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:11"
									},
									"scope": 1988,
									"src": "1435:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "1782:100:11",
										"statements": [
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1836,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "1835:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "1854:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1837,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3078,
																				"src": "1842:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3078_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3020,
																			"src": "1842:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1835,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1847,
																	1930,
																	1950
																],
																"referencedDeclaration": 1930,
																"src": "1823:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1834,
														"id": 1844,
														"nodeType": "Return",
														"src": "1816:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1729:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:11"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1767:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:11"
									},
									"scope": 1988,
									"src": "1708:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "2095:435:11",
										"statements": [
											{
												"assignments": [
													1858
												],
												"declarations": [
													{
														"constant": false,
														"id": 1858,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "2105:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"id": 1859,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1850,
													"src": "2126:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:11"
											},
											{
												"assignments": [
													1862
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "2141:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1861,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1871,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1866,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1852,
																	"src": "2177:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1863,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:11"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "2198:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1874,
														"indexExpression": {
															"hexValue": "30",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:11"
											},
											{
												"expression": {
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1878,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "2223:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1880,
														"indexExpression": {
															"hexValue": "31",
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:11"
											},
											{
												"body": {
													"id": 1912,
													"nodeType": "Block",
													"src": "2293:95:11",
													"statements": [
														{
															"expression": {
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1898,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "2307:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1900,
																	"indexExpression": {
																		"id": 1899,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "2314:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1901,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "2319:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1905,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1902,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1858,
																			"src": "2330:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1907,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:11"
														},
														{
															"expression": {
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1908,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "2361:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1911,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1892,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "2281:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1913,
												"initializationExpression": {
													"assignments": [
														1885
													],
													"declarations": [
														{
															"constant": false,
															"id": 1885,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1913,
															"src": "2253:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1884,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1891,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1887,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "2269:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:11",
														"subExpression": {
															"id": 1895,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "2290:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1897,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1914,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "2401:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1923,
												"nodeType": "IfStatement",
												"src": "2397:96:11",
												"trueBody": {
													"id": 1922,
													"nodeType": "Block",
													"src": "2418:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1918,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1850,
																		"src": "2468:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1919,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "2475:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1917,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "2439:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1921,
															"nodeType": "RevertStatement",
															"src": "2432:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1926,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "2516:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1924,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1856,
												"id": 1928,
												"nodeType": "Return",
												"src": "2502:21:11"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2026:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2041:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:11"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "2080:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:11"
									},
									"scope": 1988,
									"src": "2005:525:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "2762:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1943,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1933,
																			"src": "2807:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1941,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1939,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1946,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "2815:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1938,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1847,
															1930,
															1950
														],
														"referencedDeclaration": 1930,
														"src": "2779:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1937,
												"id": 1948,
												"nodeType": "Return",
												"src": "2772:58:11"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "2710:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:11"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "2747:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:11"
									},
									"scope": 1988,
									"src": "2689:148:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "2992:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1962,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "3015:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1960,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1967,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "3034:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1965,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1974,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "3063:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1972,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1971,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1980,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1955,
																			"src": "3086:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1978,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1977,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1985,
												"nodeType": "Return",
												"src": "3002:87:11"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2929:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2946:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1954,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:11"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2986:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:11"
									},
									"scope": 1988,
									"src": "2914:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1989,
							"src": "251:2847:11",
							"usedErrors": [
								1753
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2012
						],
						"IERC165": [
							2024
						]
					},
					"id": 2013,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2013,
							"sourceUnit": 2025,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1991,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2024,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1994,
										"name": "IERC165",
										"nameLocations": [
											"687:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2024,
										"src": "687:7:12"
									},
									"id": 1995,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1993,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2012,
							"linearizedBaseContracts": [
								2012,
								2024
							],
							"name": "ERC165",
							"nameLocation": "677:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2023
									],
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "844:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "861:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2005,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2024_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2024_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2004,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2024",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2002,
												"id": 2009,
												"nodeType": "Return",
												"src": "854:47:12"
											}
										]
									},
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "789:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:12"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "838:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:12"
									},
									"scope": 2012,
									"src": "762:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2013,
							"src": "659:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2024
						]
					},
					"id": 2025,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2014,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2015,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2024,
							"linearizedBaseContracts": [
								2024
							],
							"name": "IERC165",
							"nameLocation": "431:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "817:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2017,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:13"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "860:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:13"
									},
									"scope": 2024,
									"src": "790:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2025,
							"src": "421:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3078
						]
					},
					"id": 3079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2026,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2027,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3078,
							"linearizedBaseContracts": [
								3078
							],
							"name": "Math",
							"nameLocation": "211:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2030,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:14"
									},
									"src": "277:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2035,
									"members": [
										{
											"id": 2031,
											"name": "Floor",
											"nameLocation": "336:5:14",
											"nodeType": "EnumValue",
											"src": "336:5:14"
										},
										{
											"id": 2032,
											"name": "Ceil",
											"nameLocation": "379:4:14",
											"nodeType": "EnumValue",
											"src": "379:4:14"
										},
										{
											"id": 2033,
											"name": "Trunc",
											"nameLocation": "421:5:14",
											"nodeType": "EnumValue",
											"src": "421:5:14"
										},
										{
											"id": 2034,
											"name": "Expand",
											"nameLocation": "451:6:14",
											"nodeType": "EnumValue",
											"src": "451:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:14",
									"nodeType": "EnumDefinition",
									"src": "312:169:14"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "661:140:14",
										"statements": [
											{
												"id": 2065,
												"nodeType": "UncheckedBlock",
												"src": "671:124:14",
												"statements": [
													{
														"assignments": [
															2048
														],
														"declarations": [
															{
																"constant": false,
																"id": 2048,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2065,
																"src": "695:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2052,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "707:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2050,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "711:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "730:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2054,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "734:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2060,
														"nodeType": "IfStatement",
														"src": "726:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2046,
															"id": 2059,
															"nodeType": "Return",
															"src": "737:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2062,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "782:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2063,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2046,
														"id": 2064,
														"nodeType": "Return",
														"src": "768:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2036,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "646:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "652:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:14"
									},
									"scope": 3078,
									"src": "585:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "984:113:14",
										"statements": [
											{
												"id": 2093,
												"nodeType": "UncheckedBlock",
												"src": "994:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2079,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "1022:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2080,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "1026:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2086,
														"nodeType": "IfStatement",
														"src": "1018:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2078,
															"id": 2085,
															"nodeType": "Return",
															"src": "1029:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2088,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "1074:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2089,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "1078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2091,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2078,
														"id": 2092,
														"nodeType": "Return",
														"src": "1060:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "924:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "935:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:14"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "969:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "975:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:14"
									},
									"scope": 3078,
									"src": "908:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "1283:417:14",
										"statements": [
											{
												"id": 2135,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2107,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "1551:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2114,
														"nodeType": "IfStatement",
														"src": "1547:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2112,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2106,
															"id": 2113,
															"nodeType": "Return",
															"src": "1559:16:14"
														}
													},
													{
														"assignments": [
															2116
														],
														"declarations": [
															{
																"constant": false,
																"id": 2116,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2135,
																"src": "1589:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2115,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2120,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "1601:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2118,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "1605:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2121,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "1624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2122,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "1628:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "1633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2130,
														"nodeType": "IfStatement",
														"src": "1620:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2106,
															"id": 2129,
															"nodeType": "Return",
															"src": "1636:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2132,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "1681:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2133,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2106,
														"id": 2134,
														"nodeType": "Return",
														"src": "1667:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1223:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1234:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:14"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1268:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:14"
									},
									"scope": 3078,
									"src": "1207:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "1887:114:14",
										"statements": [
											{
												"id": 2163,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2149,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "1925:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2156,
														"nodeType": "IfStatement",
														"src": "1921:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2154,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2148,
															"id": 2155,
															"nodeType": "Return",
															"src": "1933:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2158,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "1978:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2159,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "1982:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2161,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2148,
														"id": 2162,
														"nodeType": "Return",
														"src": "1964:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "1827:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "1838:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:14"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "1872:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "1878:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:14"
									},
									"scope": 3078,
									"src": "1811:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "2198:114:14",
										"statements": [
											{
												"id": 2191,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "2236:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2184,
														"nodeType": "IfStatement",
														"src": "2232:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2182,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2176,
															"id": 2183,
															"nodeType": "Return",
															"src": "2244:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2186,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "2289:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2187,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "2293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2189,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2176,
														"id": 2190,
														"nodeType": "Return",
														"src": "2275:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2138:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2149:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:14"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2183:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "2189:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:14"
									},
									"scope": 3078,
									"src": "2122:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "2449:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2203,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "2466:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2204,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "2470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2207,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "2478:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:14",
													"trueExpression": {
														"id": 2206,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "2474:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2202,
												"id": 2209,
												"nodeType": "Return",
												"src": "2459:20:14"
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2406:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:14"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2440:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:14"
									},
									"scope": 3078,
									"src": "2382:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "2624:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2221,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "2641:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2222,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "2645:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "2653:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:14",
													"trueExpression": {
														"id": 2224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "2649:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2220,
												"id": 2227,
												"nodeType": "Return",
												"src": "2634:20:14"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "2570:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "2581:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:14"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "2615:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:14"
									},
									"scope": 3078,
									"src": "2557:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "2845:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2239,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "2900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2240,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "2904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2242,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2243,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "2910:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2244,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "2914:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2246,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2250,
												"nodeType": "Return",
												"src": "2892:28:14"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2791:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2802:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:14"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "2836:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:14"
									},
									"scope": 3078,
									"src": "2774:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "3219:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2262,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "3233:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2270,
												"nodeType": "IfStatement",
												"src": "3229:127:14",
												"trueBody": {
													"id": 2269,
													"nodeType": "Block",
													"src": "3241:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2265,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "3340:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2266,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "3344:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2261,
															"id": 2268,
															"nodeType": "Return",
															"src": "3333:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2271,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "3444:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2275,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2255,
																			"src": "3458:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2261,
												"id": 2284,
												"nodeType": "Return",
												"src": "3437:35:14"
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "3165:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "3176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:14"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "3210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:14"
									},
									"scope": 3078,
									"src": "3148:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "3901:4018:14",
										"statements": [
											{
												"id": 2410,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:14",
												"statements": [
													{
														"assignments": [
															2299
														],
														"declarations": [
															{
																"constant": false,
																"id": 2299,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "4232:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2298,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2303,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2300,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "4248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2301,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "4252:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:14"
													},
													{
														"assignments": [
															2305
														],
														"declarations": [
															{
																"constant": false,
																"id": 2305,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "4312:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2306,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:14"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:14",
															"nodeType": "YulBlock",
															"src": "4392:122:14",
															"statements": [
																{
																	"nativeSrc": "4410:30:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:14"
																				},
																				"nativeSrc": "4433:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:14"
																		},
																		"nativeSrc": "4420:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:14",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:14",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:14"
																				},
																				"nativeSrc": "4470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:14"
																				},
																				"nativeSrc": "4486:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:14"
																		},
																		"nativeSrc": "4466:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2289,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2291,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:14",
																"valueSize": 1
															}
														],
														"id": 2307,
														"nodeType": "InlineAssembly",
														"src": "4383:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2308,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "4595:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2316,
														"nodeType": "IfStatement",
														"src": "4591:368:14",
														"trueBody": {
															"id": 2315,
															"nodeType": "Block",
															"src": "4607:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2311,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "4925:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2312,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2293,
																			"src": "4933:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2297,
																	"id": 2314,
																	"nodeType": "Return",
																	"src": "4918:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2317,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "5065:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2318,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "5080:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2324,
														"nodeType": "IfStatement",
														"src": "5061:88:14",
														"trueBody": {
															"id": 2323,
															"nodeType": "Block",
															"src": "5087:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2320,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2030,
																			"src": "5112:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2322,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2326
														],
														"declarations": [
															{
																"constant": false,
																"id": 2326,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "5404:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2325,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2327,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:14"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:14",
															"nodeType": "YulBlock",
															"src": "5444:291:14",
															"statements": [
																{
																	"nativeSrc": "5513:38:14",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:14"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:14"
																		},
																		"nativeSrc": "5526:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:14",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:14"
																				},
																				"nativeSrc": "5653:20:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:14"
																		},
																		"nativeSrc": "5642:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:14",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:14"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:14"
																		},
																		"nativeSrc": "5700:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2293,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2305,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2289,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2291,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:14",
																"valueSize": 1
															}
														],
														"id": 2328,
														"nodeType": "InlineAssembly",
														"src": "5435:300:14"
													},
													{
														"assignments": [
															2330
														],
														"declarations": [
															{
																"constant": false,
																"id": 2330,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "5939:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2337,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "5954:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2333,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2293,
																			"src": "5973:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:14"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:14",
															"nodeType": "YulBlock",
															"src": "6008:362:14",
															"statements": [
																{
																	"nativeSrc": "6073:37:14",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:14"
																		},
																		"nativeSrc": "6088:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:14",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:14"
																		},
																		"nativeSrc": "6186:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:14",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:14"
																						},
																						"nativeSrc": "6333:12:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:14"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:14"
																				},
																				"nativeSrc": "6329:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:14"
																		},
																		"nativeSrc": "6325:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2293,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2293,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2299,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2330,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2330,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2330,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2330,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2330,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:14",
																"valueSize": 1
															}
														],
														"id": 2338,
														"nodeType": "InlineAssembly",
														"src": "5999:371:14"
													},
													{
														"expression": {
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "6436:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2340,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2305,
																	"src": "6445:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2341,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "6453:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2344,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:14"
													},
													{
														"assignments": [
															2346
														],
														"declarations": [
															{
																"constant": false,
																"id": 2346,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "6775:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2353,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2348,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2293,
																			"src": "6798:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:14"
													},
													{
														"expression": {
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7031:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2356,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "7046:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2357,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7060:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2361,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:14"
													},
													{
														"expression": {
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2362,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7100:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2364,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "7115:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2365,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7129:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2369,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:14"
													},
													{
														"expression": {
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2370,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7170:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2372,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "7185:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2373,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7199:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2377,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:14"
													},
													{
														"expression": {
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2378,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7240:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2380,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "7255:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2381,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7269:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2385,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:14"
													},
													{
														"expression": {
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2386,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7310:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2388,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "7325:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2389,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7339:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2393,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:14"
													},
													{
														"expression": {
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2394,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7381:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2396,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "7396:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2397,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "7410:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2401,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:14"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "7851:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2403,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "7860:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2404,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "7868:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:14"
													},
													{
														"expression": {
															"id": 2408,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "7896:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2297,
														"id": 2409,
														"nodeType": "Return",
														"src": "7889:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3819:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3830:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3841:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:14"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3885:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:14"
									},
									"scope": 3078,
									"src": "3803:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "8161:192:14",
										"statements": [
											{
												"assignments": [
													2428
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2454,
														"src": "8171:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2434,
												"initialValue": {
													"arguments": [
														{
															"id": 2430,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "8195:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2431,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "8198:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2432,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "8201:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2429,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2412,
															2455
														],
														"referencedDeclaration": 2412,
														"src": "8188:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2436,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2422,
																"src": "8244:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2035",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2035",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2435,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "8227:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2035_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2439,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "8264:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2440,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2417,
																	"src": "8267:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2441,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2419,
																	"src": "8270:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2438,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2451,
												"nodeType": "IfStatement",
												"src": "8223:101:14",
												"trueBody": {
													"id": 2450,
													"nodeType": "Block",
													"src": "8288:36:14",
													"statements": [
														{
															"expression": {
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2446,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "8302:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2449,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2452,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2428,
													"src": "8340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2426,
												"id": 2453,
												"nodeType": "Return",
												"src": "8333:13:14"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "8067:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "8078:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "8089:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "8110:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2035",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2420,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "8110:8:14"
													},
													"referencedDeclaration": 2035,
													"src": "8110:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2035",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:14"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "8152:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:14"
									},
									"scope": 3078,
									"src": "8051:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "8644:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2463,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "8658:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2469,
												"nodeType": "IfStatement",
												"src": "8654:45:14",
												"trueBody": {
													"id": 2468,
													"nodeType": "Block",
													"src": "8666:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2462,
															"id": 2467,
															"nodeType": "Return",
															"src": "8680:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2471
												],
												"declarations": [
													{
														"constant": false,
														"id": 2471,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2566,
														"src": "9378:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2470,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2480,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2474,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "9406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2473,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2734,
																			2769
																		],
																		"referencedDeclaration": 2734,
																		"src": "9401:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2478,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:14"
											},
											{
												"id": 2565,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:14",
												"statements": [
													{
														"expression": {
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2481,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "9839:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2482,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "9849:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2483,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "9858:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2484,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "9862:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2491,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:14"
													},
													{
														"expression": {
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2492,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "9888:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2493,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "9898:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2494,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "9907:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2495,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "9911:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2498,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2502,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:14"
													},
													{
														"expression": {
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2503,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "9937:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2504,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "9947:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2505,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "9956:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2506,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "9960:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2509,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2513,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:14"
													},
													{
														"expression": {
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2514,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "9986:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2515,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "9996:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2516,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "10005:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2517,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "10009:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2520,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2524,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:14"
													},
													{
														"expression": {
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2525,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "10035:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2526,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "10045:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2527,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "10054:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2528,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "10058:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2531,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2535,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:14"
													},
													{
														"expression": {
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2536,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "10084:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2537,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "10094:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2538,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "10103:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2539,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "10107:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2542,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2546,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:14"
													},
													{
														"expression": {
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2547,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "10133:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2548,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2471,
																				"src": "10143:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2549,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "10152:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2550,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2471,
																					"src": "10156:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2553,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2557,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2559,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2471,
																	"src": "10193:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2560,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2458,
																		"src": "10201:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2561,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "10205:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2558,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "10189:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2462,
														"id": 2564,
														"nodeType": "Return",
														"src": "10182:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "8601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:14"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "8635:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:14"
									},
									"scope": 3078,
									"src": "8587:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "10405:164:14",
										"statements": [
											{
												"id": 2600,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:14",
												"statements": [
													{
														"assignments": [
															2579
														],
														"declarations": [
															{
																"constant": false,
																"id": 2579,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2600,
																"src": "10439:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2578,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2583,
														"initialValue": {
															"arguments": [
																{
																	"id": 2581,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "10461:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2580,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2567,
																	2602
																],
																"referencedDeclaration": 2567,
																"src": "10456:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2584,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "10484:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2586,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2573,
																						"src": "10511:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2585,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3077,
																					"src": "10494:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2035_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2588,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2579,
																						"src": "10524:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2589,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2579,
																						"src": "10533:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2591,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2570,
																					"src": "10542:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2577,
														"id": 2599,
														"nodeType": "Return",
														"src": "10477:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "10343:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "10354:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2035",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2571,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "10354:8:14"
													},
													"referencedDeclaration": 2035,
													"src": "10354:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2035",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:14"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "10396:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:14"
									},
									"scope": 3078,
									"src": "10329:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "10760:922:14",
										"statements": [
											{
												"assignments": [
													2611
												],
												"declarations": [
													{
														"constant": false,
														"id": 2611,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2733,
														"src": "10770:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2613,
												"initialValue": {
													"hexValue": "30",
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:14"
											},
											{
												"id": 2730,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2614,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "10826:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "10822:99:14",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "10844:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "10862:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:14"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "10893:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2629,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "10938:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2643,
														"nodeType": "IfStatement",
														"src": "10934:96:14",
														"trueBody": {
															"id": 2642,
															"nodeType": "Block",
															"src": "10955:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "10973:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:14"
																},
																{
																	"expression": {
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2638,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11003:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2641,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "11047:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "11043:96:14",
														"trueBody": {
															"id": 2657,
															"nodeType": "Block",
															"src": "11064:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2649,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "11082:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:14"
																},
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11112:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "11156:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "11152:96:14",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "11173:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "11191:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:14"
																},
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11221:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "11265:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "11261:93:14",
														"trueBody": {
															"id": 2687,
															"nodeType": "Block",
															"src": "11281:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "11299:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:14"
																},
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11328:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "11371:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2703,
														"nodeType": "IfStatement",
														"src": "11367:93:14",
														"trueBody": {
															"id": 2702,
															"nodeType": "Block",
															"src": "11387:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "11405:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:14"
																},
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11434:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "11477:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2718,
														"nodeType": "IfStatement",
														"src": "11473:93:14",
														"trueBody": {
															"id": 2717,
															"nodeType": "Block",
															"src": "11493:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "11511:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:14"
																},
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11540:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "11583:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2729,
														"nodeType": "IfStatement",
														"src": "11579:64:14",
														"trueBody": {
															"id": 2728,
															"nodeType": "Block",
															"src": "11599:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "11617:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2731,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2611,
													"src": "11669:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2609,
												"id": 2732,
												"nodeType": "Return",
												"src": "11662:13:14"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "10713:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:14"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "10751:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:14"
									},
									"scope": 3078,
									"src": "10699:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2768,
										"nodeType": "Block",
										"src": "11915:168:14",
										"statements": [
											{
												"id": 2767,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:14",
												"statements": [
													{
														"assignments": [
															2746
														],
														"declarations": [
															{
																"constant": false,
																"id": 2746,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2767,
																"src": "11949:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2745,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2750,
														"initialValue": {
															"arguments": [
																{
																	"id": 2748,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "11971:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2747,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2734,
																	2769
																],
																"referencedDeclaration": 2734,
																"src": "11966:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "11998:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2753,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2740,
																						"src": "12025:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2752,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3077,
																					"src": "12008:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2035_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2755,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2756,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2746,
																						"src": "12043:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2758,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2737,
																					"src": "12052:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2764,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2744,
														"id": 2766,
														"nodeType": "Return",
														"src": "11991:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "11849:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "11864:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2035",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2738,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "11864:8:14"
													},
													"referencedDeclaration": 2035,
													"src": "11864:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2035",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:14"
									},
									"returnParameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "11906:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:14"
									},
									"scope": 3078,
									"src": "11835:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "12276:854:14",
										"statements": [
											{
												"assignments": [
													2778
												],
												"declarations": [
													{
														"constant": false,
														"id": 2778,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2897,
														"src": "12286:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2780,
												"initialValue": {
													"hexValue": "30",
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:14"
											},
											{
												"id": 2894,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "12342:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2797,
														"nodeType": "IfStatement",
														"src": "12338:103:14",
														"trueBody": {
															"id": 2796,
															"nodeType": "Block",
															"src": "12361:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "12379:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:14"
																},
																{
																	"expression": {
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12414:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2795,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2798,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "12458:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2814,
														"nodeType": "IfStatement",
														"src": "12454:103:14",
														"trueBody": {
															"id": 2813,
															"nodeType": "Block",
															"src": "12477:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "12495:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:14"
																},
																{
																	"expression": {
																		"id": 2811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12530:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2812,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2815,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "12574:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "12570:103:14",
														"trueBody": {
															"id": 2830,
															"nodeType": "Block",
															"src": "12593:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "12611:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:14"
																},
																{
																	"expression": {
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12646:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2829,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2832,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "12690:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2848,
														"nodeType": "IfStatement",
														"src": "12686:100:14",
														"trueBody": {
															"id": 2847,
															"nodeType": "Block",
															"src": "12708:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "12726:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2842,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:14"
																},
																{
																	"expression": {
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2843,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12760:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2846,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2849,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "12803:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2865,
														"nodeType": "IfStatement",
														"src": "12799:100:14",
														"trueBody": {
															"id": 2864,
															"nodeType": "Block",
															"src": "12821:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2854,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "12839:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2859,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:14"
																},
																{
																	"expression": {
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2860,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12873:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2863,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2866,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "12916:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2882,
														"nodeType": "IfStatement",
														"src": "12912:100:14",
														"trueBody": {
															"id": 2881,
															"nodeType": "Block",
															"src": "12934:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2871,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "12952:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:14"
																},
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "12986:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "13029:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2893,
														"nodeType": "IfStatement",
														"src": "13025:66:14",
														"trueBody": {
															"id": 2892,
															"nodeType": "Block",
															"src": "13047:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "13065:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2895,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2778,
													"src": "13117:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2776,
												"id": 2896,
												"nodeType": "Return",
												"src": "13110:13:14"
											}
										]
									},
									"documentation": {
										"id": 2770,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "12229:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:14"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "12267:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:14"
									},
									"scope": 3078,
									"src": "12214:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2932,
										"nodeType": "Block",
										"src": "13365:170:14",
										"statements": [
											{
												"id": 2931,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:14",
												"statements": [
													{
														"assignments": [
															2910
														],
														"declarations": [
															{
																"constant": false,
																"id": 2910,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2931,
																"src": "13399:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2909,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2914,
														"initialValue": {
															"arguments": [
																{
																	"id": 2912,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "13422:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2911,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2898,
																	2933
																],
																"referencedDeclaration": 2898,
																"src": "13416:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2915,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2910,
																"src": "13449:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2917,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2904,
																						"src": "13476:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2916,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3077,
																					"src": "13459:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2035_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2919,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2920,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2910,
																						"src": "13495:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2922,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2901,
																					"src": "13504:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2928,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2908,
														"id": 2930,
														"nodeType": "Return",
														"src": "13442:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "13299:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "13314:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2035",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2902,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "13314:8:14"
													},
													"referencedDeclaration": 2035,
													"src": "13314:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2035",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:14"
									},
									"returnParameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "13356:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:14"
									},
									"scope": 3078,
									"src": "13284:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "13855:600:14",
										"statements": [
											{
												"assignments": [
													2942
												],
												"declarations": [
													{
														"constant": false,
														"id": 2942,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3019,
														"src": "13865:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2944,
												"initialValue": {
													"hexValue": "30",
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:14"
											},
											{
												"id": 3016,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "13921:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2959,
														"nodeType": "IfStatement",
														"src": "13917:98:14",
														"trueBody": {
															"id": 2958,
															"nodeType": "Block",
															"src": "13939:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "13957:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2953,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:14"
																},
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "13988:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "14032:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2974,
														"nodeType": "IfStatement",
														"src": "14028:95:14",
														"trueBody": {
															"id": 2973,
															"nodeType": "Block",
															"src": "14049:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "14067:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2968,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:14"
																},
																{
																	"expression": {
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2969,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14097:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2972,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "14140:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2989,
														"nodeType": "IfStatement",
														"src": "14136:95:14",
														"trueBody": {
															"id": 2988,
															"nodeType": "Block",
															"src": "14157:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2980,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "14175:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2983,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:14"
																},
																{
																	"expression": {
																		"id": 2986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2984,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14205:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2987,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "14248:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3004,
														"nodeType": "IfStatement",
														"src": "14244:95:14",
														"trueBody": {
															"id": 3003,
															"nodeType": "Block",
															"src": "14265:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2995,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2936,
																			"src": "14283:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2998,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:14"
																},
																{
																	"expression": {
																		"id": 3001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2999,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14313:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3002,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3005,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2936,
																	"src": "14356:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3015,
														"nodeType": "IfStatement",
														"src": "14352:64:14",
														"trueBody": {
															"id": 3014,
															"nodeType": "Block",
															"src": "14372:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 3012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3010,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "14390:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3013,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3017,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2942,
													"src": "14442:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2940,
												"id": 3018,
												"nodeType": "Return",
												"src": "14435:13:14"
											}
										]
									},
									"documentation": {
										"id": 2934,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "13808:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:14"
									},
									"returnParameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "13846:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:14"
									},
									"scope": 3078,
									"src": "13792:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3057,
										"nodeType": "Block",
										"src": "14692:177:14",
										"statements": [
											{
												"id": 3056,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:14",
												"statements": [
													{
														"assignments": [
															3032
														],
														"declarations": [
															{
																"constant": false,
																"id": 3032,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 3056,
																"src": "14726:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3031,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3036,
														"initialValue": {
															"arguments": [
																{
																	"id": 3034,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3023,
																	"src": "14750:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3033,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3020,
																	3058
																],
																"referencedDeclaration": 3020,
																"src": "14743:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3037,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3032,
																"src": "14777:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3039,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3026,
																						"src": "14804:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2035",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3038,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3077,
																					"src": "14787:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2035_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3040,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3046,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3041,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3044,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3042,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3032,
																									"src": "14823:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3043,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3045,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3047,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3023,
																					"src": "14838:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3053,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3030,
														"id": 3055,
														"nodeType": "Return",
														"src": "14770:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3021,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "14626:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "14641:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2035",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3024,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "14641:8:14"
													},
													"referencedDeclaration": 2035,
													"src": "14641:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2035",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:14"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "14683:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:14"
									},
									"scope": 3078,
									"src": "14610:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3076,
										"nodeType": "Block",
										"src": "15067:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3069,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3062,
																	"src": "15090:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2035",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2035",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3067,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3066,
												"id": 3075,
												"nodeType": "Return",
												"src": "15077:31:14"
											}
										]
									},
									"documentation": {
										"id": 3059,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "15019:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2035",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3060,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2035,
														"src": "15019:8:14"
													},
													"referencedDeclaration": 2035,
													"src": "15019:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2035",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:14"
									},
									"returnParameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "15061:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:14"
									},
									"scope": 3078,
									"src": "14993:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3079,
							"src": "203:14914:14",
							"usedErrors": [
								2030
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3183
						]
					},
					"id": 3184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3081,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3183,
							"linearizedBaseContracts": [
								3183
							],
							"name": "SignedMath",
							"nameLocation": "224:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3098,
										"nodeType": "Block",
										"src": "376:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3091,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3084,
															"src": "393:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3092,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "397:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3095,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3086,
														"src": "405:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:15",
													"trueExpression": {
														"id": 3094,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3084,
														"src": "401:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3090,
												"id": 3097,
												"nodeType": "Return",
												"src": "386:20:15"
											}
										]
									},
									"documentation": {
										"id": 3082,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "325:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3083,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "335:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3085,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:15"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "368:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3088,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:15"
									},
									"scope": 3183,
									"src": "312:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3116,
										"nodeType": "Block",
										"src": "555:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3109,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3102,
															"src": "572:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3110,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3104,
															"src": "576:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3104,
														"src": "584:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:15",
													"trueExpression": {
														"id": 3112,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "580:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3108,
												"id": 3115,
												"nodeType": "Return",
												"src": "565:20:15"
											}
										]
									},
									"documentation": {
										"id": 3100,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "504:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "514:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:15"
									},
									"returnParameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "547:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3106,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:15"
									},
									"scope": 3183,
									"src": "491:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3160,
										"nodeType": "Block",
										"src": "797:162:15",
										"statements": [
											{
												"assignments": [
													3128
												],
												"declarations": [
													{
														"constant": false,
														"id": 3128,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 3160,
														"src": "859:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3127,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3141,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3129,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3120,
																	"src": "871:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3130,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "875:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3132,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3133,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "882:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3134,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3122,
																				"src": "886:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3136,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3139,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3142,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "911:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3147,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3128,
																						"src": "931:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3145,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3143,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3152,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "945:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3153,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3122,
																				"src": "949:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3155,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3157,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3126,
												"id": 3159,
												"nodeType": "Return",
												"src": "904:48:15"
											}
										]
									},
									"documentation": {
										"id": 3118,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "746:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3119,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "756:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3121,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:15"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "789:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3124,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:15"
									},
									"scope": 3183,
									"src": "729:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3181,
										"nodeType": "Block",
										"src": "1103:158:15",
										"statements": [
											{
												"id": 3180,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3171,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "1228:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:15",
																		"subExpression": {
																			"id": 3175,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "1242:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:15",
																	"trueExpression": {
																		"id": 3174,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3164,
																		"src": "1237:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3169,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3168,
														"id": 3179,
														"nodeType": "Return",
														"src": "1213:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3162,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "1061:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3163,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:15"
									},
									"returnParameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "1094:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:15"
									},
									"scope": 3183,
									"src": "1048:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3184,
							"src": "216:1047:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:15"
				},
				"id": 15
			},
			"contracts/Dispatch_AI/mintStones.sol": {
				"ast": {
					"absolutePath": "contracts/Dispatch_AI/mintStones.sol",
					"exportedSymbols": {
						"Context": [
							1542
						],
						"Counters": [
							1616
						],
						"Dispatch": [
							3477
						],
						"ERC165": [
							2012
						],
						"ERC721": [
							1293
						],
						"ERC721Burnable": [
							1457
						],
						"ERC721Pausable": [
							1492
						],
						"IERC165": [
							2024
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1520
						],
						"IERC721Receiver": [
							1428
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1733
						],
						"Strings": [
							1988
						]
					},
					"id": 3478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3478,
							"sourceUnit": 1294,
							"src": "107:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
							"id": 3187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3478,
							"sourceUnit": 1493,
							"src": "165:76:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3478,
							"sourceUnit": 148,
							"src": "242:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 3189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3478,
							"sourceUnit": 1458,
							"src": "295:76:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3478,
							"sourceUnit": 1617,
							"src": "372:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3191,
										"name": "ERC721",
										"nameLocations": [
											"447:6:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "447:6:16"
									},
									"id": 3192,
									"nodeType": "InheritanceSpecifier",
									"src": "447:6:16"
								},
								{
									"baseName": {
										"id": 3193,
										"name": "ERC721Pausable",
										"nameLocations": [
											"455:14:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1492,
										"src": "455:14:16"
									},
									"id": 3194,
									"nodeType": "InheritanceSpecifier",
									"src": "455:14:16"
								},
								{
									"baseName": {
										"id": 3195,
										"name": "Ownable",
										"nameLocations": [
											"471:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "471:7:16"
									},
									"id": 3196,
									"nodeType": "InheritanceSpecifier",
									"src": "471:7:16"
								},
								{
									"baseName": {
										"id": 3197,
										"name": "ERC721Burnable",
										"nameLocations": [
											"480:14:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1457,
										"src": "480:14:16"
									},
									"id": 3198,
									"nodeType": "InheritanceSpecifier",
									"src": "480:14:16"
								}
							],
							"canonicalName": "Dispatch",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3477,
							"linearizedBaseContracts": [
								3477,
								1457,
								147,
								1492,
								1733,
								1293,
								237,
								1520,
								1410,
								2012,
								2024,
								1542
							],
							"name": "Dispatch",
							"nameLocation": "435:8:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3202,
									"libraryName": {
										"id": 3199,
										"name": "Counters",
										"nameLocations": [
											"508:8:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1616,
										"src": "508:8:16"
									},
									"nodeType": "UsingForDirective",
									"src": "502:36:16",
									"typeName": {
										"id": 3201,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3200,
											"name": "Counters.Counter",
											"nameLocations": [
												"521:8:16",
												"530:7:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1548,
											"src": "521:16:16"
										},
										"referencedDeclaration": 1548,
										"src": "521:16:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "98bdf6f5",
									"id": 3205,
									"mutability": "mutable",
									"name": "tokenIdCounter",
									"nameLocation": "567:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 3477,
									"src": "543:38:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1548_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3204,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3203,
											"name": "Counters.Counter",
											"nameLocations": [
												"543:8:16",
												"552:7:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1548,
											"src": "543:16:16"
										},
										"referencedDeclaration": 1548,
										"src": "543:16:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f4accdf",
									"id": 3208,
									"mutability": "mutable",
									"name": "URICount",
									"nameLocation": "611:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 3477,
									"src": "587:32:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1548_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3207,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3206,
											"name": "Counters.Counter",
											"nameLocations": [
												"587:8:16",
												"596:7:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1548,
											"src": "587:16:16"
										},
										"referencedDeclaration": 1548,
										"src": "587:16:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1548_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8df9612b",
									"id": 3214,
									"mutability": "mutable",
									"name": "TokenId",
									"nameLocation": "680:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 3477,
									"src": "625:62:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 3213,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "633:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "625:47:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3212,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3210,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "652:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "644:27:16",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "663:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05d85eda",
									"id": 3218,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "728:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 3477,
									"src": "693:40:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3217,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3215,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "701:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "693:27:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3216,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "712:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "901e1c01",
									"id": 3223,
									"mutability": "mutable",
									"name": "URI",
									"nameLocation": "774:3:16",
									"nodeType": "VariableDeclaration",
									"scope": 3477,
									"src": "740:37:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Admin_$3230_storage_$",
										"typeString": "mapping(uint256 => struct Dispatch.Admin)"
									},
									"typeName": {
										"id": 3222,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "749:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "740:26:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Admin_$3230_storage_$",
											"typeString": "mapping(uint256 => struct Dispatch.Admin)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3221,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3220,
												"name": "Admin",
												"nameLocations": [
													"760:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3230,
												"src": "760:5:16"
											},
											"referencedDeclaration": 3230,
											"src": "760:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Admin_$3230_storage_ptr",
												"typeString": "struct Dispatch.Admin"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Dispatch.Admin",
									"id": 3230,
									"members": [
										{
											"constant": false,
											"id": 3225,
											"mutability": "mutable",
											"name": "URI",
											"nameLocation": "814:3:16",
											"nodeType": "VariableDeclaration",
											"scope": 3230,
											"src": "807:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3224,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "807:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3227,
											"mutability": "mutable",
											"name": "capAmount",
											"nameLocation": "832:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 3230,
											"src": "827:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3226,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "827:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3229,
											"mutability": "mutable",
											"name": "Count",
											"nameLocation": "856:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 3230,
											"src": "851:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3228,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "851:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Admin",
									"nameLocation": "791:5:16",
									"nodeType": "StructDefinition",
									"scope": 3477,
									"src": "784:84:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3242,
										"nodeType": "Block",
										"src": "981:2:16",
										"statements": []
									},
									"id": 3243,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4469737061746368204149",
													"id": 3235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "924:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e4bdbe1e04005b9979db1f6d0fcddfd4936e089e368b7de5ad0e2819c2f79586",
														"typeString": "literal_string \"Dispatch AI\""
													},
													"value": "Dispatch AI"
												},
												{
													"hexValue": "44504149",
													"id": 3236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "939:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_269523491e156fe1f2c64578b664064e21af3a47220e01274ac7ee2743cac181",
														"typeString": "literal_string \"DPAI\""
													},
													"value": "DPAI"
												}
											],
											"id": 3237,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3234,
												"name": "ERC721",
												"nameLocations": [
													"917:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "917:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "917:29:16"
										},
										{
											"arguments": [
												{
													"id": 3239,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3232,
													"src": "963:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3240,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3238,
												"name": "Ownable",
												"nameLocations": [
													"955:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "955:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "955:21:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "895:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3243,
												"src": "887:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:22:16"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:0:16"
									},
									"scope": 3477,
									"src": "875:108:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3251,
										"nodeType": "Block",
										"src": "1023:25:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3248,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "1033:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1033:8:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3250,
												"nodeType": "ExpressionStatement",
												"src": "1033:8:16"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3245,
												"name": "onlyOwner",
												"nameLocations": [
													"1013:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1013:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1013:9:16"
										}
									],
									"name": "pause",
									"nameLocation": "998:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:2:16"
									},
									"returnParameters": {
										"id": 3247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:0:16"
									},
									"scope": 3477,
									"src": "989:59:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3260,
										"nodeType": "Block",
										"src": "1090:27:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3257,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "1100:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:10:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3259,
												"nodeType": "ExpressionStatement",
												"src": "1100:10:16"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3255,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3254,
												"name": "onlyOwner",
												"nameLocations": [
													"1080:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1080:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1080:9:16"
										}
									],
									"name": "unpause",
									"nameLocation": "1063:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:2:16"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1090:0:16"
									},
									"scope": 3477,
									"src": "1054:63:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "1466:113:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3270,
															"name": "URICount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3208,
															"src": "1476:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1548_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1485:9:16",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1574,
														"src": "1476:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1548_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1548_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:20:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "1476:20:16"
											},
											{
												"expression": {
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3275,
															"name": "URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "1506:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Admin_$3230_storage_$",
																"typeString": "mapping(uint256 => struct Dispatch.Admin storage ref)"
															}
														},
														"id": 3279,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3276,
																	"name": "URICount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3208,
																	"src": "1510:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1548_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3277,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1519:7:16",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1560,
																"src": "1510:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1548_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1548_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1510:18:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1506:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Admin_$3230_storage",
															"typeString": "struct Dispatch.Admin storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3281,
																"name": "_uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3263,
																"src": "1538:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 3282,
																"name": "capAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3265,
																"src": "1543:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3283,
																		"name": "URICount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3208,
																		"src": "1553:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1548_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 3284,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1562:7:16",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1560,
																	"src": "1553:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1548_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1548_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 3285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1553:18:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3280,
															"name": "Admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3230,
															"src": "1532:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Admin_$3230_storage_ptr_$",
																"typeString": "type(struct Dispatch.Admin storage pointer)"
															}
														},
														"id": 3286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1532:40:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Admin_$3230_memory_ptr",
															"typeString": "struct Dispatch.Admin memory"
														}
													},
													"src": "1506:66:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Admin_$3230_storage",
														"typeString": "struct Dispatch.Admin storage ref"
													}
												},
												"id": 3288,
												"nodeType": "ExpressionStatement",
												"src": "1506:66:16"
											}
										]
									},
									"functionSelector": "9c9b68e3",
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3267,
												"name": "onlyOwner",
												"nameLocations": [
													"1457:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1457:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1457:9:16"
										}
									],
									"name": "EnterData",
									"nameLocation": "1404:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1429:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "1415:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1415:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "capAmount",
												"nameLocation": "1439:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "1434:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:35:16"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1466:0:16"
									},
									"scope": 3477,
									"src": "1395:184:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3326,
										"nodeType": "Block",
										"src": "1622:187:16",
										"statements": [
											{
												"assignments": [
													3296
												],
												"declarations": [
													{
														"constant": false,
														"id": 3296,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1637:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3326,
														"src": "1632:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3295,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1632:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3300,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3297,
															"name": "tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "1647:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1548_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1662:7:16",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1560,
														"src": "1647:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1548_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1548_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1647:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1632:39:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3292,
															"src": "1691:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3303,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "1695:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3301,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 915,
														"src": "1681:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1681:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3305,
												"nodeType": "ExpressionStatement",
												"src": "1681:22:16"
											},
											{
												"expression": {
													"id": 3314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3306,
																"name": "TokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3214,
																"src": "1713:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3311,
															"indexExpression": {
																"id": 3307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3292,
																"src": "1721:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1713:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3312,
														"indexExpression": {
															"baseExpression": {
																"id": 3308,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "1725:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 3310,
															"indexExpression": {
																"id": 3309,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3292,
																"src": "1731:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1725:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1713:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3313,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "1738:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1713:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3315,
												"nodeType": "ExpressionStatement",
												"src": "1713:32:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3316,
															"name": "tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "1755:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1548_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1770:9:16",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1574,
														"src": "1755:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1548_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1548_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1755:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3320,
												"nodeType": "ExpressionStatement",
												"src": "1755:26:16"
											},
											{
												"expression": {
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1791:11:16",
													"subExpression": {
														"baseExpression": {
															"id": 3321,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "1791:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3323,
														"indexExpression": {
															"id": 3322,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3292,
															"src": "1797:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1791:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3325,
												"nodeType": "ExpressionStatement",
												"src": "1791:11:16"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 3327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "1594:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1611:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3327,
												"src": "1603:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:12:16"
									},
									"returnParameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:0:16"
									},
									"scope": 3477,
									"src": "1585:224:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3376,
										"nodeType": "Block",
										"src": "1885:197:16",
										"statements": [
											{
												"assignments": [
													3339
												],
												"declarations": [
													{
														"constant": false,
														"id": 3339,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "1912:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3376,
														"src": "1895:24:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3337,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1895:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3338,
															"nodeType": "ArrayTypeName",
															"src": "1895:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3347,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3343,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "1936:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 3345,
															"indexExpression": {
																"id": 3344,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3329,
																"src": "1942:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1936:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1922:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3340,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1926:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3341,
															"nodeType": "ArrayTypeName",
															"src": "1926:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1922:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1895:51:16"
											},
											{
												"body": {
													"id": 3372,
													"nodeType": "Block",
													"src": "1996:56:16",
													"statements": [
														{
															"expression": {
																"id": 3370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3360,
																		"name": "myArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3339,
																		"src": "2010:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3362,
																	"indexExpression": {
																		"id": 3361,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3349,
																		"src": "2018:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2010:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3363,
																			"name": "TokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3214,
																			"src": "2023:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 3365,
																		"indexExpression": {
																			"id": 3364,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3329,
																			"src": "2031:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2023:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 3369,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3366,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3349,
																			"src": "2035:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2039:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2035:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2023:18:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2010:31:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3371,
															"nodeType": "ExpressionStatement",
															"src": "2010:31:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3352,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "1976:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"baseExpression": {
															"id": 3353,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "1980:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3355,
														"indexExpression": {
															"id": 3354,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3329,
															"src": "1986:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1980:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1976:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3373,
												"initializationExpression": {
													"assignments": [
														3349
													],
													"declarations": [
														{
															"constant": false,
															"id": 3349,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1969:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3373,
															"src": "1961:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3348,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1961:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3351,
													"initialValue": {
														"hexValue": "30",
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1973:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1961:13:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1991:3:16",
														"subExpression": {
															"id": 3357,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3349,
															"src": "1991:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3359,
													"nodeType": "ExpressionStatement",
													"src": "1991:3:16"
												},
												"nodeType": "ForStatement",
												"src": "1956:96:16"
											},
											{
												"expression": {
													"id": 3374,
													"name": "myArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3339,
													"src": "2068:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3334,
												"id": 3375,
												"nodeType": "Return",
												"src": "2061:14:16"
											}
										]
									},
									"functionSelector": "f1537686",
									"id": 3377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenId",
									"nameLocation": "1823:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1842:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "1834:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:12:16"
									},
									"returnParameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "1867:16:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3331,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1867:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3332,
													"nodeType": "ArrayTypeName",
													"src": "1867:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1866:18:16"
									},
									"scope": 3477,
									"src": "1814:268:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3453,
										"nodeType": "Block",
										"src": "2162:357:16",
										"statements": [
											{
												"expression": {
													"id": 3396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3386,
																"name": "TokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3214,
																"src": "2172:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3393,
															"indexExpression": {
																"id": 3387,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3379,
																"src": "2180:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2172:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3394,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3388,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3218,
																	"src": "2185:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3390,
																"indexExpression": {
																	"id": 3389,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3379,
																	"src": "2191:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2185:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2198:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2185:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2172:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3395,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3381,
														"src": "2203:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2172:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3397,
												"nodeType": "ExpressionStatement",
												"src": "2172:39:16"
											},
											{
												"assignments": [
													3402
												],
												"declarations": [
													{
														"constant": false,
														"id": 3402,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "2238:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3453,
														"src": "2221:24:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3400,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2221:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3401,
															"nodeType": "ArrayTypeName",
															"src": "2221:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3406,
												"initialValue": {
													"arguments": [
														{
															"id": 3404,
															"name": "_seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3383,
															"src": "2260:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3403,
														"name": "getTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "2249:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (uint256[] memory)"
														}
													},
													"id": 3405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:19:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2221:47:16"
											},
											{
												"body": {
													"id": 3446,
													"nodeType": "Block",
													"src": "2318:173:16",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3418,
																		"name": "myArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3402,
																		"src": "2335:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3420,
																	"indexExpression": {
																		"id": 3419,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3408,
																		"src": "2343:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2335:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3421,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3381,
																	"src": "2349:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2335:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3445,
															"nodeType": "IfStatement",
															"src": "2332:149:16",
															"trueBody": {
																"id": 3444,
																"nodeType": "Block",
																"src": "2358:123:16",
																"statements": [
																	{
																		"expression": {
																			"id": 3437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 3423,
																						"name": "TokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3214,
																						"src": "2376:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(uint256 => uint256))"
																						}
																					},
																					"id": 3428,
																					"indexExpression": {
																						"id": 3424,
																						"name": "_seller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3383,
																						"src": "2384:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2376:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 3429,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3425,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3408,
																						"src": "2393:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3426,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2395:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2393:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2376:21:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 3430,
																						"name": "TokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3214,
																						"src": "2400:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(uint256 => uint256))"
																						}
																					},
																					"id": 3432,
																					"indexExpression": {
																						"id": 3431,
																						"name": "_seller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3383,
																						"src": "2408:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2400:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 3436,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 3433,
																						"name": "count",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3218,
																						"src": "2417:5:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 3435,
																					"indexExpression": {
																						"id": 3434,
																						"name": "_seller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3383,
																						"src": "2423:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2417:14:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2400:32:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2376:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3438,
																		"nodeType": "ExpressionStatement",
																		"src": "2376:56:16"
																	},
																	{
																		"expression": {
																			"id": 3442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "2450:16:16",
																			"subExpression": {
																				"baseExpression": {
																					"id": 3439,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3218,
																					"src": "2450:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 3441,
																				"indexExpression": {
																					"id": 3440,
																					"name": "_seller",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3383,
																					"src": "2456:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2450:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3443,
																		"nodeType": "ExpressionStatement",
																		"src": "2450:16:16"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3411,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3408,
														"src": "2293:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3412,
															"name": "myArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3402,
															"src": "2297:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 3413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2305:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2297:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2293:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3447,
												"initializationExpression": {
													"assignments": [
														3408
													],
													"declarations": [
														{
															"constant": false,
															"id": 3408,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2287:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3447,
															"src": "2282:6:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3407,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2282:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3410,
													"initialValue": {
														"hexValue": "30",
														"id": 3409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2289:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2282:8:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2314:3:16",
														"subExpression": {
															"id": 3415,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3408,
															"src": "2314:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3417,
													"nodeType": "ExpressionStatement",
													"src": "2314:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2278:213:16"
											},
											{
												"expression": {
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2500:12:16",
													"subExpression": {
														"baseExpression": {
															"id": 3448,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "2500:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3450,
														"indexExpression": {
															"id": 3449,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3379,
															"src": "2506:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2500:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3452,
												"nodeType": "ExpressionStatement",
												"src": "2500:12:16"
											}
										]
									},
									"functionSelector": "6e0cee09",
									"id": 3454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenId",
									"nameLocation": "2096:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3379,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2118:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "2110:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3381,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2127:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "2122:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2122:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "2144:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "2136:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:43:16"
									},
									"returnParameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:0:16"
									},
									"scope": 3477,
									"src": "2087:432:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										850,
										1491
									],
									"body": {
										"id": 3475,
										"nodeType": "Block",
										"src": "2672:56:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3470,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3456,
															"src": "2703:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3471,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "2707:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3472,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "2716:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3468,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2689:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Dispatch_$3477_$",
																"typeString": "type(contract super Dispatch)"
															}
														},
														"id": 3469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2695:7:16",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1491,
														"src": "2689:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2689:32:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3467,
												"id": 3474,
												"nodeType": "Return",
												"src": "2682:39:16"
											}
										]
									},
									"id": 3476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2533:7:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3464,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3462,
												"name": "ERC721",
												"nameLocations": [
													"2618:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "2618:6:16"
											},
											{
												"id": 3463,
												"name": "ERC721Pausable",
												"nameLocations": [
													"2626:14:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1492,
												"src": "2626:14:16"
											}
										],
										"src": "2609:32:16"
									},
									"parameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2549:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3476,
												"src": "2541:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2561:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3476,
												"src": "2553:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2578:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3476,
												"src": "2570:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2540:43:16"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3476,
												"src": "2659:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2659:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2658:9:16"
									},
									"scope": 3477,
									"src": "2524:204:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3478,
							"src": "426:2304:16",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1638,
								1641
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327,
								1630,
								1635
							]
						}
					],
					"src": "81:2649:16"
				},
				"id": 16
			}
		}
	}
}