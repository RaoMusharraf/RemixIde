{
	"id": "0838eadff04a6dc8ced36952aba6e981",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapToken/swap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract SingleSwap {\n    address public constant routerAddress =\n        0xE592427A0AEce92De3Edee1F18E0157C05861564;\n    ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress);\n\n    address public constant LINK = 0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A;\n    address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6;\n\n    IERC20 public linkToken = IERC20(LINK);\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n    constructor() {}\n\n    function swapExactInputSingle(uint256 amountIn)\n        external\n        returns (uint256 amountOut)\n    {\n        linkToken.approve(address(swapRouter), amountIn);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams({\n                tokenIn: LINK,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: address(this),\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)\n        external\n        returns (uint256 amountIn)\n    {\n        linkToken.approve(address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter\n            .ExactOutputSingleParams({\n                tokenIn: LINK,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: address(this),\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        if (amountIn < amountInMaximum) {\n            linkToken.approve(address(swapRouter), 0);\n            linkToken.transfer(address(this), amountInMaximum - amountIn);\n        }\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/SwapToken/swap.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapToken/swap.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SwapToken/swap.sol\":{\"keccak256\":\"0x83afae0ffd529ededf0a7c7f715e723cb4686f5dd3f0336c783d4c3b528a6ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a00689029877ee0e8e92fb4e1faac98eb7de8fb49feee47054491c7e85979d3\",\"dweb:/ipfs/QmbZhzNQVwLrxLy43vZfETy172itfgR7Tn9z13Ph5ojgDt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SingleSwap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "LINK",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "routerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapToken/swap.sol\":422:2473  contract SingleSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SwapToken/swap.sol\":496:538  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n  0xe592427a0aece92de3edee1f18e0157c05861564\n    /* \"contracts/SwapToken/swap.sol\":544:612  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n  0x80\n  mstore\n    /* \"contracts/SwapToken/swap.sol\":778:816  IERC20 public linkToken = IERC20(LINK) */\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/SwapToken/swap.sol\":650:692  0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n  0x8179d0b8345d9a87043069abbdd4ffa86d784f9a\n    /* \"contracts/SwapToken/swap.sol\":778:816  IERC20 public linkToken = IERC20(LINK) */\n  or\n  swap1\n  sstore\n    /* \"contracts/SwapToken/swap.sol\":926:942  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SwapToken/swap.sol\":422:2473  contract SingleSwap {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapToken/swap.sol\":422:2473  contract SingleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73bd43ad\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x73bd43ad\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc4b69a18\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x089fe6aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b6b6d23\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3268cc56\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x57970e93\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapToken/swap.sol\":882:919  uint24 public constant poolFee = 3000 */\n    tag_3:\n      tag_12\n        /* \"contracts/SwapToken/swap.sol\":915:919  3000 */\n      0x0bb8\n        /* \"contracts/SwapToken/swap.sol\":882:919  uint24 public constant poolFee = 3000 */\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":188:196   */\n      0xffffff\n        /* \"#utility.yul\":176:197   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:198   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"contracts/SwapToken/swap.sol\":882:919  uint24 public constant poolFee = 3000 */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapToken/swap.sol\":619:692  address public constant LINK = 0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n    tag_4:\n      tag_16\n        /* \"contracts/SwapToken/swap.sol\":650:692  0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n      0x8179d0b8345d9a87043069abbdd4ffa86d784f9a\n        /* \"contracts/SwapToken/swap.sol\":619:692  address public constant LINK = 0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":373:405   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":355:406   */\n      dup2\n      mstore\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"contracts/SwapToken/swap.sol\":619:692  address public constant LINK = 0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n      tag_14\n        /* \"#utility.yul\":209:412   */\n      jump\n        /* \"contracts/SwapToken/swap.sol\":448:538  address public constant routerAddress =... */\n    tag_5:\n      tag_16\n        /* \"contracts/SwapToken/swap.sol\":496:538  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n      0xe592427a0aece92de3edee1f18e0157c05861564\n        /* \"contracts/SwapToken/swap.sol\":448:538  address public constant routerAddress =... */\n      dup2\n      jump\n        /* \"contracts/SwapToken/swap.sol\":778:816  IERC20 public linkToken = IERC20(LINK) */\n    tag_6:\n      sload(0x00)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/SwapToken/swap.sol\":948:1590  function swapExactInputSingle(uint256 amountIn)... */\n    tag_7:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":970:995   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"contracts/SwapToken/swap.sol\":948:1590  function swapExactInputSingle(uint256 amountIn)... */\n      tag_14\n        /* \"#utility.yul\":824:1001   */\n      jump\n        /* \"contracts/SwapToken/swap.sol\":698:771  address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n    tag_8:\n      tag_16\n        /* \"contracts/SwapToken/swap.sol\":729:771  0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\n        /* \"contracts/SwapToken/swap.sol\":698:771  address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      dup2\n      jump\n        /* \"contracts/SwapToken/swap.sol\":544:612  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n    tag_9:\n      tag_16\n      immutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n      dup2\n      jump\n        /* \"contracts/SwapToken/swap.sol\":1596:2471  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)... */\n    tag_10:\n      tag_27\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/SwapToken/swap.sol\":948:1590  function swapExactInputSingle(uint256 amountIn)... */\n    tag_30:\n        /* \"contracts/SwapToken/swap.sol\":1030:1047  uint256 amountOut */\n      0x00\n        /* \"contracts/SwapToken/swap.sol\":1063:1072  linkToken */\n      dup1\n      sload\n        /* \"contracts/SwapToken/swap.sol\":1063:1111  linkToken.approve(address(swapRouter), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapToken/swap.sol\":1089:1099  swapRouter */\n      immutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n        /* \"#utility.yul\":1678:1710   */\n      dup2\n      and\n        /* \"contracts/SwapToken/swap.sol\":1063:1111  linkToken.approve(address(swapRouter), amountIn) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1660:1711   */\n      mstore\n        /* \"#utility.yul\":1727:1745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1720:1754   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1063:1072  linkToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":1063:1080  linkToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1633:1651   */\n      0x44\n      add\n        /* \"contracts/SwapToken/swap.sol\":1063:1111  linkToken.approve(address(swapRouter), amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      pop\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":650:692  0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n      0x8179d0b8345d9a87043069abbdd4ffa86d784f9a\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      dup2\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":729:771  0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":915:919  3000 */\n      0x0bb8\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1351:1355  this */\n      address\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1384:1399  block.timestamp */\n      timestamp\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1122:1170  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      0xc0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xe0\n      dup3\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1548:1583  swapRouter.exactInputSingle(params) */\n      swap1\n      mload\n      shl(0xe0, 0x414bf389)\n      dup2\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1548:1558  swapRouter */\n      immutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapToken/swap.sol\":1548:1575  swapRouter.exactInputSingle */\n      and\n      swap1\n      0x414bf389\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":1548:1583  swapRouter.exactInputSingle(params) */\n      tag_52\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":1173:1525  ISwapRouter... */\n      dup5\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":1548:1583  swapRouter.exactInputSingle(params) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_52:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/SwapToken/swap.sol\":1536:1583  amountOut = swapRouter.exactInputSingle(params) */\n      swap4\n        /* \"contracts/SwapToken/swap.sol\":948:1590  function swapExactInputSingle(uint256 amountIn)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapToken/swap.sol\":1596:2471  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)... */\n    tag_43:\n        /* \"contracts/SwapToken/swap.sol\":1705:1721  uint256 amountIn */\n      0x00\n        /* \"contracts/SwapToken/swap.sol\":1737:1746  linkToken */\n      dup1\n      sload\n        /* \"contracts/SwapToken/swap.sol\":1737:1792  linkToken.approve(address(swapRouter), amountInMaximum) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapToken/swap.sol\":1763:1773  swapRouter */\n      immutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n        /* \"#utility.yul\":1678:1710   */\n      dup2\n      and\n        /* \"contracts/SwapToken/swap.sol\":1737:1792  linkToken.approve(address(swapRouter), amountInMaximum) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1660:1711   */\n      mstore\n        /* \"#utility.yul\":1727:1745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1720:1754   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1737:1746  linkToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":1737:1754  linkToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1633:1651   */\n      0x44\n      add\n        /* \"contracts/SwapToken/swap.sol\":1737:1792  linkToken.approve(address(swapRouter), amountInMaximum) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      pop\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":650:692  0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A */\n      0x8179d0b8345d9a87043069abbdd4ffa86d784f9a\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      dup2\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":729:771  0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6 */\n      0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":915:919  3000 */\n      0x0bb8\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":2034:2038  this */\n      address\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":2067:2082  block.timestamp */\n      timestamp\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1803:1852  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      0xe0\n      dup3\n      add\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":2245:2281  swapRouter.exactOutputSingle(params) */\n      swap1\n      mload\n      shl(0xe3, 0x1b67c433)\n      dup2\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":2245:2255  swapRouter */\n      immutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapToken/swap.sol\":2245:2273  swapRouter.exactOutputSingle */\n      and\n      swap1\n      0xdb3e2198\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":2245:2281  swapRouter.exactOutputSingle(params) */\n      tag_63\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":1855:2223  ISwapRouter... */\n      dup5\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":2245:2281  swapRouter.exactOutputSingle(params) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_67:\n        /* \"contracts/SwapToken/swap.sol\":2234:2281  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/SwapToken/swap.sol\":2307:2322  amountInMaximum */\n      dup3\n        /* \"contracts/SwapToken/swap.sol\":2296:2304  amountIn */\n      dup3\n        /* \"contracts/SwapToken/swap.sol\":2296:2322  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/SwapToken/swap.sol\":2292:2465  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/SwapToken/swap.sol\":2338:2347  linkToken */\n      0x00\n      dup1\n      sload\n        /* \"contracts/SwapToken/swap.sol\":2338:2379  linkToken.approve(address(swapRouter), 0) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapToken/swap.sol\":2364:2374  swapRouter */\n      immutable(\"0xc5bf1d490d2f4e87cc1d5184cd59114bcef0e857ac09f6d840a1caed5b52d973\")\n        /* \"#utility.yul\":1678:1710   */\n      dup2\n      and\n        /* \"contracts/SwapToken/swap.sol\":2338:2379  linkToken.approve(address(swapRouter), 0) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1660:1711   */\n      mstore\n        /* \"#utility.yul\":1727:1745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1720:1754   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":2338:2347  linkToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/SwapToken/swap.sol\":2338:2355  linkToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1633:1651   */\n      0x44\n      add\n        /* \"contracts/SwapToken/swap.sol\":2338:2379  linkToken.approve(address(swapRouter), 0) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_73:\n      pop\n        /* \"contracts/SwapToken/swap.sol\":2393:2402  linkToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/SwapToken/swap.sol\":2393:2411  linkToken.transfer */\n      0xa9059cbb\n        /* \"contracts/SwapToken/swap.sol\":2420:2424  this */\n      address\n        /* \"contracts/SwapToken/swap.sol\":2427:2453  amountInMaximum - amountIn */\n      tag_74\n        /* \"contracts/SwapToken/swap.sol\":2445:2453  amountIn */\n      dup6\n        /* \"contracts/SwapToken/swap.sol\":2427:2442  amountInMaximum */\n      dup8\n        /* \"contracts/SwapToken/swap.sol\":2427:2453  amountInMaximum - amountIn */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/SwapToken/swap.sol\":2393:2454  linkToken.transfer(address(this), amountInMaximum - amountIn) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1678:1710   */\n      swap1\n      swap3\n      and\n        /* \"contracts/SwapToken/swap.sol\":2393:2454  linkToken.transfer(address(this), amountInMaximum - amountIn) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1660:1711   */\n      mstore\n        /* \"#utility.yul\":1727:1745   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1720:1754   */\n      mstore\n        /* \"#utility.yul\":1633:1651   */\n      0x44\n      add\n        /* \"contracts/SwapToken/swap.sol\":2393:2454  linkToken.transfer(address(this), amountInMaximum - amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/SwapToken/swap.sol\":2292:2465  if (amountIn < amountInMaximum) {... */\n    tag_68:\n        /* \"contracts/SwapToken/swap.sol\":1727:2471  {... */\n      pop\n        /* \"contracts/SwapToken/swap.sol\":1596:2471  function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":639:819   */\n    tag_29:\n        /* \"#utility.yul\":698:704   */\n      0x00\n        /* \"#utility.yul\":751:753   */\n      0x20\n        /* \"#utility.yul\":739:748   */\n      dup3\n        /* \"#utility.yul\":730:737   */\n      dup5\n        /* \"#utility.yul\":726:749   */\n      sub\n        /* \"#utility.yul\":722:754   */\n      slt\n        /* \"#utility.yul\":719:771   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":767:768   */\n      0x00\n        /* \"#utility.yul\":764:765   */\n      dup1\n        /* \"#utility.yul\":757:769   */\n      revert\n        /* \"#utility.yul\":719:771   */\n    tag_86:\n      pop\n        /* \"#utility.yul\":790:813   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":639:819   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1233:1481   */\n    tag_42:\n        /* \"#utility.yul\":1301:1307   */\n      0x00\n        /* \"#utility.yul\":1309:1315   */\n      dup1\n        /* \"#utility.yul\":1362:1364   */\n      0x40\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1341:1348   */\n      dup6\n        /* \"#utility.yul\":1337:1360   */\n      sub\n        /* \"#utility.yul\":1333:1365   */\n      slt\n        /* \"#utility.yul\":1330:1382   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1378:1379   */\n      0x00\n        /* \"#utility.yul\":1375:1376   */\n      dup1\n        /* \"#utility.yul\":1368:1380   */\n      revert\n        /* \"#utility.yul\":1330:1382   */\n    tag_90:\n      pop\n      pop\n        /* \"#utility.yul\":1401:1424   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1471:1473   */\n      0x20\n        /* \"#utility.yul\":1456:1474   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1443:1475   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1233:1481   */\n      jump\t// out\n        /* \"#utility.yul\":1765:2042   */\n    tag_51:\n        /* \"#utility.yul\":1832:1838   */\n      0x00\n        /* \"#utility.yul\":1885:1887   */\n      0x20\n        /* \"#utility.yul\":1873:1882   */\n      dup3\n        /* \"#utility.yul\":1864:1871   */\n      dup5\n        /* \"#utility.yul\":1860:1883   */\n      sub\n        /* \"#utility.yul\":1856:1888   */\n      slt\n        /* \"#utility.yul\":1853:1905   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1901:1902   */\n      0x00\n        /* \"#utility.yul\":1898:1899   */\n      dup1\n        /* \"#utility.yul\":1891:1903   */\n      revert\n        /* \"#utility.yul\":1853:1905   */\n    tag_93:\n        /* \"#utility.yul\":1933:1942   */\n      dup2\n        /* \"#utility.yul\":1927:1943   */\n      mload\n        /* \"#utility.yul\":1986:1991   */\n      dup1\n        /* \"#utility.yul\":1979:1992   */\n      iszero\n        /* \"#utility.yul\":1972:1993   */\n      iszero\n        /* \"#utility.yul\":1965:1970   */\n      dup2\n        /* \"#utility.yul\":1962:1994   */\n      eq\n        /* \"#utility.yul\":1952:2012   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":2005:2006   */\n      dup1\n        /* \"#utility.yul\":1998:2010   */\n      revert\n        /* \"#utility.yul\":2640:2928   */\n    tag_53:\n        /* \"#utility.yul\":2850:2853   */\n      0x0100\n        /* \"#utility.yul\":2835:2854   */\n      dup2\n      add\n        /* \"#utility.yul\":2863:2922   */\n      tag_97\n        /* \"#utility.yul\":2839:2848   */\n      dup3\n        /* \"#utility.yul\":2904:2910   */\n      dup5\n        /* \"#utility.yul\":2177:2189   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2173:2194   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2161:2195   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2248:2252   */\n      0x20\n        /* \"#utility.yul\":2237:2253   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2231:2254   */\n      mload\n        /* \"#utility.yul\":2227:2259   */\n      dup3\n      and\n        /* \"#utility.yul\":2211:2225   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":2204:2260   */\n      mstore\n        /* \"#utility.yul\":2313:2317   */\n      0x40\n        /* \"#utility.yul\":2302:2318   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2296:2319   */\n      mload\n        /* \"#utility.yul\":2321:2329   */\n      0xffffff\n        /* \"#utility.yul\":2292:2330   */\n      and\n        /* \"#utility.yul\":2276:2290   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":2269:2331   */\n      mstore\n        /* \"#utility.yul\":2384:2388   */\n      0x60\n        /* \"#utility.yul\":2373:2389   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2367:2390   */\n      mload\n        /* \"#utility.yul\":2363:2395   */\n      dup3\n      and\n        /* \"#utility.yul\":2347:2361   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":2340:2396   */\n      mstore\n        /* \"#utility.yul\":2445:2449   */\n      0x80\n        /* \"#utility.yul\":2434:2450   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2428:2451   */\n      mload\n        /* \"#utility.yul\":2412:2426   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":2405:2452   */\n      mstore\n        /* \"#utility.yul\":2141:2144   */\n      0xa0\n        /* \"#utility.yul\":2490:2506   */\n      dup3\n      dup2\n      add\n        /* \"#utility.yul\":2484:2507   */\n      mload\n        /* \"#utility.yul\":2468:2482   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":2461:2508   */\n      mstore\n        /* \"#utility.yul\":2557:2561   */\n      0xc0\n        /* \"#utility.yul\":2546:2562   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2540:2563   */\n      mload\n        /* \"#utility.yul\":2524:2538   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":2517:2564   */\n      mstore\n        /* \"#utility.yul\":2617:2621   */\n      0xe0\n        /* \"#utility.yul\":2606:2622   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2600:2623   */\n      mload\n        /* \"#utility.yul\":2596:2628   */\n      and\n        /* \"#utility.yul\":2580:2594   */\n      swap2\n      add\n        /* \"#utility.yul\":2573:2629   */\n      mstore\n        /* \"#utility.yul\":2047:2635   */\n      jump\n        /* \"#utility.yul\":2863:2922   */\n    tag_97:\n        /* \"#utility.yul\":2640:2928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2933:3117   */\n    tag_57:\n        /* \"#utility.yul\":3003:3009   */\n      0x00\n        /* \"#utility.yul\":3056:3058   */\n      0x20\n        /* \"#utility.yul\":3044:3053   */\n      dup3\n        /* \"#utility.yul\":3035:3042   */\n      dup5\n        /* \"#utility.yul\":3031:3054   */\n      sub\n        /* \"#utility.yul\":3027:3059   */\n      slt\n        /* \"#utility.yul\":3024:3076   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":3072:3073   */\n      0x00\n        /* \"#utility.yul\":3069:3070   */\n      dup1\n        /* \"#utility.yul\":3062:3074   */\n      revert\n        /* \"#utility.yul\":3024:3076   */\n    tag_99:\n      pop\n        /* \"#utility.yul\":3095:3111   */\n      mload\n      swap2\n        /* \"#utility.yul\":2933:3117   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3704:3929   */\n    tag_75:\n        /* \"#utility.yul\":3771:3780   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3792:3803   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3789:3923   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3845:3855   */\n      0x4e487b71\n        /* \"#utility.yul\":3840:3843   */\n      0xe0\n        /* \"#utility.yul\":3836:3856   */\n      shl\n        /* \"#utility.yul\":3833:3834   */\n      0x00\n        /* \"#utility.yul\":3826:3857   */\n      mstore\n        /* \"#utility.yul\":3880:3884   */\n      0x11\n        /* \"#utility.yul\":3877:3878   */\n      0x04\n        /* \"#utility.yul\":3870:3885   */\n      mstore\n        /* \"#utility.yul\":3908:3912   */\n      0x24\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3898:3913   */\n      revert\n\n    auxdata: 0xa2646970667358221220cfa467c1578356c4aeb30b442e983bb96704a11ff8e288e051f030ca2ec7bb8864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_171": {
									"entryPoint": null,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405273e592427a0aece92de3edee1f18e0157c05861564608052600080546001600160a01b031916738179d0b8345d9a87043069abbdd4ffa86d784f9a17905534801561004e57600080fd5b5060805161071761008d60003960008181610151015281816101a101528181610291015281816103330152818161042301526104c801526107176000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806373bd43ad1161005b57806373bd43ad14610110578063ad5c464814610131578063c31c9c071461014c578063c4b69a181461017357600080fd5b8063089fe6aa1461008d5780631b6b6d23146100af5780633268cc56146100e257806357970e93146100fd575b600080fd5b610096610bb881565b60405162ffffff90911681526020015b60405180910390f35b6100ca738179d0b8345d9a87043069abbdd4ffa86d784f9a81565b6040516001600160a01b0390911681526020016100a6565b6100ca73e592427a0aece92de3edee1f18e0157c0586156481565b6000546100ca906001600160a01b031681565b61012361011e3660046105da565b610186565b6040519081526020016100a6565b6100ca73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6101236101813660046105f3565b610318565b6000805460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af11580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610615565b506040805161010081018252738179d0b8345d9a87043069abbdd4ffa86d784f9a815273b4fbf271143f4fbf7b91a5ded31805e42b2208d66020820152610bb88183015230606082015242608082015260a08101849052600060c0820181905260e0820152905163414bf38960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063414bf389906102ce908490600401610637565b6020604051808303816000875af11580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031191906106a7565b9392505050565b6000805460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610615565b506040805161010081018252738179d0b8345d9a87043069abbdd4ffa86d784f9a815273b4fbf271143f4fbf7b91a5ded31805e42b2208d66020820152610bb88183015230606082015242608082015260a0810185905260c08101849052600060e08201529051631b67c43360e31b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db3e219890610460908490600401610637565b6020604051808303816000875af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a391906106a7565b9150828210156105d3576000805460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482019390935291169063095ea7b3906044016020604051808303816000875af1158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610615565b506000546001600160a01b031663a9059cbb3061056285876106c0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610615565b505b5092915050565b6000602082840312156105ec57600080fd5b5035919050565b6000806040838503121561060657600080fd5b50508035926020909101359150565b60006020828403121561062757600080fd5b8151801515811461031157600080fd5b61010081016106a1828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c0808301519084015260e09182015116910152565b92915050565b6000602082840312156106b957600080fd5b5051919050565b818103818111156106a157634e487b7160e01b600052601160045260246000fdfea2646970667358221220cfa467c1578356c4aeb30b442e983bb96704a11ff8e288e051f030ca2ec7bb8864736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x717 PUSH2 0x8D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x151 ADD MSTORE DUP2 DUP2 PUSH2 0x1A1 ADD MSTORE DUP2 DUP2 PUSH2 0x291 ADD MSTORE DUP2 DUP2 PUSH2 0x333 ADD MSTORE DUP2 DUP2 PUSH2 0x423 ADD MSTORE PUSH2 0x4C8 ADD MSTORE PUSH2 0x717 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73BD43AD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0xCA PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0xCA PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 DUP2 JUMP JUMPDEST PUSH2 0xCA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A DUP2 MSTORE PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x2CE SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x637 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x6A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A DUP2 MSTORE PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x460 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x637 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB ADDRESS PUSH2 0x562 DUP6 DUP8 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD PUSH2 0x6A1 DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF LOG4 PUSH8 0xC1578356C4AEB30B PREVRANDAO 0x2E SWAP9 EXTCODESIZE 0xB9 PUSH8 0x4A11FF8E288E051 CREATE ADDRESS 0xCA 0x2E 0xC7 0xBB DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "422:2051:2:-:0;;;496:42;544:68;;778:38;;;-1:-1:-1;;;;;;778:38:2;650:42;778:38;;;926:16;;;;;;;;;;422:2051;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LINK_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@linkToken_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolFee_167": {
									"entryPoint": null,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@routerAddress_146": {
									"entryPoint": null,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapExactInputSingle_217": {
									"entryPoint": 390,
									"id": 217,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactOutputSingle_292": {
									"entryPoint": 792,
									"id": 292,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapRouter_152": {
									"entryPoint": null,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_struct_ExactInputSingleParams": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$143__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$83_memory_ptr__to_t_struct$_ExactOutputSingleParams_$83_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3931:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:91:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "188:8:3",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:40:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:3",
														"type": ""
													}
												],
												"src": "14:190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "393:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "398:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "389:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "389:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "402:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "385:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "385:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "373:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "355:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "355:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "290:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "301:4:3",
														"type": ""
													}
												],
												"src": "209:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "532:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "542:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "554:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "550:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "542:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "584:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "599:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "615:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "620:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "611:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "611:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "624:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "607:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "607:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "595:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$143__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "501:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "512:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "523:4:3",
														"type": ""
													}
												],
												"src": "417:217:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "764:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "767:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "757:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "757:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "757:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "730:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "739:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "726:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "722:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:32:3"
															},
															"nodeType": "YulIf",
															"src": "719:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "780:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "803:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "790:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "790:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "780:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "675:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "686:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "698:6:3",
														"type": ""
													}
												],
												"src": "639:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "925:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "935:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "935:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "977:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "894:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "905:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "916:4:3",
														"type": ""
													}
												],
												"src": "824:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1126:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1136:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1148:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1136:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1178:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1193:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1209:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1214:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1205:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1205:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1218:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1201:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1201:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1189:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1189:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1171:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1171:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1095:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1106:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1117:4:3",
														"type": ""
													}
												],
												"src": "1006:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1320:161:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1378:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1368:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1341:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:32:3"
															},
															"nodeType": "YulIf",
															"src": "1330:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1391:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1401:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1433:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1278:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1289:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1301:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1309:6:3",
														"type": ""
													}
												],
												"src": "1233:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1625:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1637:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1625:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1667:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1682:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1698:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1703:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1694:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1694:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1707:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1690:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1690:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1678:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1660:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1747:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1720:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1720:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1576:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1587:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1595:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1606:4:3",
														"type": ""
													}
												],
												"src": "1486:274:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:199:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1889:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1898:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1891:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1891:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1891:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1864:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1873:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1860:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1860:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1856:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:32:3"
															},
															"nodeType": "YulIf",
															"src": "1853:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1914:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1933:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1927:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1918:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2005:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2008:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1998:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1965:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1986:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1979:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1979:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1972:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1972:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1962:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:40:3"
															},
															"nodeType": "YulIf",
															"src": "1952:60:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2021:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2031:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1809:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1820:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1832:6:3",
														"type": ""
													}
												],
												"src": "1765:277:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2113:522:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2123:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2141:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2146:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2137:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2137:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2150:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2127:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2168:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2177:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2177:12:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2191:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2173:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2173:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2161:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2215:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2220:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2241:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2248:4:3",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2237:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2237:16:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2231:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2231:23:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2256:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2280:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2285:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2306:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2313:4:3",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2302:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2302:16:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2296:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2296:23:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2321:8:3",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2292:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2292:38:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2351:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2356:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2347:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2377:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2384:4:3",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2373:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2373:16:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2367:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:23:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2392:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2363:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2340:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2340:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2416:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2421:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2438:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2445:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2434:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2434:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2428:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2405:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2405:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2405:47:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2472:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2477:4:3",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2468:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2494:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2501:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2490:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2490:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2484:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2461:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2461:47:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2528:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2533:4:3",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2550:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2557:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2546:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2546:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2540:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:47:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2584:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2589:4:3",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2610:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2617:4:3",
																								"type": "",
																								"value": "0xe0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2606:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2606:16:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2600:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2600:23:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2625:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2596:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2573:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2573:56:3"
														}
													]
												},
												"name": "abi_encode_struct_ExactInputSingleParams",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2097:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2104:3:3",
														"type": ""
													}
												],
												"src": "2047:588:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2817:111:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2827:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2839:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2850:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2835:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2827:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2904:6:3"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2912:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_ExactInputSingleParams",
																	"nodeType": "YulIdentifier",
																	"src": "2863:40:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2863:59:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2786:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2797:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2808:4:3",
														"type": ""
													}
												],
												"src": "2640:288:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3014:103:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3060:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3069:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3072:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3062:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3062:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3062:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3035:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3044:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3056:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3027:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:32:3"
															},
															"nodeType": "YulIf",
															"src": "3024:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3085:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3101:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2980:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2991:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3003:6:3",
														"type": ""
													}
												],
												"src": "2933:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3301:111:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3311:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3323:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3334:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3311:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3388:6:3"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3396:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_ExactInputSingleParams",
																	"nodeType": "YulIdentifier",
																	"src": "3347:40:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3347:59:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$83_memory_ptr__to_t_struct$_ExactOutputSingleParams_$83_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3270:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3281:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3292:4:3",
														"type": ""
													}
												],
												"src": "3122:290:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3554:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3564:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3576:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3572:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3564:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3606:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3621:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3637:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3642:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3633:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3633:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3646:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3629:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3629:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3617:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3599:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3670:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3681:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3666:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3666:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3686:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3515:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3526:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3534:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3545:4:3",
														"type": ""
													}
												],
												"src": "3417:282:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3753:176:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3763:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3775:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3778:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3771:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3763:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3812:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3833:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3840:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3845:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3836:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3836:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3826:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3826:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3826:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3877:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3880:4:3",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3870:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3870:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3870:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3905:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3908:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3898:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3898:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3898:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3801:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3792:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:11:3"
															},
															"nodeType": "YulIf",
															"src": "3789:134:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3735:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3738:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3744:4:3",
														"type": ""
													}
												],
												"src": "3704:225:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$143__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_struct_ExactInputSingleParams(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), 0xffffff))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n        mstore(add(pos, 0xe0), and(mload(add(value, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_struct_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$83_memory_ptr__to_t_struct$_ExactOutputSingleParams_$83_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_struct_ExactInputSingleParams(value0, headStart)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"152": [
									{
										"length": 32,
										"start": 337
									},
									{
										"length": 32,
										"start": 417
									},
									{
										"length": 32,
										"start": 657
									},
									{
										"length": 32,
										"start": 819
									},
									{
										"length": 32,
										"start": 1059
									},
									{
										"length": 32,
										"start": 1224
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806373bd43ad1161005b57806373bd43ad14610110578063ad5c464814610131578063c31c9c071461014c578063c4b69a181461017357600080fd5b8063089fe6aa1461008d5780631b6b6d23146100af5780633268cc56146100e257806357970e93146100fd575b600080fd5b610096610bb881565b60405162ffffff90911681526020015b60405180910390f35b6100ca738179d0b8345d9a87043069abbdd4ffa86d784f9a81565b6040516001600160a01b0390911681526020016100a6565b6100ca73e592427a0aece92de3edee1f18e0157c0586156481565b6000546100ca906001600160a01b031681565b61012361011e3660046105da565b610186565b6040519081526020016100a6565b6100ca73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6101236101813660046105f3565b610318565b6000805460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af11580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610615565b506040805161010081018252738179d0b8345d9a87043069abbdd4ffa86d784f9a815273b4fbf271143f4fbf7b91a5ded31805e42b2208d66020820152610bb88183015230606082015242608082015260a08101849052600060c0820181905260e0820152905163414bf38960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063414bf389906102ce908490600401610637565b6020604051808303816000875af11580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031191906106a7565b9392505050565b6000805460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610615565b506040805161010081018252738179d0b8345d9a87043069abbdd4ffa86d784f9a815273b4fbf271143f4fbf7b91a5ded31805e42b2208d66020820152610bb88183015230606082015242608082015260a0810185905260c08101849052600060e08201529051631b67c43360e31b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db3e219890610460908490600401610637565b6020604051808303816000875af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a391906106a7565b9150828210156105d3576000805460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482019390935291169063095ea7b3906044016020604051808303816000875af1158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610615565b506000546001600160a01b031663a9059cbb3061056285876106c0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610615565b505b5092915050565b6000602082840312156105ec57600080fd5b5035919050565b6000806040838503121561060657600080fd5b50508035926020909101359150565b60006020828403121561062757600080fd5b8151801515811461031157600080fd5b61010081016106a1828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c0808301519084015260e09182015116910152565b92915050565b6000602082840312156106b957600080fd5b5051919050565b818103818111156106a157634e487b7160e01b600052601160045260246000fdfea2646970667358221220cfa467c1578356c4aeb30b442e983bb96704a11ff8e288e051f030ca2ec7bb8864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73BD43AD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0xCA PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0xCA PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 DUP2 JUMP JUMPDEST PUSH2 0xCA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A DUP2 MSTORE PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x2CE SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x637 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x6A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0x8179D0B8345D9A87043069ABBDD4FFA86D784F9A DUP2 MSTORE PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB8 DUP2 DUP4 ADD MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x460 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x637 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB ADDRESS PUSH2 0x562 DUP6 DUP8 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD PUSH2 0x6A1 DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF LOG4 PUSH8 0xC1578356C4AEB30B PREVRANDAO 0x2E SWAP9 EXTCODESIZE 0xB9 PUSH8 0x4A11FF8E288E051 CREATE ADDRESS 0xCA 0x2E 0xC7 0xBB DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "422:2051:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:37;;915:4;882:37;;;;;188:8:3;176:21;;;158:40;;146:2;131:18;882:37:2;;;;;;;;619:73;;650:42;619:73;;;;;-1:-1:-1;;;;;373:32:3;;;355:51;;343:2;328:18;619:73:2;209:203:3;448:90:2;;496:42;448:90;;778:38;;;;;-1:-1:-1;;;;;778:38:2;;;948:642;;;;;;:::i;:::-;;:::i;:::-;;;970:25:3;;;958:2;943:18;948:642:2;824:177:3;698:73:2;;729:42;698:73;;544:68;;;;;1596:875;;;;;;:::i;:::-;;:::i;948:642::-;1030:17;1063:9;;:48;;-1:-1:-1;;;1063:48:2;;-1:-1:-1;;;;;1089:10:2;1678:32:3;;1063:48:2;;;1660:51:3;1727:18;;;1720:34;;;1063:9:2;;;;:17;;1633:18:3;;1063:48:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1173:352:2;;;;;;;;650:42;1173:352;;729:42;1173:352;;;;915:4;1173:352;;;;1351:4;1173:352;;;;1384:15;1173:352;;;;;;;;;;1122:48;1173:352;;;;;;;;;;1548:35;;-1:-1:-1;;;1548:35:2;;:10;-1:-1:-1;;;;;1548:27:2;;;;:35;;1173:352;;1548:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1536:47;948:642;-1:-1:-1;;;948:642:2:o;1596:875::-;1705:16;1737:9;;:55;;-1:-1:-1;;;1737:55:2;;-1:-1:-1;;;;;1763:10:2;1678:32:3;;1737:55:2;;;1660:51:3;1727:18;;;1720:34;;;1737:9:2;;;;:17;;1633:18:3;;1737:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1855:368:2;;;;;;;;650:42;1855:368;;729:42;1855:368;;;;915:4;1855:368;;;;2034:4;1855:368;;;;2067:15;1855:368;;;;;;;;;;;;;;;;1803:49;1855:368;;;;2245:36;;-1:-1:-1;;;2245:36:2;;:10;-1:-1:-1;;;;;2245:28:2;;;;:36;;1855:368;;2245:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2234:47;;2307:15;2296:8;:26;2292:173;;;2338:9;;;:41;;-1:-1:-1;;;2338:41:2;;-1:-1:-1;;;;;2364:10:2;1678:32:3;;2338:41:2;;;1660:51:3;1727:18;;;1720:34;;;;2338:9:2;;;:17;;1633:18:3;;2338:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2393:9:2;;-1:-1:-1;;;;;2393:9:2;:18;2420:4;2427:26;2445:8;2427:15;:26;:::i;:::-;2393:61;;-1:-1:-1;;;;;;2393:61:2;;;;;;;-1:-1:-1;;;;;1678:32:3;;;2393:61:2;;;1660:51:3;1727:18;;;1720:34;1633:18;;2393:61:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2292:173;1727:744;1596:875;;;;:::o;639:180:3:-;698:6;751:2;739:9;730:7;726:23;722:32;719:52;;;767:1;764;757:12;719:52;-1:-1:-1;790:23:3;;639:180;-1:-1:-1;639:180:3:o;1233:248::-;1301:6;1309;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;-1:-1:-1;;1401:23:3;;;1471:2;1456:18;;;1443:32;;-1:-1:-1;1233:248:3:o;1765:277::-;1832:6;1885:2;1873:9;1864:7;1860:23;1856:32;1853:52;;;1901:1;1898;1891:12;1853:52;1933:9;1927:16;1986:5;1979:13;1972:21;1965:5;1962:32;1952:60;;2008:1;2005;1998:12;2640:288;2850:3;2835:19;;2863:59;2839:9;2904:6;2177:12;;-1:-1:-1;;;;;2173:21:3;;;2161:34;;2248:4;2237:16;;;2231:23;2227:32;;2211:14;;;2204:56;2313:4;2302:16;;;2296:23;2321:8;2292:38;2276:14;;;2269:62;2384:4;2373:16;;;2367:23;2363:32;;2347:14;;;2340:56;2445:4;2434:16;;;2428:23;2412:14;;;2405:47;2141:3;2490:16;;;2484:23;2468:14;;;2461:47;2557:4;2546:16;;;2540:23;2524:14;;;2517:47;2617:4;2606:16;;;2600:23;2596:32;2580:14;;2573:56;2047:588;2863:59;2640:288;;;;:::o;2933:184::-;3003:6;3056:2;3044:9;3035:7;3031:23;3027:32;3024:52;;;3072:1;3069;3062:12;3024:52;-1:-1:-1;3095:16:3;;2933:184;-1:-1:-1;2933:184:3:o;3704:225::-;3771:9;;;3792:11;;;3789:134;;;3845:10;3840:3;3836:20;3833:1;3826:31;3880:4;3877:1;3870:15;3908:4;3905:1;3898:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LINK()": "239",
								"WETH()": "238",
								"linkToken()": "2404",
								"poolFee()": "194",
								"routerAddress()": "261",
								"swapExactInputSingle(uint256)": "infinite",
								"swapExactOutputSingle(uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 538,
									"name": "PUSH",
									"source": 2,
									"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
								},
								{
									"begin": 544,
									"end": 612,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 544,
									"end": 612,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 816,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 778,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 650,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "8179D0B8345D9A87043069ABBDD4FFA86D784F9A"
								},
								{
									"begin": 778,
									"end": 816,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 778,
									"end": 816,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 942,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 942,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 942,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 926,
									"end": 942,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "152"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 2473,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfa467c1578356c4aeb30b442e983bb96704a11ff8e288e051f030ca2ec7bb8864736f6c63430008130033",
									".code": [
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "73BD43AD"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "73BD43AD"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "AD5C4648"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "C31C9C07"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "C4B69A18"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "89FE6AA"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "1B6B6D23"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "3268CC56"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "57970E93"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 2473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 882,
											"end": 919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 915,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 882,
											"end": 919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 882,
											"end": 919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 188,
											"end": 196,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 176,
											"end": 197,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 176,
											"end": 197,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 176,
											"end": 197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 158,
											"end": 198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 882,
											"end": 919,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 882,
											"end": 919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 919,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 919,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 619,
											"end": 692,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 619,
											"end": 692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 619,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "8179D0B8345D9A87043069ABBDD4FFA86D784F9A"
										},
										{
											"begin": 619,
											"end": 692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 619,
											"end": 692,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 619,
											"end": 692,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 619,
											"end": 692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 619,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 373,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 373,
											"end": 405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 373,
											"end": 405,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 355,
											"end": 406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 355,
											"end": 406,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 619,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 209,
											"end": 412,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 448,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 448,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 496,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
										},
										{
											"begin": 448,
											"end": 538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 448,
											"end": 538,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 778,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 778,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 778,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 778,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 778,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 778,
											"end": 816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 778,
											"end": 816,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 948,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 948,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 970,
											"end": 995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 970,
											"end": 995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 824,
											"end": 1001,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 771,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 698,
											"end": 771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 729,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "B4FBF271143F4FBF7B91A5DED31805E42B2208D6"
										},
										{
											"begin": 698,
											"end": 771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 771,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 544,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 544,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 612,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 544,
											"end": 612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 544,
											"end": 612,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1596,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1596,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1063,
											"end": 1080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1063,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1063,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "8179D0B8345D9A87043069ABBDD4FFA86D784F9A"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 729,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "B4FBF271143F4FBF7B91A5DED31805E42B2208D6"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 915,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1355,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1399,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414BF389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1558,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "414BF389"
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1548,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1548,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1548,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1583,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1590,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 948,
											"end": 1590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1773,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1737,
											"end": 1754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1737,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1737,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 2,
											"value": "8179D0B8345D9A87043069ABBDD4FFA86D784F9A"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 729,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "B4FBF271143F4FBF7B91A5DED31805E42B2208D6"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 915,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "BB8"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2038,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B67C433"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2255,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "DB3E2198"
										},
										{
											"begin": 2245,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2245,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2245,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2322,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2292,
											"end": 2465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2364,
											"end": 2374,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2355,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2338,
											"end": 2355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2338,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2445,
											"end": 2453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2442,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2427,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2453,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2427,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2393,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2465,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2292,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 639,
											"end": 819,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 639,
											"end": 819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 698,
											"end": 704,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 730,
											"end": 737,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 726,
											"end": 749,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 722,
											"end": 754,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 719,
											"end": 771,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 719,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 771,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 767,
											"end": 768,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 757,
											"end": 769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 719,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 639,
											"end": 819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 639,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1481,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1233,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1365,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1475,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 2042,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1765,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1856,
											"end": 1888,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1853,
											"end": 1905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1903,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1905,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1853,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1943,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 1992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1993,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 1994,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1952,
											"end": 2012,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2010,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2640,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2835,
											"end": 2854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2835,
											"end": 2854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2195,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2225,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2260,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2296,
											"end": 2319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2329,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 2292,
											"end": 2330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2290,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2331,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2389,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2361,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2396,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2449,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2434,
											"end": 2450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2482,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 2546,
											"end": 2562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2546,
											"end": 2562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2546,
											"end": 2562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2621,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2606,
											"end": 2622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2622,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2628,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2635,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2928,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3117,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3042,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3027,
											"end": 3059,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3076,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3024,
											"end": 3076,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3076,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3024,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3111,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3704,
											"end": 3929,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3704,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 3923,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3789,
											"end": 3923,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3840,
											"end": 3843,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3836,
											"end": 3856,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3877,
											"end": 3878,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3870,
											"end": 3885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3913,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/SwapToken/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"LINK()": "1b6b6d23",
							"WETH()": "ad5c4648",
							"linkToken()": "57970e93",
							"poolFee()": "089fe6aa",
							"routerAddress()": "3268cc56",
							"swapExactInputSingle(uint256)": "73bd43ad",
							"swapExactOutputSingle(uint256,uint256)": "c4b69a18",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapToken/swap.sol\":\"SingleSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SwapToken/swap.sol\":{\"keccak256\":\"0x83afae0ffd529ededf0a7c7f715e723cb4686f5dd3f0336c783d4c3b528a6ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a00689029877ee0e8e92fb4e1faac98eb7de8fb49feee47054491c7e85979d3\",\"dweb:/ipfs/QmbZhzNQVwLrxLy43vZfETy172itfgR7Tn9z13Ph5ojgDt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 164,
								"contract": "contracts/SwapToken/swap.sol:SingleSwap",
								"label": "linkToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)143"
							}
						],
						"types": {
							"t_contract(IERC20)143": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0",
							"usedErrors": []
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 114,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 16,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 114,
							"sourceUnit": 14,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "305:22:1"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:1"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "374:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "425:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 25,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "445:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "472:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "498:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "524:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "558:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 35,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "334:256:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "877:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 40,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 39,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 37,
														"src": "877:22:1"
													},
													"referencedDeclaration": 37,
													"src": "877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "943:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:1"
									},
									"scope": 113,
									"src": "851:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1002:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 47,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1022:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 49,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1049:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1075:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1101:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "968:164:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1436:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$57_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 60,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 59,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 57,
														"src": "1436:16:1"
													},
													"referencedDeclaration": 57,
													"src": "1436:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$57_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1496:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:1"
									},
									"scope": 113,
									"src": "1416:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 83,
									"members": [
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1562:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 67,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1587:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 69,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1613:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 71,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1633:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 73,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1660:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1686:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1713:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1746:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 81,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "1521:257:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2066:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 86,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 85,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "2066:23:1"
													},
													"referencedDeclaration": 83,
													"src": "2066:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2133:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:1"
									},
									"scope": 113,
									"src": "2039:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 103,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2192:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 93,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2212:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 95,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2239:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2265:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2292:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "2157:165:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2638:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$103_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 105,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 103,
														"src": "2638:17:1"
													},
													"referencedDeclaration": 103,
													"src": "2638:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$103_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2699:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:1"
									},
									"scope": 113,
									"src": "2617:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "280:2439:1",
							"usedErrors": []
						}
					],
					"src": "45:2675:1"
				},
				"id": 1
			},
			"contracts/SwapToken/swap.sol": {
				"ast": {
					"absolutePath": "contracts/SwapToken/swap.sol",
					"exportedSymbols": {
						"IERC20": [
							143
						],
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"SingleSwap": [
							293
						]
					},
					"id": 294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"id": 116,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 294,
							"sourceUnit": 114,
							"src": "78:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "IERC20",
							"nameLocation": "158:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "180:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "198:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "190:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:17:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "230:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:9:2"
									},
									"scope": 143,
									"src": "171:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "254:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "271:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "263:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "290:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "282:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:35:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "332:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:6:2"
									},
									"scope": 143,
									"src": "245:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "353:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "369:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "361:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "386:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "378:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:33:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "412:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "412:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:6:2"
									},
									"scope": 143,
									"src": "344:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 294,
							"src": "148:272:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SingleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "SingleSwap",
							"nameLocation": "431:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "3268cc56",
									"id": 146,
									"mutability": "constant",
									"name": "routerAddress",
									"nameLocation": "472:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 293,
									"src": "448:90:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 144,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "448:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
										"id": 145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "496:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 152,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "573:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 293,
									"src": "544:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$113",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 148,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 147,
											"name": "ISwapRouter",
											"nameLocations": [
												"544:11:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "544:11:2"
										},
										"referencedDeclaration": 113,
										"src": "544:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$113",
											"typeString": "contract ISwapRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 150,
												"name": "routerAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 146,
												"src": "598:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 149,
											"name": "ISwapRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 113,
											"src": "586:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
												"typeString": "type(contract ISwapRouter)"
											}
										},
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "586:26:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$113",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1b6b6d23",
									"id": 155,
									"mutability": "constant",
									"name": "LINK",
									"nameLocation": "643:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 293,
									"src": "619:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "619:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838313739443062383334354439613837303433303639614262644434464661383644373834663941",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "650:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8179D0b8345D9a87043069aBbdD4FFa86D784f9A"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ad5c4648",
									"id": 158,
									"mutability": "constant",
									"name": "WETH",
									"nameLocation": "722:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 293,
									"src": "698:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 156,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307842344642463237313134334634464266374239314135646564333138303565343262323230386436",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "729:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57970e93",
									"id": 164,
									"mutability": "mutable",
									"name": "linkToken",
									"nameLocation": "792:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 293,
									"src": "778:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$143",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 160,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 159,
											"name": "IERC20",
											"nameLocations": [
												"778:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 143,
											"src": "778:6:2"
										},
										"referencedDeclaration": 143,
										"src": "778:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$143",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 162,
												"name": "LINK",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 155,
												"src": "811:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 161,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 143,
											"src": "804:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$143_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "804:12:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$143",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "089fe6aa",
									"id": 167,
									"mutability": "constant",
									"name": "poolFee",
									"nameLocation": "905:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 293,
									"src": "882:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 165,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "882:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "915:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "940:2:2",
										"statements": []
									},
									"id": 171,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:2"
									},
									"scope": 293,
									"src": "926:16:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1053:537:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 183,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1089:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1081:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1081:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1081:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1102:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 178,
															"name": "linkToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "1063:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$143",
																"typeString": "contract IERC20"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1073:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "1063:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1063:48:2"
											},
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1164:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "1122:48:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 191,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 190,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1122:11:2",
																	"1134:22:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 37,
																"src": "1122:34:2"
															},
															"referencedDeclaration": 37,
															"src": "1122:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"arguments": [
														{
															"id": 195,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1248:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1280:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1307:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"id": 200,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1351:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SingleSwap_$293",
																		"typeString": "contract SingleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SingleSwap_$293",
																		"typeString": "contract SingleSwap"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1343:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1343:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1343:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 202,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1384:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1390:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1384:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 204,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1427:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1471:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1509:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 193,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1173:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1198:22:2",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "1173:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$37_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1239:7:2",
														"1270:8:2",
														"1302:3:2",
														"1332:9:2",
														"1374:8:2",
														"1417:8:2",
														"1453:16:2",
														"1490:17:2"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1173:352:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:403:2"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1536:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 212,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1576:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 210,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1548:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$113",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1559:16:2",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "1548:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1548:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1536:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1536:47:2"
											}
										]
									},
									"functionSelector": "73bd43ad",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "957:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "986:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "978:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:18:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1038:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1030:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:19:2"
									},
									"scope": 293,
									"src": "948:642:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1727:744:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 231,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1763:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1755:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 229,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1755:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1755:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1776:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 226,
															"name": "linkToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "1737:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$143",
																"typeString": "contract IERC20"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1747:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "1737:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1737:55:2"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1846:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "1803:49:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 239,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 238,
																"name": "ISwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"1803:11:2",
																	"1815:23:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 83,
																"src": "1803:35:2"
															},
															"referencedDeclaration": 83,
															"src": "1803:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 243,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1931:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1990:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"id": 248,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2034:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SingleSwap_$293",
																		"typeString": "contract SingleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SingleSwap_$293",
																		"typeString": "contract SingleSwap"
																	}
																],
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2026:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 246,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2026:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2026:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 250,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2067:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2073:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2067:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 252,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2111:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 253,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2155:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2207:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 241,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1880:23:2",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "1855:48:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$83_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1922:7:2",
														"1953:8:2",
														"1985:3:2",
														"2015:9:2",
														"2057:8:2",
														"2100:9:2",
														"2138:15:2",
														"2188:17:2"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1855:368:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1803:420:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2234:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 260,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2274:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 258,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2245:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$113",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2256:17:2",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "2245:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$83_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2245:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2234:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2234:47:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2296:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 265,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "2307:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2296:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "2292:173:2",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "2324:141:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 272,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 152,
																				"src": "2364:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$113",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$113",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2356:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 270,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2356:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2356:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 267,
																		"name": "linkToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "2338:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$143",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2348:7:2",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 142,
																	"src": "2338:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2338:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "2338:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 282,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2420:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SingleSwap_$293",
																					"typeString": "contract SingleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SingleSwap_$293",
																					"typeString": "contract SingleSwap"
																				}
																			],
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2412:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 280,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2412:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2412:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 284,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "2427:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 285,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "2445:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2427:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 277,
																		"name": "linkToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "2393:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$143",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2403:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 133,
																	"src": "2393:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2393:61:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "2393:61:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c4b69a18",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nameLocation": "1605:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1635:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1627:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "1654:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1646:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:44:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1713:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1705:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:18:2"
									},
									"scope": 293,
									"src": "1596:875:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 294,
							"src": "422:2051:2",
							"usedErrors": []
						}
					],
					"src": "32:2441:2"
				},
				"id": 2
			}
		}
	}
}