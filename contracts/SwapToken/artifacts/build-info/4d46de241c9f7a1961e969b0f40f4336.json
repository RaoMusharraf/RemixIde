{
	"id": "4d46de241c9f7a1961e969b0f40f4336",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SwapToken/swap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.8.19;\n\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract SingleSwap {\n    address public constant routerAddress =\n        0xE592427A0AEce92De3Edee1F18E0157C05861564;\n    ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress);\n// function swapExactInputSingle(uint256 amountIn) public returns (uint256 amountOut) {\n//     linkToken.approve(address(swapRouter), amountIn);\n//     ExactInputSingleParams memory params = ExactInputSingleParams({\n//         tokenIn: address(this),\n//         tokenOut: WETH,\n//         fee: poolFee,\n//         recipient: address(this),\n//         deadline: block.timestamp,\n//         amountIn: amountIn,\n//         amountOutMinimum: 0,\n//         sqrtPriceLimitX96: 0\n//     });\n//     amountOut = swapRouter.exactInputSingle(params);\n// }\n\n    function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver)\n        external\n        returns (uint256 amountOut)\n    {\n        // IERC20(FROG).transfer(address(this), amountIn);\n\n        IERC20(FROG).approve(address(swapRouter), (amountIn*100000));\n        // IERC20(FROG).approve(address(pancake), amountIn);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams({\n                tokenIn: FROG,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: Receiver,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/SwapToken/swap.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapToken/swap.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SwapToken/swap.sol\":{\"keccak256\":\"0x3c3bb2b4e9e7abe458821e45cb09ae02757f8429a02b3a9e3f2b914a297027df\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0e71fe51c95af722c951d3ded820321e7c37cab426aa6ffa69d6355b53879d52\",\"dweb:/ipfs/QmSqfLMWZGGkyodu54vWV7qRMqXAcodmqJ9sqgFToKpQn2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SingleSwap": {
					"abi": [
						{
							"inputs": [],
							"name": "routerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "poolFee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "FROG",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "WETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "Receiver",
									"type": "address"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SwapToken/swap.sol\":417:1989  contract SingleSwap {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SwapToken/swap.sol\":491:533  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n  0xe592427a0aece92de3edee1f18e0157c05861564\n    /* \"contracts/SwapToken/swap.sol\":539:607  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n  0x80\n  mstore\n    /* \"contracts/SwapToken/swap.sol\":417:1989  contract SingleSwap {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb6477a31e41e27dc2f2cbe4c2bbb37b5a6a34683d5cbca4a1a706df5525a2d30\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SwapToken/swap.sol\":417:1989  contract SingleSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3268cc56\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9b56d891\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SwapToken/swap.sol\":443:533  address public constant routerAddress =... */\n    tag_3:\n      tag_6\n        /* \"contracts/SwapToken/swap.sol\":491:533  0xE592427A0AEce92De3Edee1F18E0157C05861564 */\n      0xe592427a0aece92de3edee1f18e0157c05861564\n        /* \"contracts/SwapToken/swap.sol\":443:533  address public constant routerAddress =... */\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SwapToken/swap.sol\":443:533  address public constant routerAddress =... */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SwapToken/swap.sol\":1159:1987  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver)... */\n    tag_4:\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n        /* \"#utility.yul\":1117:1142   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x20\n        /* \"#utility.yul\":1090:1108   */\n      add\n        /* \"contracts/SwapToken/swap.sol\":1159:1987  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver)... */\n      tag_8\n        /* \"#utility.yul\":971:1148   */\n      jump\n        /* \"contracts/SwapToken/swap.sol\":539:607  ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress) */\n    tag_5:\n      tag_6\n      immutable(\"0xb6477a31e41e27dc2f2cbe4c2bbb37b5a6a34683d5cbca4a1a706df5525a2d30\")\n      dup2\n      jump\n        /* \"contracts/SwapToken/swap.sol\":1159:1987  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver)... */\n    tag_13:\n        /* \"contracts/SwapToken/swap.sol\":1299:1316  uint256 amountOut */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapToken/swap.sol\":1392:1412  IERC20(FROG).approve */\n      dup5\n      and\n      0x095ea7b3\n        /* \"contracts/SwapToken/swap.sol\":1421:1431  swapRouter */\n      immutable(\"0xb6477a31e41e27dc2f2cbe4c2bbb37b5a6a34683d5cbca4a1a706df5525a2d30\")\n        /* \"contracts/SwapToken/swap.sol\":1435:1450  amountIn*100000 */\n      tag_21\n        /* \"contracts/SwapToken/swap.sol\":1435:1443  amountIn */\n      dup9\n        /* \"contracts/SwapToken/swap.sol\":1444:1450  100000 */\n      0x0186a0\n        /* \"contracts/SwapToken/swap.sol\":1435:1450  amountIn*100000 */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/SwapToken/swap.sol\":1392:1452  IERC20(FROG).approve(address(swapRouter), (amountIn*100000)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1842:1874   */\n      swap1\n      swap3\n      and\n        /* \"contracts/SwapToken/swap.sol\":1392:1452  IERC20(FROG).approve(address(swapRouter), (amountIn*100000)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1824:1875   */\n      mstore\n        /* \"#utility.yul\":1891:1909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1884:1918   */\n      mstore\n        /* \"#utility.yul\":1797:1815   */\n      0x44\n      add\n        /* \"contracts/SwapToken/swap.sol\":1392:1452  IERC20(FROG).approve(address(swapRouter), (amountIn*100000)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      pop\n        /* \"contracts/SwapToken/swap.sol\":1575:1922  ISwapRouter... */\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      dup3\n      mstore\n      dup6\n      dup2\n      and\n      0x20\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n      0xffffff\n      dup11\n      dup2\n      and\n      dup5\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      dup8\n      dup5\n      and\n      0x60\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1781:1796  block.timestamp */\n      timestamp\n        /* \"contracts/SwapToken/swap.sol\":1575:1922  ISwapRouter... */\n      0x80\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      0xa0\n      dup8\n      add\n      dup14\n      dup2\n      mstore\n      0x00\n      0xc0\n      dup10\n      add\n      dup2\n      dup2\n      mstore\n      0xe0\n      dup11\n      add\n      swap2\n      dup3\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1945:1980  swapRouter.exactInputSingle(params) */\n      swap10\n      mload\n      shl(0xe0, 0x414bf389)\n      dup2\n      mstore\n        /* \"#utility.yul\":2494:2507   */\n      dup10\n      mload\n        /* \"#utility.yul\":2490:2512   */\n      dup10\n      and\n        /* \"contracts/SwapToken/swap.sol\":1945:1980  swapRouter.exactInputSingle(params) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2472:2513   */\n      mstore\n        /* \"#utility.yul\":2555:2579   */\n      swap7\n      mload\n        /* \"#utility.yul\":2551:2584   */\n      dup9\n      and\n        /* \"#utility.yul\":2529:2549   */\n      0x24\n      dup9\n      add\n        /* \"#utility.yul\":2522:2585   */\n      mstore\n        /* \"#utility.yul\":2627:2651   */\n      swap4\n      mload\n        /* \"#utility.yul\":2623:2662   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":2601:2621   */\n      0x44\n      dup7\n      add\n        /* \"#utility.yul\":2594:2663   */\n      mstore\n        /* \"#utility.yul\":2705:2729   */\n      swap1\n      mload\n        /* \"#utility.yul\":2701:2734   */\n      dup6\n      and\n        /* \"#utility.yul\":2679:2699   */\n      0x64\n      dup6\n      add\n        /* \"#utility.yul\":2672:2735   */\n      mstore\n        /* \"#utility.yul\":2773:2797   */\n      mload\n        /* \"#utility.yul\":2751:2771   */\n      0x84\n      dup5\n      add\n        /* \"#utility.yul\":2744:2798   */\n      mstore\n        /* \"#utility.yul\":2836:2860   */\n      swap1\n      mload\n        /* \"#utility.yul\":2814:2834   */\n      0xa4\n      dup4\n      add\n        /* \"#utility.yul\":2807:2861   */\n      mstore\n        /* \"#utility.yul\":2899:2923   */\n      swap4\n      mload\n        /* \"#utility.yul\":2877:2897   */\n      0xc4\n      dup3\n      add\n        /* \"#utility.yul\":2870:2924   */\n      mstore\n        /* \"#utility.yul\":2966:2990   */\n      swap3\n      mload\n        /* \"#utility.yul\":2962:2995   */\n      dup2\n      and\n        /* \"#utility.yul\":2940:2960   */\n      0xe4\n      dup5\n      add\n        /* \"#utility.yul\":2933:2996   */\n      mstore\n        /* \"contracts/SwapToken/swap.sol\":1575:1922  ISwapRouter... */\n      swap1\n      swap2\n        /* \"contracts/SwapToken/swap.sol\":1945:1955  swapRouter */\n      immutable(\"0xb6477a31e41e27dc2f2cbe4c2bbb37b5a6a34683d5cbca4a1a706df5525a2d30\")\n        /* \"contracts/SwapToken/swap.sol\":1945:1972  swapRouter.exactInputSingle */\n      swap1\n      swap2\n      and\n      swap1\n      0x414bf389\n      swap1\n        /* \"#utility.yul\":2406:2425   */\n      0x0104\n      add\n        /* \"contracts/SwapToken/swap.sol\":1945:1980  swapRouter.exactInputSingle(params) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/SwapToken/swap.sol\":1933:1980  amountOut = swapRouter.exactInputSingle(params) */\n      swap8\n        /* \"contracts/SwapToken/swap.sol\":1159:1987  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver)... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:395   */\n    tag_35:\n        /* \"#utility.yul\":290:310   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":339:370   */\n      dup2\n      and\n        /* \"#utility.yul\":329:371   */\n      dup2\n      eq\n        /* \"#utility.yul\":319:389   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":385:386   */\n      0x00\n        /* \"#utility.yul\":382:383   */\n      dup1\n        /* \"#utility.yul\":375:387   */\n      revert\n        /* \"#utility.yul\":319:389   */\n    tag_39:\n        /* \"#utility.yul\":222:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":400:966   */\n    tag_12:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":502:508   */\n      dup1\n        /* \"#utility.yul\":510:516   */\n      0x00\n        /* \"#utility.yul\":518:524   */\n      dup1\n        /* \"#utility.yul\":526:532   */\n      0x00\n        /* \"#utility.yul\":579:582   */\n      0xa0\n        /* \"#utility.yul\":567:576   */\n      dup7\n        /* \"#utility.yul\":558:565   */\n      dup9\n        /* \"#utility.yul\":554:577   */\n      sub\n        /* \"#utility.yul\":550:583   */\n      slt\n        /* \"#utility.yul\":547:600   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":593:594   */\n      dup1\n        /* \"#utility.yul\":586:598   */\n      revert\n        /* \"#utility.yul\":547:600   */\n    tag_41:\n        /* \"#utility.yul\":635:644   */\n      dup6\n        /* \"#utility.yul\":622:645   */\n      calldataload\n        /* \"#utility.yul\":685:693   */\n      0xffffff\n        /* \"#utility.yul\":678:683   */\n      dup2\n        /* \"#utility.yul\":674:694   */\n      and\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":664:695   */\n      eq\n        /* \"#utility.yul\":654:713   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":654:713   */\n    tag_42:\n        /* \"#utility.yul\":732:737   */\n      swap5\n      pop\n        /* \"#utility.yul\":784:786   */\n      0x20\n        /* \"#utility.yul\":769:787   */\n      dup7\n      add\n        /* \"#utility.yul\":756:788   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":807:845   */\n      tag_43\n        /* \"#utility.yul\":841:843   */\n      0x40\n        /* \"#utility.yul\":826:844   */\n      dup8\n      add\n        /* \"#utility.yul\":807:845   */\n      tag_35\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":797:845   */\n      swap3\n      pop\n        /* \"#utility.yul\":864:902   */\n      tag_44\n        /* \"#utility.yul\":898:900   */\n      0x60\n        /* \"#utility.yul\":887:896   */\n      dup8\n        /* \"#utility.yul\":883:901   */\n      add\n        /* \"#utility.yul\":864:902   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":854:902   */\n      swap2\n      pop\n        /* \"#utility.yul\":921:960   */\n      tag_45\n        /* \"#utility.yul\":955:958   */\n      0x80\n        /* \"#utility.yul\":944:953   */\n      dup8\n        /* \"#utility.yul\":940:959   */\n      add\n        /* \"#utility.yul\":921:960   */\n      tag_35\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":911:960   */\n      swap1\n      pop\n        /* \"#utility.yul\":400:966   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1380:1645   */\n    tag_22:\n        /* \"#utility.yul\":1453:1462   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1484:1493   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1501:1516   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1495:1517   */\n      dup5\n      eq\n        /* \"#utility.yul\":1481:1518   */\n      or\n        /* \"#utility.yul\":1471:1639   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1561:1571   */\n      0x4e487b71\n        /* \"#utility.yul\":1556:1559   */\n      0xe0\n        /* \"#utility.yul\":1552:1572   */\n      shl\n        /* \"#utility.yul\":1549:1550   */\n      0x00\n        /* \"#utility.yul\":1542:1573   */\n      mstore\n        /* \"#utility.yul\":1596:1600   */\n      0x11\n        /* \"#utility.yul\":1593:1594   */\n      0x04\n        /* \"#utility.yul\":1586:1601   */\n      mstore\n        /* \"#utility.yul\":1624:1628   */\n      0x24\n        /* \"#utility.yul\":1621:1622   */\n      0x00\n        /* \"#utility.yul\":1614:1629   */\n      revert\n        /* \"#utility.yul\":1471:1639   */\n    tag_49:\n        /* \"#utility.yul\":1380:1645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1929:2206   */\n    tag_28:\n        /* \"#utility.yul\":1996:2002   */\n      0x00\n        /* \"#utility.yul\":2049:2051   */\n      0x20\n        /* \"#utility.yul\":2037:2046   */\n      dup3\n        /* \"#utility.yul\":2028:2035   */\n      dup5\n        /* \"#utility.yul\":2024:2047   */\n      sub\n        /* \"#utility.yul\":2020:2052   */\n      slt\n        /* \"#utility.yul\":2017:2069   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2017:2069   */\n    tag_52:\n        /* \"#utility.yul\":2097:2106   */\n      dup2\n        /* \"#utility.yul\":2091:2107   */\n      mload\n        /* \"#utility.yul\":2150:2155   */\n      dup1\n        /* \"#utility.yul\":2143:2156   */\n      iszero\n        /* \"#utility.yul\":2136:2157   */\n      iszero\n        /* \"#utility.yul\":2129:2134   */\n      dup2\n        /* \"#utility.yul\":2126:2158   */\n      eq\n        /* \"#utility.yul\":2116:2176   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":2172:2173   */\n      0x00\n        /* \"#utility.yul\":2169:2170   */\n      dup1\n        /* \"#utility.yul\":2162:2174   */\n      revert\n        /* \"#utility.yul\":2116:2176   */\n    tag_53:\n        /* \"#utility.yul\":2195:2200   */\n      swap4\n        /* \"#utility.yul\":1929:2206   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3007:3191   */\n    tag_34:\n        /* \"#utility.yul\":3077:3083   */\n      0x00\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3118:3127   */\n      dup3\n        /* \"#utility.yul\":3109:3116   */\n      dup5\n        /* \"#utility.yul\":3105:3128   */\n      sub\n        /* \"#utility.yul\":3101:3133   */\n      slt\n        /* \"#utility.yul\":3098:3150   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":3146:3147   */\n      0x00\n        /* \"#utility.yul\":3143:3144   */\n      dup1\n        /* \"#utility.yul\":3136:3148   */\n      revert\n        /* \"#utility.yul\":3098:3150   */\n    tag_56:\n      pop\n        /* \"#utility.yul\":3169:3185   */\n      mload\n      swap2\n        /* \"#utility.yul\":3007:3191   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203dc1d3d92f26bc4b77ba1a8ce147eac4e099783dd042b60b816d38c9035707fd64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405273e592427a0aece92de3edee1f18e0157c0586156460805234801561002857600080fd5b506080516103c16100506000396000818160a40152818160d9015261021f01526103c16000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633268cc56146100465780639b56d8911461007e578063c31c9c071461009f575b600080fd5b61006173e592427a0aece92de3edee1f18e0157c0586156481565b6040516001600160a01b0390911681526020015b60405180910390f35b61009161008c3660046102b6565b6100c6565b604051908152602001610075565b6100617f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160a01b03841663095ea7b37f000000000000000000000000000000000000000000000000000000000000000061010588620186a061031e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101749190610349565b5060408051610100810182526001600160a01b0386811682528581166020830190815262ffffff8a811684860190815287841660608601908152426080870190815260a087018d8152600060c0890181815260e08a01918252995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610372565b979650505050505050565b80356001600160a01b03811681146102b157600080fd5b919050565b600080600080600060a086880312156102ce57600080fd5b853562ffffff811681146102e157600080fd5b9450602086013593506102f66040870161029a565b92506103046060870161029a565b91506103126080870161029a565b90509295509295909350565b808202811582820484141761034357634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561035b57600080fd5b8151801515811461036b57600080fd5b9392505050565b60006020828403121561038457600080fd5b505191905056fea26469706673582212203dc1d3d92f26bc4b77ba1a8ce147eac4e099783dd042b60b816d38c9035707fd64736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x3C1 PUSH2 0x50 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xA4 ADD MSTORE DUP2 DUP2 PUSH1 0xD9 ADD MSTORE PUSH2 0x21F ADD MSTORE PUSH2 0x3C1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3268CC56 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x9B56D891 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST PUSH2 0x61 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH4 0x95EA7B3 PUSH32 0x0 PUSH2 0x105 DUP9 PUSH3 0x186A0 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF DUP11 DUP2 AND DUP5 DUP7 ADD SWAP1 DUP2 MSTORE DUP8 DUP5 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP14 DUP2 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD SWAP2 DUP3 MSTORE SWAP10 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE DUP10 MLOAD DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP7 MLOAD DUP9 AND PUSH1 0x24 DUP9 ADD MSTORE SWAP4 MLOAD SWAP1 SWAP5 AND PUSH1 0x44 DUP7 ADD MSTORE SWAP1 MLOAD DUP6 AND PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE SWAP1 MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SWAP4 MLOAD PUSH1 0xC4 DUP3 ADD MSTORE SWAP3 MLOAD DUP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x372 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2F6 PUSH1 0x40 DUP8 ADD PUSH2 0x29A JUMP JUMPDEST SWAP3 POP PUSH2 0x304 PUSH1 0x60 DUP8 ADD PUSH2 0x29A JUMP JUMPDEST SWAP2 POP PUSH2 0x312 PUSH1 0x80 DUP8 ADD PUSH2 0x29A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xC1 0xD3 0xD9 0x2F 0x26 0xBC 0x4B PUSH24 0xBA1A8CE147EAC4E099783DD042B60B816D38C9035707FD64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "417:1572:2:-:0;;;491:42;539:68;;417:1572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@routerAddress_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapExactInputSingle_206": {
									"entryPoint": 198,
									"id": 206,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@swapRouter_151": {
									"entryPoint": null,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint24t_uint256t_addresst_addresst_address": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3193:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "271:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "281:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "290:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "281:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "373:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "385:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "332:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "343:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "358:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "363:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "354:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "354:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "367:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "350:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "350:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "339:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "339:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "329:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "329:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:50:3"
															},
															"nodeType": "YulIf",
															"src": "319:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "250:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "261:5:3",
														"type": ""
													}
												],
												"src": "222:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "537:429:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "584:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "593:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "586:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "586:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "558:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "567:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "554:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "554:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "550:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:33:3"
															},
															"nodeType": "YulIf",
															"src": "547:53:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "609:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "622:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "613:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "697:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "709:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "667:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "678:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "685:8:3",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "674:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "674:20:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "664:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "664:31:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "657:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:39:3"
															},
															"nodeType": "YulIf",
															"src": "654:59:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "722:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "732:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "746:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "773:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "784:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "756:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "797:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "830:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "841:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "826:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "807:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:38:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "797:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "854:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "883:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "864:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:38:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "854:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:49:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "944:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "955:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "921:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:39:3"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24t_uint256t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "471:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "482:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "494:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "502:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "510:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "518:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "526:6:3",
														"type": ""
													}
												],
												"src": "400:566:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1072:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1082:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1094:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1090:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1082:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1124:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1135:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1117:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1041:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1052:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1063:4:3",
														"type": ""
													}
												],
												"src": "971:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1283:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1295:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1283:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1325:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1340:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1356:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1361:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1352:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1352:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1365:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1348:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1348:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1336:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1253:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1264:4:3",
														"type": ""
													}
												],
												"src": "1153:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1432:213:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1442:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1457:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1460:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1442:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1556:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1561:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1552:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1552:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1542:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1593:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1596:4:3",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1586:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1586:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1586:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1624:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1614:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1614:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1491:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1484:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1484:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1498:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "1505:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1514:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1501:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1501:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1495:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1495:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1481:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:37:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:45:3"
															},
															"nodeType": "YulIf",
															"src": "1471:168:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1411:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1414:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1420:7:3",
														"type": ""
													}
												],
												"src": "1380:265:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1789:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1801:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1789:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1862:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1867:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1858:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1858:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1871:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1854:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1895:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1906:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1891:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1891:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1911:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1884:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1884:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1740:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1751:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1759:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1770:4:3",
														"type": ""
													}
												],
												"src": "1650:274:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2007:199:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2053:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2028:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2024:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:32:3"
															},
															"nodeType": "YulIf",
															"src": "2017:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2078:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2097:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2091:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2082:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2160:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2169:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2172:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2162:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2162:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2162:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2129:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2150:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2143:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2143:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2136:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2136:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2126:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2126:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:40:3"
															},
															"nodeType": "YulIf",
															"src": "2116:60:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2185:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2195:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2185:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1973:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1984:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1996:6:3",
														"type": ""
													}
												],
												"src": "1929:277:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2388:614:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2398:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2410:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2421:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2406:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2398:4:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2452:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2457:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2461:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2438:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2500:6:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2494:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2494:13:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2509:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2490:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2490:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2533:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2544:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2529:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2529:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "2565:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2573:4:3",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2561:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2561:17:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2555:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2555:24:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2581:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2551:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2551:33:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:63:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:63:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "2637:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2645:4:3",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2633:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2633:17:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2627:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2627:24:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2653:8:3",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:39:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2594:69:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2683:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "2715:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2723:4:3",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2711:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2711:17:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2705:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2705:24:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2731:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2701:33:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:63:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2672:63:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2766:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2751:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2783:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2791:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2779:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2779:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2773:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2773:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:54:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:54:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2829:4:3",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2814:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2846:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2854:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2842:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2842:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2836:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:54:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2807:54:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2881:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:4:3",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2877:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2877:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2909:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2917:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2905:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2905:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2899:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:54:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2870:54:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2944:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2955:4:3",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2940:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "2976:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2984:4:3",
																								"type": "",
																								"value": "0xe0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2972:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2972:17:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2966:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2966:24:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2992:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:33:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2933:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2933:63:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2933:63:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2357:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2368:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2379:4:3",
														"type": ""
													}
												],
												"src": "2211:791:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3088:103:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3134:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3143:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3146:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3136:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3136:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3136:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3109:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3118:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:32:3"
															},
															"nodeType": "YulIf",
															"src": "3098:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3175:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3169:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3054:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3065:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3077:6:3",
														"type": ""
													}
												],
												"src": "3007:184:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint24t_uint256t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$113__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), and(mload(add(value0, 0xe0)), _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"151": [
									{
										"length": 32,
										"start": 164
									},
									{
										"length": 32,
										"start": 217
									},
									{
										"length": 32,
										"start": 543
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633268cc56146100465780639b56d8911461007e578063c31c9c071461009f575b600080fd5b61006173e592427a0aece92de3edee1f18e0157c0586156481565b6040516001600160a01b0390911681526020015b60405180910390f35b61009161008c3660046102b6565b6100c6565b604051908152602001610075565b6100617f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160a01b03841663095ea7b37f000000000000000000000000000000000000000000000000000000000000000061010588620186a061031e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101749190610349565b5060408051610100810182526001600160a01b0386811682528581166020830190815262ffffff8a811684860190815287841660608601908152426080870190815260a087018d8152600060c0890181815260e08a01918252995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610372565b979650505050505050565b80356001600160a01b03811681146102b157600080fd5b919050565b600080600080600060a086880312156102ce57600080fd5b853562ffffff811681146102e157600080fd5b9450602086013593506102f66040870161029a565b92506103046060870161029a565b91506103126080870161029a565b90509295509295909350565b808202811582820484141761034357634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561035b57600080fd5b8151801515811461036b57600080fd5b9392505050565b60006020828403121561038457600080fd5b505191905056fea26469706673582212203dc1d3d92f26bc4b77ba1a8ce147eac4e099783dd042b60b816d38c9035707fd64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3268CC56 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x9B56D891 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST PUSH2 0x61 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH4 0x95EA7B3 PUSH32 0x0 PUSH2 0x105 DUP9 PUSH3 0x186A0 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF DUP11 DUP2 AND DUP5 DUP7 ADD SWAP1 DUP2 MSTORE DUP8 DUP5 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP14 DUP2 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD SWAP2 DUP3 MSTORE SWAP10 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE DUP10 MLOAD DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP7 MLOAD DUP9 AND PUSH1 0x24 DUP9 ADD MSTORE SWAP4 MLOAD SWAP1 SWAP5 AND PUSH1 0x44 DUP7 ADD MSTORE SWAP1 MLOAD DUP6 AND PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE SWAP1 MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SWAP4 MLOAD PUSH1 0xC4 DUP3 ADD MSTORE SWAP3 MLOAD DUP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x372 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2F6 PUSH1 0x40 DUP8 ADD PUSH2 0x29A JUMP JUMPDEST SWAP3 POP PUSH2 0x304 PUSH1 0x60 DUP8 ADD PUSH2 0x29A JUMP JUMPDEST SWAP2 POP PUSH2 0x312 PUSH1 0x80 DUP8 ADD PUSH2 0x29A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xC1 0xD3 0xD9 0x2F 0x26 0xBC 0x4B PUSH24 0xBA1A8CE147EAC4E099783DD042B60B816D38C9035707FD64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "417:1572:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;443:90;;491:42;443:90;;;;;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;443:90:2;;;;;;;;1159:828;;;;;;:::i;:::-;;:::i;:::-;;;1117:25:3;;;1105:2;1090:18;1159:828:2;971:177:3;539:68:2;;;;;1159:828;1299:17;-1:-1:-1;;;;;1392:20:2;;;1421:10;1435:15;:8;1444:6;1435:15;:::i;:::-;1392:60;;-1:-1:-1;;;;;;1392:60:2;;;;;;;-1:-1:-1;;;;;1842:32:3;;;1392:60:2;;;1824:51:3;1891:18;;;1884:34;1797:18;;1392:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1575:347:2;;;;;;;;-1:-1:-1;;;;;1575:347:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:15;1575:347;;;;;;;;;;;;-1:-1:-1;1575:347:2;;;;;;;;;;;;1945:35;;-1:-1:-1;;;1945:35:2;;2494:13:3;;2490:22;;1945:35:2;;;2472:41:3;2555:24;;2551:33;;2529:20;;;2522:63;2627:24;;2623:39;;;2601:20;;;2594:69;2705:24;;2701:33;;2679:20;;;2672:63;2773:24;2751:20;;;2744:54;2836:24;;2814:20;;;2807:54;2899:24;;2877:20;;;2870:54;2966:24;;2962:33;;2940:20;;;2933:63;1575:347:2;;1945:10;:27;;;;;;2406:19:3;;1945:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1933:47;1159:828;-1:-1:-1;;;;;;;1159:828:2:o;222:173:3:-;290:20;;-1:-1:-1;;;;;339:31:3;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:566::-;494:6;502;510;518;526;579:3;567:9;558:7;554:23;550:33;547:53;;;596:1;593;586:12;547:53;635:9;622:23;685:8;678:5;674:20;667:5;664:31;654:59;;709:1;706;699:12;654:59;732:5;-1:-1:-1;784:2:3;769:18;;756:32;;-1:-1:-1;807:38:3;841:2;826:18;;807:38;:::i;:::-;797:48;;864:38;898:2;887:9;883:18;864:38;:::i;:::-;854:48;;921:39;955:3;944:9;940:19;921:39;:::i;:::-;911:49;;400:566;;;;;;;;:::o;1380:265::-;1453:9;;;1484;;1501:15;;;1495:22;;1481:37;1471:168;;1561:10;1556:3;1552:20;1549:1;1542:31;1596:4;1593:1;1586:15;1624:4;1621:1;1614:15;1471:168;1380:265;;;;:::o;1929:277::-;1996:6;2049:2;2037:9;2028:7;2024:23;2020:32;2017:52;;;2065:1;2062;2055:12;2017:52;2097:9;2091:16;2150:5;2143:13;2136:21;2129:5;2126:32;2116:60;;2172:1;2169;2162:12;2116:60;2195:5;1929:277;-1:-1:-1;;;1929:277:3:o;3007:184::-;3077:6;3130:2;3118:9;3109:7;3105:23;3101:32;3098:52;;;3146:1;3143;3136:12;3098:52;-1:-1:-1;3169:16:3;;3007:184;-1:-1:-1;3007:184:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "192200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"routerAddress()": "183",
								"swapExactInputSingle(uint24,uint256,address,address,address)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 533,
									"name": "PUSH",
									"source": 2,
									"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
								},
								{
									"begin": 539,
									"end": 607,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 539,
									"end": 607,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "151"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 1989,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dc1d3d92f26bc4b77ba1a8ce147eac4e099783dd042b60b816d38c9035707fd64736f6c63430008130033",
									".code": [
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "3268CC56"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "9B56D891"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "C31C9C07"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 417,
											"end": 1989,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 443,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "E592427A0AECE92DE3EDEE1F18E0157C05861564"
										},
										{
											"begin": 443,
											"end": 533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 443,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 443,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 533,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1159,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1159,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 971,
											"end": 1148,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 607,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 539,
											"end": 607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 539,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 539,
											"end": 607,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 539,
											"end": 607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 607,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1435,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1435,
											"end": 1443,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "PUSH",
											"source": 2,
											"value": "186A0"
										},
										{
											"begin": 1435,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1435,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1450,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1435,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1392,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1392,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414BF389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2507,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2507,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2584,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2584,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2651,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2662,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2601,
											"end": 2621,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2601,
											"end": 2621,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2601,
											"end": 2621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2734,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2699,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2679,
											"end": 2699,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2735,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2771,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2751,
											"end": 2771,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "A4"
										},
										{
											"begin": 2814,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "PUSH",
											"source": 3,
											"value": "C4"
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 2990,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 2990,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2995,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "PUSH",
											"source": 3,
											"value": "E4"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1922,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1955,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "414BF389"
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2425,
											"name": "PUSH",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2406,
											"end": 2425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1945,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1945,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1980,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1987,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1159,
											"end": 1987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 222,
											"end": 395,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 222,
											"end": 395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 290,
											"end": 310,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 339,
											"end": 370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 339,
											"end": 370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 329,
											"end": 371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 329,
											"end": 371,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 385,
											"end": 386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 387,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 319,
											"end": 389,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 395,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 222,
											"end": 395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 526,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 582,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 567,
											"end": 576,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 558,
											"end": 565,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 554,
											"end": 577,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 550,
											"end": 583,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 547,
											"end": 600,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 547,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 547,
											"end": 600,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 586,
											"end": 598,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 547,
											"end": 600,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 547,
											"end": 600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 622,
											"end": 645,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 685,
											"end": 693,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 678,
											"end": 683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 674,
											"end": 694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 664,
											"end": 695,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 654,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 654,
											"end": 713,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 654,
											"end": 713,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 654,
											"end": 713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 732,
											"end": 737,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 784,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 787,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 769,
											"end": 787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 826,
											"end": 844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 807,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 807,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 845,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 807,
											"end": 845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 797,
											"end": 845,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 797,
											"end": 845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 864,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 864,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 864,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 864,
											"end": 902,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 864,
											"end": 902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 854,
											"end": 902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 854,
											"end": 902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 955,
											"end": 958,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 940,
											"end": 959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 921,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 921,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 921,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 911,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 911,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 400,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1645,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1516,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1517,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1518,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1471,
											"end": 1639,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1571,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1556,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1586,
											"end": 1601,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1628,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1629,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1639,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1471,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1645,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2206,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1929,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2052,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2157,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2116,
											"end": 2176,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2172,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2176,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2116,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2200,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2206,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1929,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3007,
											"end": 3191,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3007,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3116,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3150,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3098,
											"end": 3150,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3150,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3098,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3185,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3169,
											"end": 3185,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3007,
											"end": 3191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3007,
											"end": 3191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/SwapToken/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"routerAddress()": "3268cc56",
							"swapExactInputSingle(uint24,uint256,address,address,address)": "9b56d891",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"FROG\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Receiver\",\"type\":\"address\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapToken/swap.sol\":\"SingleSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SwapToken/swap.sol\":{\"keccak256\":\"0x3c3bb2b4e9e7abe458821e45cb09ae02757f8429a02b3a9e3f2b914a297027df\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0e71fe51c95af722c951d3ded820321e7c37cab426aa6ffa69d6355b53879d52\",\"dweb:/ipfs/QmSqfLMWZGGkyodu54vWV7qRMqXAcodmqJ9sqgFToKpQn2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0",
							"usedErrors": []
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 114,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 16,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 114,
							"sourceUnit": 14,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "305:22:1"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:1"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "374:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "425:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 25,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "445:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "472:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "498:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "524:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 37,
											"src": "558:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 35,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "334:256:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "877:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 40,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 39,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 37,
														"src": "877:22:1"
													},
													"referencedDeclaration": 37,
													"src": "877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "943:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:1"
									},
									"scope": 113,
									"src": "851:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1002:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 47,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1022:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 49,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1049:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1075:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1101:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "968:164:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1436:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$57_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 60,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 59,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 57,
														"src": "1436:16:1"
													},
													"referencedDeclaration": 57,
													"src": "1436:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$57_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1496:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:1"
									},
									"scope": 113,
									"src": "1416:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 83,
									"members": [
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1562:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 67,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1587:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 69,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1613:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 71,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1633:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 73,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1660:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1686:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1713:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "1746:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 81,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "1521:257:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2066:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 86,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 85,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "2066:23:1"
													},
													"referencedDeclaration": 83,
													"src": "2066:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$83_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2133:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:1"
									},
									"scope": 113,
									"src": "2039:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 103,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2192:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 93,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2212:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 95,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2239:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2265:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 103,
											"src": "2292:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:1",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "2157:165:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2638:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$103_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 105,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 103,
														"src": "2638:17:1"
													},
													"referencedDeclaration": 103,
													"src": "2638:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$103_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2699:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:1"
									},
									"scope": 113,
									"src": "2617:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "280:2439:1",
							"usedErrors": []
						}
					],
					"src": "45:2675:1"
				},
				"id": 1
			},
			"contracts/SwapToken/swap.sol": {
				"ast": {
					"absolutePath": "contracts/SwapToken/swap.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						],
						"ISwapRouter": [
							113
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"SingleSwap": [
							207
						]
					},
					"id": 208,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 208,
							"sourceUnit": 114,
							"src": "72:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "153:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "175:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "193:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "185:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:17:2"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "225:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:9:2"
									},
									"scope": 142,
									"src": "166:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "249:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "266:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "258:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "285:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "277:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:35:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "327:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:6:2"
									},
									"scope": 142,
									"src": "240:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "348:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "381:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "373:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:33:2"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "407:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:6:2"
									},
									"scope": 142,
									"src": "339:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 208,
							"src": "143:272:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SingleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 207,
							"linearizedBaseContracts": [
								207
							],
							"name": "SingleSwap",
							"nameLocation": "426:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "3268cc56",
									"id": 145,
									"mutability": "constant",
									"name": "routerAddress",
									"nameLocation": "467:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "443:90:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 143,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "491:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 151,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "568:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "539:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$113",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 147,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 146,
											"name": "ISwapRouter",
											"nameLocations": [
												"539:11:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "539:11:2"
										},
										"referencedDeclaration": 113,
										"src": "539:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$113",
											"typeString": "contract ISwapRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 149,
												"name": "routerAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 145,
												"src": "593:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 148,
											"name": "ISwapRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 113,
											"src": "581:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
												"typeString": "type(contract ISwapRouter)"
											}
										},
										"id": 150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "581:26:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$113",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1322:665:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 172,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "1421:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$113",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1413:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1413:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1413:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 174,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "1435:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "313030303030",
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1444:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000_by_1",
																			"typeString": "int_const 100000"
																		},
																		"value": "100000"
																	},
																	"src": "1435:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1434:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 167,
																	"name": "FROG",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1399:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 166,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "1392:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1392:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1405:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "1392:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1392:60:2"
											},
											{
												"assignments": [
													184
												],
												"declarations": [
													{
														"constant": false,
														"id": 184,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1566:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "1524:48:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 183,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 182,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1524:11:2",
																	"1536:22:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 37,
																"src": "1524:34:2"
															},
															"referencedDeclaration": 37,
															"src": "1524:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "FROG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1650:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1682:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1709:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 190,
															"name": "Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1745:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 191,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1781:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1787:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1781:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 193,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1824:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1868:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 185,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1575:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$113_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1600:22:2",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "1575:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$37_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1641:7:2",
														"1672:8:2",
														"1704:3:2",
														"1734:9:2",
														"1771:8:2",
														"1814:8:2",
														"1850:16:2",
														"1887:17:2"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1575:347:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1524:398:2"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1933:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 201,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "1973:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$37_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 199,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1945:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$113",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1956:16:2",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "1945:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1945:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1933:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1933:47:2"
											}
										]
									},
									"functionSelector": "9b56d891",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "1168:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "1196:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1189:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 152,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1212:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1204:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "FROG",
												"nameLocation": "1229:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1221:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "WETH",
												"nameLocation": "1242:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1234:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "Receiver",
												"nameLocation": "1255:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1247:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:76:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1307:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1299:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:19:2"
									},
									"scope": 207,
									"src": "1159:828:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 208,
							"src": "417:1572:2",
							"usedErrors": []
						}
					],
					"src": "45:1944:2"
				},
				"id": 2
			}
		}
	}
}