{
	"id": "9922fbb49dca83a732b2fb9b1fd628cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking/SwapTokenV2Router.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.8.19;\npragma abicoder v2;\n\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\ncontract SwapExamples {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts willdetail how to inherit the swap router safely.\n\n    ISwapRouter public immutable swapRouter;\n\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public constant WETH9 = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889;\n    // address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n\n    // For this example, we will set the pool fee to 0.3%.\n    // uint24 public constant poolFee = 3000;\n\n    constructor(ISwapRouter _swapRouter) {\n        swapRouter = _swapRouter;\n    }\n\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(FROG, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(FROG, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: FROG,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: Receiver,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapExactOutputSingle(uint24 poolFee,uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: DAI,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\n            TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c3ced1b526098016f36ad33c525546d7eb21fedae582db8958462334b8af90764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c3ced1b526098016f36ad33c525546d7eb21fedae582db8958462334b8af90764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x3CED1B526098016F36AD33C525546D7EB21FEDAE582DB8958462334B8A 0xF9 SMOD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c3ced1b526098016f36ad33c525546d7eb21fedae582db8958462334b8af90764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x3CED1B526098016F36AD33C525546D7EB21FEDAE582DB8958462334B8A 0xF9 SMOD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "129:2408:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c3ced1b526098016f36ad33c525546d7eb21fedae582db8958462334b8af90764736f6c63430008130033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/Staking/SwapTokenV2Router.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking/SwapTokenV2Router.sol": {
				"SwapExamples": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "_swapRouter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "poolFee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "FROG",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "WETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "Receiver",
									"type": "address"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "poolFee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"swapExactInputSingle(uint24,uint256,address,address,address)": {
								"details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
								"params": {
									"amountIn": "The exact amount of DAI that will be swapped for WETH9."
								},
								"returns": {
									"amountOut": "The amount of WETH9 received."
								}
							},
							"swapExactOutputSingle(uint24,uint256,uint256)": {
								"details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
								"params": {
									"amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
									"amountOut": "The exact amount of WETH9 to receive from the swap."
								},
								"returns": {
									"amountIn": "The amount of DAI actually spent in the swap."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking/SwapTokenV2Router.sol\":232:5218  contract SwapExamples {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Staking/SwapTokenV2Router.sol\":1184:1262  constructor(ISwapRouter _swapRouter) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Staking/SwapTokenV2Router.sol\":1244:1255  _swapRouter */\n  dup1\n    /* \"contracts/Staking/SwapTokenV2Router.sol\":1231:1255  swapRouter = _swapRouter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Staking/SwapTokenV2Router.sol\":1184:1262  constructor(ISwapRouter _swapRouter) {... */\n  pop\n    /* \"contracts/Staking/SwapTokenV2Router.sol\":232:5218  contract SwapExamples {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  dup1\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staking/SwapTokenV2Router.sol\":232:5218  contract SwapExamples {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":232:5218  contract SwapExamples {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9b56d891\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdc236ce6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":915:989  address public constant WETH9 = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889 */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":1732:2964  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver) external returns (uint256 amountOut) {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":691:730  ISwapRouter public immutable swapRouter */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3592:5216  function swapExactOutputSingle(uint24 poolFee,uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":837:909  address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":915:989  address public constant WETH9 = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889 */\n    tag_9:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":947:989  0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889 */\n      0x9c3c9283d3e44854697cd22d3faa240cfb032889\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":915:989  address public constant WETH9 = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889 */\n      dup2\n      jump\t// out\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":1732:2964  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver) external returns (uint256 amountOut) {... */\n    tag_15:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":1856:1873  uint256 amountOut */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2001:2075  TransferHelper.safeTransferFrom(FROG, msg.sender, address(this), amountIn) */\n      tag_31\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2033:2037  FROG */\n      dup5\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2039:2049  msg.sender */\n      caller\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2059:2063  this */\n      address\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2066:2074  amountIn */\n      dup9\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2001:2032  TransferHelper.safeTransferFrom */\n      tag_32\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2001:2075  TransferHelper.safeTransferFrom(FROG, msg.sender, address(this), amountIn) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2130:2193  TransferHelper.safeApprove(FROG, address(swapRouter), amountIn) */\n      tag_33\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2157:2161  FROG */\n      dup5\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2171:2181  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2184:2192  amountIn */\n      dup8\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2130:2156  TransferHelper.safeApprove */\n      tag_34\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2130:2193  TransferHelper.safeApprove(FROG, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_33:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2441:2489  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2566:2570  FROG */\n      dup7\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2598:2602  WETH */\n      dup6\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2625:2632  poolFee */\n      dup9\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2661:2669  Receiver */\n      dup5\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2697:2712  block.timestamp */\n      timestamp\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2740:2748  amountIn */\n      dup8\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2784:2785  0 */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2822:2823  0 */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2504:2838  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2441:2838  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2922:2932  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2922:2949  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2950:2956  params */\n      dup3\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2922:2957  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":2910:2957  amountOut = swapRouter.exactInputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":1875:2964  {... */\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":1732:2964  function swapExactInputSingle(uint24 poolFee,uint256 amountIn,address FROG,address WETH,address Receiver) external returns (uint256 amountOut) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":691:730  ISwapRouter public immutable swapRouter */\n    tag_19:\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n      dup2\n      jump\t// out\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3592:5216  function swapExactOutputSingle(uint24 poolFee,uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n    tag_25:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3700:3716  uint256 amountIn */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3794:3874  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum) */\n      tag_42\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":867:909  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3831:3841  msg.sender */\n      caller\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3851:3855  this */\n      address\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3858:3873  amountInMaximum */\n      dup6\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3794:3825  TransferHelper.safeTransferFrom */\n      tag_32\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3794:3874  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4100:4169  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      tag_43\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":867:909  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4140:4150  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4153:4168  amountInMaximum */\n      dup5\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4100:4126  TransferHelper.safeApprove */\n      tag_34\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4100:4169  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4180:4229  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":867:909  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":947:989  0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889 */\n      0x9c3c9283d3e44854697cd22d3faa240cfb032889\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4366:4373  poolFee */\n      dup7\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4402:4412  msg.sender */\n      caller\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4440:4455  block.timestamp */\n      timestamp\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4484:4493  amountOut */\n      dup6\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4528:4543  amountInMaximum */\n      dup5\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4580:4581  0 */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4244:4596  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4180:4596  ISwapRouter.ExactOutputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4720:4730  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4720:4748  swapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb3e2198\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4749:4755  params */\n      dup3\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4720:4756  swapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_48:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":4709:4756  amountIn = swapRouter.exactOutputSingle(params) */\n      swap2\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5027:5042  amountInMaximum */\n      dup3\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5016:5024  amountIn */\n      dup3\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5016:5042  amountIn < amountInMaximum */\n      lt\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5012:5210  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5058:5113  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      tag_50\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":867:909  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5098:5108  swapRouter */\n      immutable(\"0x5fe7a1a414abe991afbda9a853d967f992c558068728d0e3ee148ed2656bb10a\")\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5111:5112  0 */\n      0x00\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5058:5084  TransferHelper.safeApprove */\n      tag_34\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5058:5113  TransferHelper.safeApprove(DAI, address(swapRouter), 0) */\n      jump\t// in\n    tag_50:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5127:5199  TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn) */\n      tag_51\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":867:909  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5160:5170  msg.sender */\n      caller\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5190:5198  amountIn */\n      dup5\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5172:5187  amountInMaximum */\n      dup7\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5172:5198  amountInMaximum - amountIn */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5127:5154  TransferHelper.safeTransfer */\n      tag_54\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5127:5199  TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":5012:5210  if (amountIn < amountInMaximum) {... */\n    tag_49:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3718:5216  {... */\n      pop\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":3592:5216  function swapExactOutputSingle(uint24 poolFee,uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":837:909  address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n    tag_28:\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":867:909  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Staking/SwapTokenV2Router.sol\":837:909  address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_32:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":701:713  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":715:732  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:753  token */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":782:810  IERC20.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":812:816  from */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":818:820  to */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":822:827  value */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_56\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_62\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_61)\n    tag_62:\n      0x60\n      swap2\n      pop\n    tag_61:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_63\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":874:875  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:863  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_64\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n    tag_64:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_63:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":690:919  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_34:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_73:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_76\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_75)\n    tag_76:\n      0x60\n      swap2\n      pop\n    tag_75:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_78\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_79:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_78:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_77:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n    tag_54:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1325:1337  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1339:1356  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1365  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1370  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1394:1418  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1420:1422  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1424:1429  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1371:1430  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1360:1431  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_85:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_88\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_87)\n    tag_88:\n      0x60\n      swap2\n      pop\n    tag_87:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1324:1431  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1456  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1476:1477  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1465  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1472  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1477  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1492:1496  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1481:1505  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_91:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1461:1505  data.length == 0 || abi.decode(data, (bool)) */\n    tag_90:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1449:1506  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_89:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1441:1513  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1314:1520  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1211:1520  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_95:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_96:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_140\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_95\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_97:\n        /* \"#utility.yul\":328:352   */\n      tag_142\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_96\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_144\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_97\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_99:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1011   */\n    tag_101:\n        /* \"#utility.yul\":956:963   */\n      0x00\n        /* \"#utility.yul\":996:1004   */\n      0xffffff\n        /* \"#utility.yul\":989:994   */\n      dup3\n        /* \"#utility.yul\":985:1005   */\n      and\n        /* \"#utility.yul\":974:1005   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1017:1137   */\n    tag_102:\n        /* \"#utility.yul\":1089:1112   */\n      tag_150\n        /* \"#utility.yul\":1106:1111   */\n      dup2\n        /* \"#utility.yul\":1089:1112   */\n      tag_101\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1082:1087   */\n      dup2\n        /* \"#utility.yul\":1079:1113   */\n      eq\n        /* \"#utility.yul\":1069:1131   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1127:1128   */\n      0x00\n        /* \"#utility.yul\":1124:1125   */\n      dup1\n        /* \"#utility.yul\":1117:1129   */\n      revert\n        /* \"#utility.yul\":1069:1131   */\n    tag_151:\n        /* \"#utility.yul\":1017:1137   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1143:1280   */\n    tag_103:\n        /* \"#utility.yul\":1188:1193   */\n      0x00\n        /* \"#utility.yul\":1226:1232   */\n      dup2\n        /* \"#utility.yul\":1213:1233   */\n      calldataload\n        /* \"#utility.yul\":1204:1233   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1274   */\n      tag_153\n        /* \"#utility.yul\":1268:1273   */\n      dup2\n        /* \"#utility.yul\":1242:1274   */\n      tag_102\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1143:1280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1286:1363   */\n    tag_104:\n        /* \"#utility.yul\":1323:1330   */\n      0x00\n        /* \"#utility.yul\":1352:1357   */\n      dup2\n        /* \"#utility.yul\":1341:1357   */\n      swap1\n      pop\n        /* \"#utility.yul\":1286:1363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1369:1491   */\n    tag_105:\n        /* \"#utility.yul\":1442:1466   */\n      tag_156\n        /* \"#utility.yul\":1460:1465   */\n      dup2\n        /* \"#utility.yul\":1442:1466   */\n      tag_104\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1435:1440   */\n      dup2\n        /* \"#utility.yul\":1432:1467   */\n      eq\n        /* \"#utility.yul\":1422:1485   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1478:1479   */\n      dup1\n        /* \"#utility.yul\":1471:1483   */\n      revert\n        /* \"#utility.yul\":1422:1485   */\n    tag_157:\n        /* \"#utility.yul\":1369:1491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1636   */\n    tag_106:\n        /* \"#utility.yul\":1543:1548   */\n      0x00\n        /* \"#utility.yul\":1581:1587   */\n      dup2\n        /* \"#utility.yul\":1568:1588   */\n      calldataload\n        /* \"#utility.yul\":1559:1588   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1630   */\n      tag_159\n        /* \"#utility.yul\":1624:1629   */\n      dup2\n        /* \"#utility.yul\":1597:1630   */\n      tag_105\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1497:1636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1642:1764   */\n    tag_107:\n        /* \"#utility.yul\":1715:1739   */\n      tag_161\n        /* \"#utility.yul\":1733:1738   */\n      dup2\n        /* \"#utility.yul\":1715:1739   */\n      tag_96\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1705:1740   */\n      eq\n        /* \"#utility.yul\":1695:1758   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1754:1755   */\n      0x00\n        /* \"#utility.yul\":1751:1752   */\n      dup1\n        /* \"#utility.yul\":1744:1756   */\n      revert\n        /* \"#utility.yul\":1695:1758   */\n    tag_162:\n        /* \"#utility.yul\":1642:1764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1770:1909   */\n    tag_108:\n        /* \"#utility.yul\":1816:1821   */\n      0x00\n        /* \"#utility.yul\":1854:1860   */\n      dup2\n        /* \"#utility.yul\":1841:1861   */\n      calldataload\n        /* \"#utility.yul\":1832:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1870:1903   */\n      tag_164\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1870:1903   */\n      tag_107\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1770:1909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1915:2824   */\n    tag_14:\n        /* \"#utility.yul\":2009:2015   */\n      0x00\n        /* \"#utility.yul\":2017:2023   */\n      dup1\n        /* \"#utility.yul\":2025:2031   */\n      0x00\n        /* \"#utility.yul\":2033:2039   */\n      dup1\n        /* \"#utility.yul\":2041:2047   */\n      0x00\n        /* \"#utility.yul\":2090:2093   */\n      0xa0\n        /* \"#utility.yul\":2078:2087   */\n      dup7\n        /* \"#utility.yul\":2069:2076   */\n      dup9\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2094   */\n      slt\n        /* \"#utility.yul\":2058:2178   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2097:2176   */\n      tag_167\n      tag_99\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2058:2178   */\n    tag_166:\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2242:2294   */\n      tag_168\n        /* \"#utility.yul\":2286:2293   */\n      dup9\n        /* \"#utility.yul\":2277:2283   */\n      dup3\n        /* \"#utility.yul\":2266:2275   */\n      dup10\n        /* \"#utility.yul\":2262:2284   */\n      add\n        /* \"#utility.yul\":2242:2294   */\n      tag_103\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2232:2294   */\n      swap6\n      pop\n        /* \"#utility.yul\":2188:2304   */\n      pop\n        /* \"#utility.yul\":2343:2345   */\n      0x20\n        /* \"#utility.yul\":2369:2422   */\n      tag_169\n        /* \"#utility.yul\":2414:2421   */\n      dup9\n        /* \"#utility.yul\":2405:2411   */\n      dup3\n        /* \"#utility.yul\":2394:2403   */\n      dup10\n        /* \"#utility.yul\":2390:2412   */\n      add\n        /* \"#utility.yul\":2369:2422   */\n      tag_106\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2359:2422   */\n      swap5\n      pop\n        /* \"#utility.yul\":2314:2432   */\n      pop\n        /* \"#utility.yul\":2471:2473   */\n      0x40\n        /* \"#utility.yul\":2497:2550   */\n      tag_170\n        /* \"#utility.yul\":2542:2549   */\n      dup9\n        /* \"#utility.yul\":2533:2539   */\n      dup3\n        /* \"#utility.yul\":2522:2531   */\n      dup10\n        /* \"#utility.yul\":2518:2540   */\n      add\n        /* \"#utility.yul\":2497:2550   */\n      tag_108\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2487:2550   */\n      swap4\n      pop\n        /* \"#utility.yul\":2442:2560   */\n      pop\n        /* \"#utility.yul\":2599:2601   */\n      0x60\n        /* \"#utility.yul\":2625:2678   */\n      tag_171\n        /* \"#utility.yul\":2670:2677   */\n      dup9\n        /* \"#utility.yul\":2661:2667   */\n      dup3\n        /* \"#utility.yul\":2650:2659   */\n      dup10\n        /* \"#utility.yul\":2646:2668   */\n      add\n        /* \"#utility.yul\":2625:2678   */\n      tag_108\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2615:2678   */\n      swap3\n      pop\n        /* \"#utility.yul\":2570:2688   */\n      pop\n        /* \"#utility.yul\":2727:2730   */\n      0x80\n        /* \"#utility.yul\":2754:2807   */\n      tag_172\n        /* \"#utility.yul\":2799:2806   */\n      dup9\n        /* \"#utility.yul\":2790:2796   */\n      dup3\n        /* \"#utility.yul\":2779:2788   */\n      dup10\n        /* \"#utility.yul\":2775:2797   */\n      add\n        /* \"#utility.yul\":2754:2807   */\n      tag_108\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2744:2807   */\n      swap2\n      pop\n        /* \"#utility.yul\":2698:2817   */\n      pop\n        /* \"#utility.yul\":1915:2824   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2830:2948   */\n    tag_109:\n        /* \"#utility.yul\":2917:2941   */\n      tag_174\n        /* \"#utility.yul\":2935:2940   */\n      dup2\n        /* \"#utility.yul\":2917:2941   */\n      tag_104\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2912:2915   */\n      dup3\n        /* \"#utility.yul\":2905:2942   */\n      mstore\n        /* \"#utility.yul\":2830:2948   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2954:3176   */\n    tag_17:\n        /* \"#utility.yul\":3047:3051   */\n      0x00\n        /* \"#utility.yul\":3085:3087   */\n      0x20\n        /* \"#utility.yul\":3074:3083   */\n      dup3\n        /* \"#utility.yul\":3070:3088   */\n      add\n        /* \"#utility.yul\":3062:3088   */\n      swap1\n      pop\n        /* \"#utility.yul\":3098:3169   */\n      tag_176\n        /* \"#utility.yul\":3166:3167   */\n      0x00\n        /* \"#utility.yul\":3155:3164   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3142:3148   */\n      dup5\n        /* \"#utility.yul\":3098:3169   */\n      tag_109\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2954:3176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3242   */\n    tag_110:\n        /* \"#utility.yul\":3210:3213   */\n      0x00\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3224:3236   */\n      swap1\n      pop\n        /* \"#utility.yul\":3182:3242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3248:3390   */\n    tag_111:\n        /* \"#utility.yul\":3298:3307   */\n      0x00\n        /* \"#utility.yul\":3331:3384   */\n      tag_179\n        /* \"#utility.yul\":3349:3383   */\n      tag_180\n        /* \"#utility.yul\":3358:3382   */\n      tag_181\n        /* \"#utility.yul\":3376:3381   */\n      dup5\n        /* \"#utility.yul\":3358:3382   */\n      tag_95\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3349:3383   */\n      tag_110\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3331:3384   */\n      tag_95\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3318:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3248:3390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3396:3522   */\n    tag_112:\n        /* \"#utility.yul\":3446:3455   */\n      0x00\n        /* \"#utility.yul\":3479:3516   */\n      tag_183\n        /* \"#utility.yul\":3510:3515   */\n      dup3\n        /* \"#utility.yul\":3479:3516   */\n      tag_111\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3466:3516   */\n      swap1\n      pop\n        /* \"#utility.yul\":3396:3522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3528:3673   */\n    tag_113:\n        /* \"#utility.yul\":3597:3606   */\n      0x00\n        /* \"#utility.yul\":3630:3667   */\n      tag_185\n        /* \"#utility.yul\":3661:3666   */\n      dup3\n        /* \"#utility.yul\":3630:3667   */\n      tag_112\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3617:3667   */\n      swap1\n      pop\n        /* \"#utility.yul\":3528:3673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3679:3848   */\n    tag_114:\n        /* \"#utility.yul\":3785:3841   */\n      tag_187\n        /* \"#utility.yul\":3835:3840   */\n      dup2\n        /* \"#utility.yul\":3785:3841   */\n      tag_113\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3780:3783   */\n      dup3\n        /* \"#utility.yul\":3773:3842   */\n      mstore\n        /* \"#utility.yul\":3679:3848   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3854:4114   */\n    tag_21:\n        /* \"#utility.yul\":3966:3970   */\n      0x00\n        /* \"#utility.yul\":4004:4006   */\n      0x20\n        /* \"#utility.yul\":3993:4002   */\n      dup3\n        /* \"#utility.yul\":3989:4007   */\n      add\n        /* \"#utility.yul\":3981:4007   */\n      swap1\n      pop\n        /* \"#utility.yul\":4017:4107   */\n      tag_189\n        /* \"#utility.yul\":4104:4105   */\n      0x00\n        /* \"#utility.yul\":4093:4102   */\n      dup4\n        /* \"#utility.yul\":4089:4106   */\n      add\n        /* \"#utility.yul\":4080:4086   */\n      dup5\n        /* \"#utility.yul\":4017:4107   */\n      tag_114\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3854:4114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4120:4737   */\n    tag_24:\n        /* \"#utility.yul\":4196:4202   */\n      0x00\n        /* \"#utility.yul\":4204:4210   */\n      dup1\n        /* \"#utility.yul\":4212:4218   */\n      0x00\n        /* \"#utility.yul\":4261:4263   */\n      0x60\n        /* \"#utility.yul\":4249:4258   */\n      dup5\n        /* \"#utility.yul\":4240:4247   */\n      dup7\n        /* \"#utility.yul\":4236:4259   */\n      sub\n        /* \"#utility.yul\":4232:4264   */\n      slt\n        /* \"#utility.yul\":4229:4348   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":4267:4346   */\n      tag_192\n      tag_99\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4229:4348   */\n    tag_191:\n        /* \"#utility.yul\":4387:4388   */\n      0x00\n        /* \"#utility.yul\":4412:4464   */\n      tag_193\n        /* \"#utility.yul\":4456:4463   */\n      dup7\n        /* \"#utility.yul\":4447:4453   */\n      dup3\n        /* \"#utility.yul\":4436:4445   */\n      dup8\n        /* \"#utility.yul\":4432:4454   */\n      add\n        /* \"#utility.yul\":4412:4464   */\n      tag_103\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4402:4464   */\n      swap4\n      pop\n        /* \"#utility.yul\":4358:4474   */\n      pop\n        /* \"#utility.yul\":4513:4515   */\n      0x20\n        /* \"#utility.yul\":4539:4592   */\n      tag_194\n        /* \"#utility.yul\":4584:4591   */\n      dup7\n        /* \"#utility.yul\":4575:4581   */\n      dup3\n        /* \"#utility.yul\":4564:4573   */\n      dup8\n        /* \"#utility.yul\":4560:4582   */\n      add\n        /* \"#utility.yul\":4539:4592   */\n      tag_106\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4529:4592   */\n      swap3\n      pop\n        /* \"#utility.yul\":4484:4602   */\n      pop\n        /* \"#utility.yul\":4641:4643   */\n      0x40\n        /* \"#utility.yul\":4667:4720   */\n      tag_195\n        /* \"#utility.yul\":4712:4719   */\n      dup7\n        /* \"#utility.yul\":4703:4709   */\n      dup3\n        /* \"#utility.yul\":4692:4701   */\n      dup8\n        /* \"#utility.yul\":4688:4710   */\n      add\n        /* \"#utility.yul\":4667:4720   */\n      tag_106\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4657:4720   */\n      swap2\n      pop\n        /* \"#utility.yul\":4612:4730   */\n      pop\n        /* \"#utility.yul\":4120:4737   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4743:4851   */\n    tag_115:\n        /* \"#utility.yul\":4820:4844   */\n      tag_197\n        /* \"#utility.yul\":4838:4843   */\n      dup2\n        /* \"#utility.yul\":4820:4844   */\n      tag_96\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4815:4818   */\n      dup3\n        /* \"#utility.yul\":4808:4845   */\n      mstore\n        /* \"#utility.yul\":4743:4851   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4857:4962   */\n    tag_116:\n        /* \"#utility.yul\":4932:4955   */\n      tag_199\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4932:4955   */\n      tag_101\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4927:4930   */\n      dup3\n        /* \"#utility.yul\":4920:4956   */\n      mstore\n        /* \"#utility.yul\":4857:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5076   */\n    tag_117:\n        /* \"#utility.yul\":5045:5069   */\n      tag_201\n        /* \"#utility.yul\":5063:5068   */\n      dup2\n        /* \"#utility.yul\":5045:5069   */\n      tag_104\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5040:5043   */\n      dup3\n        /* \"#utility.yul\":5033:5070   */\n      mstore\n        /* \"#utility.yul\":4968:5076   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5082:5190   */\n    tag_118:\n        /* \"#utility.yul\":5159:5183   */\n      tag_203\n        /* \"#utility.yul\":5177:5182   */\n      dup2\n        /* \"#utility.yul\":5159:5183   */\n      tag_95\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5154:5157   */\n      dup3\n        /* \"#utility.yul\":5147:5184   */\n      mstore\n        /* \"#utility.yul\":5082:5190   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:6913   */\n    tag_119:\n        /* \"#utility.yul\":5465:5471   */\n      0x0100\n        /* \"#utility.yul\":5460:5463   */\n      dup3\n        /* \"#utility.yul\":5456:5472   */\n      add\n        /* \"#utility.yul\":5557:5561   */\n      0x00\n        /* \"#utility.yul\":5550:5555   */\n      dup3\n        /* \"#utility.yul\":5546:5562   */\n      add\n        /* \"#utility.yul\":5540:5563   */\n      mload\n        /* \"#utility.yul\":5576:5639   */\n      tag_205\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5628:5631   */\n      dup6\n        /* \"#utility.yul\":5624:5638   */\n      add\n        /* \"#utility.yul\":5610:5622   */\n      dup3\n        /* \"#utility.yul\":5576:5639   */\n      tag_115\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5482:5649   */\n      pop\n        /* \"#utility.yul\":5735:5739   */\n      0x20\n        /* \"#utility.yul\":5728:5733   */\n      dup3\n        /* \"#utility.yul\":5724:5740   */\n      add\n        /* \"#utility.yul\":5718:5741   */\n      mload\n        /* \"#utility.yul\":5754:5817   */\n      tag_206\n        /* \"#utility.yul\":5811:5815   */\n      0x20\n        /* \"#utility.yul\":5806:5809   */\n      dup6\n        /* \"#utility.yul\":5802:5816   */\n      add\n        /* \"#utility.yul\":5788:5800   */\n      dup3\n        /* \"#utility.yul\":5754:5817   */\n      tag_115\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5659:5827   */\n      pop\n        /* \"#utility.yul\":5908:5912   */\n      0x40\n        /* \"#utility.yul\":5901:5906   */\n      dup3\n        /* \"#utility.yul\":5897:5913   */\n      add\n        /* \"#utility.yul\":5891:5914   */\n      mload\n        /* \"#utility.yul\":5927:5988   */\n      tag_207\n        /* \"#utility.yul\":5982:5986   */\n      0x40\n        /* \"#utility.yul\":5977:5980   */\n      dup6\n        /* \"#utility.yul\":5973:5987   */\n      add\n        /* \"#utility.yul\":5959:5971   */\n      dup3\n        /* \"#utility.yul\":5927:5988   */\n      tag_116\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5837:5998   */\n      pop\n        /* \"#utility.yul\":6085:6089   */\n      0x60\n        /* \"#utility.yul\":6078:6083   */\n      dup3\n        /* \"#utility.yul\":6074:6090   */\n      add\n        /* \"#utility.yul\":6068:6091   */\n      mload\n        /* \"#utility.yul\":6104:6167   */\n      tag_208\n        /* \"#utility.yul\":6161:6165   */\n      0x60\n        /* \"#utility.yul\":6156:6159   */\n      dup6\n        /* \"#utility.yul\":6152:6166   */\n      add\n        /* \"#utility.yul\":6138:6150   */\n      dup3\n        /* \"#utility.yul\":6104:6167   */\n      tag_115\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6008:6177   */\n      pop\n        /* \"#utility.yul\":6263:6267   */\n      0x80\n        /* \"#utility.yul\":6256:6261   */\n      dup3\n        /* \"#utility.yul\":6252:6268   */\n      add\n        /* \"#utility.yul\":6246:6269   */\n      mload\n        /* \"#utility.yul\":6282:6345   */\n      tag_209\n        /* \"#utility.yul\":6339:6343   */\n      0x80\n        /* \"#utility.yul\":6334:6337   */\n      dup6\n        /* \"#utility.yul\":6330:6344   */\n      add\n        /* \"#utility.yul\":6316:6328   */\n      dup3\n        /* \"#utility.yul\":6282:6345   */\n      tag_117\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6187:6355   */\n      pop\n        /* \"#utility.yul\":6441:6445   */\n      0xa0\n        /* \"#utility.yul\":6434:6439   */\n      dup3\n        /* \"#utility.yul\":6430:6446   */\n      add\n        /* \"#utility.yul\":6424:6447   */\n      mload\n        /* \"#utility.yul\":6460:6523   */\n      tag_210\n        /* \"#utility.yul\":6517:6521   */\n      0xa0\n        /* \"#utility.yul\":6512:6515   */\n      dup6\n        /* \"#utility.yul\":6508:6522   */\n      add\n        /* \"#utility.yul\":6494:6506   */\n      dup3\n        /* \"#utility.yul\":6460:6523   */\n      tag_117\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6365:6533   */\n      pop\n        /* \"#utility.yul\":6627:6631   */\n      0xc0\n        /* \"#utility.yul\":6620:6625   */\n      dup3\n        /* \"#utility.yul\":6616:6632   */\n      add\n        /* \"#utility.yul\":6610:6633   */\n      mload\n        /* \"#utility.yul\":6646:6709   */\n      tag_211\n        /* \"#utility.yul\":6703:6707   */\n      0xc0\n        /* \"#utility.yul\":6698:6701   */\n      dup6\n        /* \"#utility.yul\":6694:6708   */\n      add\n        /* \"#utility.yul\":6680:6692   */\n      dup3\n        /* \"#utility.yul\":6646:6709   */\n      tag_117\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6543:6719   */\n      pop\n        /* \"#utility.yul\":6814:6818   */\n      0xe0\n        /* \"#utility.yul\":6807:6812   */\n      dup3\n        /* \"#utility.yul\":6803:6819   */\n      add\n        /* \"#utility.yul\":6797:6820   */\n      mload\n        /* \"#utility.yul\":6833:6896   */\n      tag_212\n        /* \"#utility.yul\":6890:6894   */\n      0xe0\n        /* \"#utility.yul\":6885:6888   */\n      dup6\n        /* \"#utility.yul\":6881:6895   */\n      add\n        /* \"#utility.yul\":6867:6879   */\n      dup3\n        /* \"#utility.yul\":6833:6896   */\n      tag_118\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6729:6906   */\n      pop\n        /* \"#utility.yul\":5434:6913   */\n      pop\n        /* \"#utility.yul\":5290:6913   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7298   */\n    tag_36:\n        /* \"#utility.yul\":7090:7094   */\n      0x00\n        /* \"#utility.yul\":7128:7131   */\n      0x0100\n        /* \"#utility.yul\":7117:7126   */\n      dup3\n        /* \"#utility.yul\":7113:7132   */\n      add\n        /* \"#utility.yul\":7105:7132   */\n      swap1\n      pop\n        /* \"#utility.yul\":7142:7291   */\n      tag_214\n        /* \"#utility.yul\":7288:7289   */\n      0x00\n        /* \"#utility.yul\":7277:7286   */\n      dup4\n        /* \"#utility.yul\":7273:7290   */\n      add\n        /* \"#utility.yul\":7264:7270   */\n      dup5\n        /* \"#utility.yul\":7142:7291   */\n      tag_119\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6919:7298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7304:7447   */\n    tag_120:\n        /* \"#utility.yul\":7361:7366   */\n      0x00\n        /* \"#utility.yul\":7392:7398   */\n      dup2\n        /* \"#utility.yul\":7386:7399   */\n      mload\n        /* \"#utility.yul\":7377:7399   */\n      swap1\n      pop\n        /* \"#utility.yul\":7408:7441   */\n      tag_216\n        /* \"#utility.yul\":7435:7440   */\n      dup2\n        /* \"#utility.yul\":7408:7441   */\n      tag_105\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7304:7447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7453:7804   */\n    tag_40:\n        /* \"#utility.yul\":7523:7529   */\n      0x00\n        /* \"#utility.yul\":7572:7574   */\n      0x20\n        /* \"#utility.yul\":7560:7569   */\n      dup3\n        /* \"#utility.yul\":7551:7558   */\n      dup5\n        /* \"#utility.yul\":7547:7570   */\n      sub\n        /* \"#utility.yul\":7543:7575   */\n      slt\n        /* \"#utility.yul\":7540:7659   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":7578:7657   */\n      tag_219\n      tag_99\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7540:7659   */\n    tag_218:\n        /* \"#utility.yul\":7698:7699   */\n      0x00\n        /* \"#utility.yul\":7723:7787   */\n      tag_220\n        /* \"#utility.yul\":7779:7786   */\n      dup5\n        /* \"#utility.yul\":7770:7776   */\n      dup3\n        /* \"#utility.yul\":7759:7768   */\n      dup6\n        /* \"#utility.yul\":7755:7777   */\n      add\n        /* \"#utility.yul\":7723:7787   */\n      tag_120\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7713:7787   */\n      swap2\n      pop\n        /* \"#utility.yul\":7669:7797   */\n      pop\n        /* \"#utility.yul\":7453:7804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:9531   */\n    tag_121:\n        /* \"#utility.yul\":8083:8089   */\n      0x0100\n        /* \"#utility.yul\":8078:8081   */\n      dup3\n        /* \"#utility.yul\":8074:8090   */\n      add\n        /* \"#utility.yul\":8175:8179   */\n      0x00\n        /* \"#utility.yul\":8168:8173   */\n      dup3\n        /* \"#utility.yul\":8164:8180   */\n      add\n        /* \"#utility.yul\":8158:8181   */\n      mload\n        /* \"#utility.yul\":8194:8257   */\n      tag_222\n        /* \"#utility.yul\":8251:8255   */\n      0x00\n        /* \"#utility.yul\":8246:8249   */\n      dup6\n        /* \"#utility.yul\":8242:8256   */\n      add\n        /* \"#utility.yul\":8228:8240   */\n      dup3\n        /* \"#utility.yul\":8194:8257   */\n      tag_115\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8100:8267   */\n      pop\n        /* \"#utility.yul\":8353:8357   */\n      0x20\n        /* \"#utility.yul\":8346:8351   */\n      dup3\n        /* \"#utility.yul\":8342:8358   */\n      add\n        /* \"#utility.yul\":8336:8359   */\n      mload\n        /* \"#utility.yul\":8372:8435   */\n      tag_223\n        /* \"#utility.yul\":8429:8433   */\n      0x20\n        /* \"#utility.yul\":8424:8427   */\n      dup6\n        /* \"#utility.yul\":8420:8434   */\n      add\n        /* \"#utility.yul\":8406:8418   */\n      dup3\n        /* \"#utility.yul\":8372:8435   */\n      tag_115\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8277:8445   */\n      pop\n        /* \"#utility.yul\":8526:8530   */\n      0x40\n        /* \"#utility.yul\":8519:8524   */\n      dup3\n        /* \"#utility.yul\":8515:8531   */\n      add\n        /* \"#utility.yul\":8509:8532   */\n      mload\n        /* \"#utility.yul\":8545:8606   */\n      tag_224\n        /* \"#utility.yul\":8600:8604   */\n      0x40\n        /* \"#utility.yul\":8595:8598   */\n      dup6\n        /* \"#utility.yul\":8591:8605   */\n      add\n        /* \"#utility.yul\":8577:8589   */\n      dup3\n        /* \"#utility.yul\":8545:8606   */\n      tag_116\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8455:8616   */\n      pop\n        /* \"#utility.yul\":8703:8707   */\n      0x60\n        /* \"#utility.yul\":8696:8701   */\n      dup3\n        /* \"#utility.yul\":8692:8708   */\n      add\n        /* \"#utility.yul\":8686:8709   */\n      mload\n        /* \"#utility.yul\":8722:8785   */\n      tag_225\n        /* \"#utility.yul\":8779:8783   */\n      0x60\n        /* \"#utility.yul\":8774:8777   */\n      dup6\n        /* \"#utility.yul\":8770:8784   */\n      add\n        /* \"#utility.yul\":8756:8768   */\n      dup3\n        /* \"#utility.yul\":8722:8785   */\n      tag_115\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8626:8795   */\n      pop\n        /* \"#utility.yul\":8881:8885   */\n      0x80\n        /* \"#utility.yul\":8874:8879   */\n      dup3\n        /* \"#utility.yul\":8870:8886   */\n      add\n        /* \"#utility.yul\":8864:8887   */\n      mload\n        /* \"#utility.yul\":8900:8963   */\n      tag_226\n        /* \"#utility.yul\":8957:8961   */\n      0x80\n        /* \"#utility.yul\":8952:8955   */\n      dup6\n        /* \"#utility.yul\":8948:8962   */\n      add\n        /* \"#utility.yul\":8934:8946   */\n      dup3\n        /* \"#utility.yul\":8900:8963   */\n      tag_117\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8805:8973   */\n      pop\n        /* \"#utility.yul\":9060:9064   */\n      0xa0\n        /* \"#utility.yul\":9053:9058   */\n      dup3\n        /* \"#utility.yul\":9049:9065   */\n      add\n        /* \"#utility.yul\":9043:9066   */\n      mload\n        /* \"#utility.yul\":9079:9142   */\n      tag_227\n        /* \"#utility.yul\":9136:9140   */\n      0xa0\n        /* \"#utility.yul\":9131:9134   */\n      dup6\n        /* \"#utility.yul\":9127:9141   */\n      add\n        /* \"#utility.yul\":9113:9125   */\n      dup3\n        /* \"#utility.yul\":9079:9142   */\n      tag_117\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":8983:9152   */\n      pop\n        /* \"#utility.yul\":9245:9249   */\n      0xc0\n        /* \"#utility.yul\":9238:9243   */\n      dup3\n        /* \"#utility.yul\":9234:9250   */\n      add\n        /* \"#utility.yul\":9228:9251   */\n      mload\n        /* \"#utility.yul\":9264:9327   */\n      tag_228\n        /* \"#utility.yul\":9321:9325   */\n      0xc0\n        /* \"#utility.yul\":9316:9319   */\n      dup6\n        /* \"#utility.yul\":9312:9326   */\n      add\n        /* \"#utility.yul\":9298:9310   */\n      dup3\n        /* \"#utility.yul\":9264:9327   */\n      tag_117\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9162:9337   */\n      pop\n        /* \"#utility.yul\":9432:9436   */\n      0xe0\n        /* \"#utility.yul\":9425:9430   */\n      dup3\n        /* \"#utility.yul\":9421:9437   */\n      add\n        /* \"#utility.yul\":9415:9438   */\n      mload\n        /* \"#utility.yul\":9451:9514   */\n      tag_229\n        /* \"#utility.yul\":9508:9512   */\n      0xe0\n        /* \"#utility.yul\":9503:9506   */\n      dup6\n        /* \"#utility.yul\":9499:9513   */\n      add\n        /* \"#utility.yul\":9485:9497   */\n      dup3\n        /* \"#utility.yul\":9451:9514   */\n      tag_118\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9347:9524   */\n      pop\n        /* \"#utility.yul\":8052:9531   */\n      pop\n        /* \"#utility.yul\":7906:9531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:9920   */\n    tag_45:\n        /* \"#utility.yul\":9710:9714   */\n      0x00\n        /* \"#utility.yul\":9748:9751   */\n      0x0100\n        /* \"#utility.yul\":9737:9746   */\n      dup3\n        /* \"#utility.yul\":9733:9752   */\n      add\n        /* \"#utility.yul\":9725:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9762:9913   */\n      tag_231\n        /* \"#utility.yul\":9910:9911   */\n      0x00\n        /* \"#utility.yul\":9899:9908   */\n      dup4\n        /* \"#utility.yul\":9895:9912   */\n      add\n        /* \"#utility.yul\":9886:9892   */\n      dup5\n        /* \"#utility.yul\":9762:9913   */\n      tag_121\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9537:9920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9926:10106   */\n    tag_122:\n        /* \"#utility.yul\":9974:10051   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9971:9972   */\n      0x00\n        /* \"#utility.yul\":9964:10052   */\n      mstore\n        /* \"#utility.yul\":10071:10075   */\n      0x11\n        /* \"#utility.yul\":10068:10069   */\n      0x04\n        /* \"#utility.yul\":10061:10076   */\n      mstore\n        /* \"#utility.yul\":10095:10099   */\n      0x24\n        /* \"#utility.yul\":10092:10093   */\n      0x00\n        /* \"#utility.yul\":10085:10100   */\n      revert\n        /* \"#utility.yul\":10112:10306   */\n    tag_53:\n        /* \"#utility.yul\":10152:10156   */\n      0x00\n        /* \"#utility.yul\":10172:10192   */\n      tag_234\n        /* \"#utility.yul\":10190:10191   */\n      dup3\n        /* \"#utility.yul\":10172:10192   */\n      tag_104\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":10167:10192   */\n      swap2\n      pop\n        /* \"#utility.yul\":10206:10226   */\n      tag_235\n        /* \"#utility.yul\":10224:10225   */\n      dup4\n        /* \"#utility.yul\":10206:10226   */\n      tag_104\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10201:10226   */\n      swap3\n      pop\n        /* \"#utility.yul\":10250:10251   */\n      dup3\n        /* \"#utility.yul\":10247:10248   */\n      dup3\n        /* \"#utility.yul\":10243:10252   */\n      sub\n        /* \"#utility.yul\":10235:10252   */\n      swap1\n      pop\n        /* \"#utility.yul\":10274:10275   */\n      dup2\n        /* \"#utility.yul\":10268:10272   */\n      dup2\n        /* \"#utility.yul\":10265:10276   */\n      gt\n        /* \"#utility.yul\":10262:10299   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":10279:10297   */\n      tag_237\n      tag_122\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":10262:10299   */\n    tag_236:\n        /* \"#utility.yul\":10112:10306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10312:10754   */\n    tag_57:\n        /* \"#utility.yul\":10461:10465   */\n      0x00\n        /* \"#utility.yul\":10499:10501   */\n      0x60\n        /* \"#utility.yul\":10488:10497   */\n      dup3\n        /* \"#utility.yul\":10484:10502   */\n      add\n        /* \"#utility.yul\":10476:10502   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10583   */\n      tag_239\n        /* \"#utility.yul\":10580:10581   */\n      0x00\n        /* \"#utility.yul\":10569:10578   */\n      dup4\n        /* \"#utility.yul\":10565:10582   */\n      add\n        /* \"#utility.yul\":10556:10562   */\n      dup7\n        /* \"#utility.yul\":10512:10583   */\n      tag_97\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":10593:10665   */\n      tag_240\n        /* \"#utility.yul\":10661:10663   */\n      0x20\n        /* \"#utility.yul\":10650:10659   */\n      dup4\n        /* \"#utility.yul\":10646:10664   */\n      add\n        /* \"#utility.yul\":10637:10643   */\n      dup6\n        /* \"#utility.yul\":10593:10665   */\n      tag_97\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":10675:10747   */\n      tag_241\n        /* \"#utility.yul\":10743:10745   */\n      0x40\n        /* \"#utility.yul\":10732:10741   */\n      dup4\n        /* \"#utility.yul\":10728:10746   */\n      add\n        /* \"#utility.yul\":10719:10725   */\n      dup5\n        /* \"#utility.yul\":10675:10747   */\n      tag_109\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10312:10754   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10760:10858   */\n    tag_123:\n        /* \"#utility.yul\":10811:10817   */\n      0x00\n        /* \"#utility.yul\":10845:10850   */\n      dup2\n        /* \"#utility.yul\":10839:10851   */\n      mload\n        /* \"#utility.yul\":10829:10851   */\n      swap1\n      pop\n        /* \"#utility.yul\":10760:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11011   */\n    tag_124:\n        /* \"#utility.yul\":10965:10976   */\n      0x00\n        /* \"#utility.yul\":11002:11005   */\n      dup2\n        /* \"#utility.yul\":10987:11005   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:11011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11017:11263   */\n    tag_125:\n        /* \"#utility.yul\":11098:11099   */\n      0x00\n        /* \"#utility.yul\":11108:11221   */\n    tag_245:\n        /* \"#utility.yul\":11122:11128   */\n      dup4\n        /* \"#utility.yul\":11119:11120   */\n      dup2\n        /* \"#utility.yul\":11116:11129   */\n      lt\n        /* \"#utility.yul\":11108:11221   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":11207:11208   */\n      dup1\n        /* \"#utility.yul\":11202:11205   */\n      dup3\n        /* \"#utility.yul\":11198:11209   */\n      add\n        /* \"#utility.yul\":11192:11210   */\n      mload\n        /* \"#utility.yul\":11188:11189   */\n      dup2\n        /* \"#utility.yul\":11183:11186   */\n      dup5\n        /* \"#utility.yul\":11179:11190   */\n      add\n        /* \"#utility.yul\":11172:11211   */\n      mstore\n        /* \"#utility.yul\":11144:11146   */\n      0x20\n        /* \"#utility.yul\":11141:11142   */\n      dup2\n        /* \"#utility.yul\":11137:11147   */\n      add\n        /* \"#utility.yul\":11132:11147   */\n      swap1\n      pop\n        /* \"#utility.yul\":11108:11221   */\n      jump(tag_245)\n    tag_247:\n        /* \"#utility.yul\":11255:11256   */\n      0x00\n        /* \"#utility.yul\":11246:11252   */\n      dup5\n        /* \"#utility.yul\":11241:11244   */\n      dup5\n        /* \"#utility.yul\":11237:11253   */\n      add\n        /* \"#utility.yul\":11230:11257   */\n      mstore\n        /* \"#utility.yul\":11079:11263   */\n      pop\n        /* \"#utility.yul\":11017:11263   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11269:11655   */\n    tag_126:\n        /* \"#utility.yul\":11373:11376   */\n      0x00\n        /* \"#utility.yul\":11401:11439   */\n      tag_249\n        /* \"#utility.yul\":11433:11438   */\n      dup3\n        /* \"#utility.yul\":11401:11439   */\n      tag_123\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":11455:11543   */\n      tag_250\n        /* \"#utility.yul\":11536:11542   */\n      dup2\n        /* \"#utility.yul\":11531:11534   */\n      dup6\n        /* \"#utility.yul\":11455:11543   */\n      tag_124\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":11448:11543   */\n      swap4\n      pop\n        /* \"#utility.yul\":11552:11617   */\n      tag_251\n        /* \"#utility.yul\":11610:11616   */\n      dup2\n        /* \"#utility.yul\":11605:11608   */\n      dup6\n        /* \"#utility.yul\":11598:11602   */\n      0x20\n        /* \"#utility.yul\":11591:11596   */\n      dup7\n        /* \"#utility.yul\":11587:11603   */\n      add\n        /* \"#utility.yul\":11552:11617   */\n      tag_125\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":11642:11648   */\n      dup1\n        /* \"#utility.yul\":11637:11640   */\n      dup5\n        /* \"#utility.yul\":11633:11649   */\n      add\n        /* \"#utility.yul\":11626:11649   */\n      swap2\n      pop\n        /* \"#utility.yul\":11377:11655   */\n      pop\n        /* \"#utility.yul\":11269:11655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11661:11932   */\n    tag_59:\n        /* \"#utility.yul\":11791:11794   */\n      0x00\n        /* \"#utility.yul\":11813:11906   */\n      tag_253\n        /* \"#utility.yul\":11902:11905   */\n      dup3\n        /* \"#utility.yul\":11893:11899   */\n      dup5\n        /* \"#utility.yul\":11813:11906   */\n      tag_126\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":11806:11906   */\n      swap2\n      pop\n        /* \"#utility.yul\":11923:11926   */\n      dup2\n        /* \"#utility.yul\":11916:11926   */\n      swap1\n      pop\n        /* \"#utility.yul\":11661:11932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11938:12028   */\n    tag_127:\n        /* \"#utility.yul\":11972:11979   */\n      0x00\n        /* \"#utility.yul\":12015:12020   */\n      dup2\n        /* \"#utility.yul\":12008:12021   */\n      iszero\n        /* \"#utility.yul\":12001:12022   */\n      iszero\n        /* \"#utility.yul\":11990:12022   */\n      swap1\n      pop\n        /* \"#utility.yul\":11938:12028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12034:12150   */\n    tag_128:\n        /* \"#utility.yul\":12104:12125   */\n      tag_256\n        /* \"#utility.yul\":12119:12124   */\n      dup2\n        /* \"#utility.yul\":12104:12125   */\n      tag_127\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":12097:12102   */\n      dup2\n        /* \"#utility.yul\":12094:12126   */\n      eq\n        /* \"#utility.yul\":12084:12144   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12137:12138   */\n      dup1\n        /* \"#utility.yul\":12130:12142   */\n      revert\n        /* \"#utility.yul\":12084:12144   */\n    tag_257:\n        /* \"#utility.yul\":12034:12150   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12156:12293   */\n    tag_129:\n        /* \"#utility.yul\":12210:12215   */\n      0x00\n        /* \"#utility.yul\":12241:12247   */\n      dup2\n        /* \"#utility.yul\":12235:12248   */\n      mload\n        /* \"#utility.yul\":12226:12248   */\n      swap1\n      pop\n        /* \"#utility.yul\":12257:12287   */\n      tag_259\n        /* \"#utility.yul\":12281:12286   */\n      dup2\n        /* \"#utility.yul\":12257:12287   */\n      tag_128\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":12156:12293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12299:12644   */\n    tag_66:\n        /* \"#utility.yul\":12366:12372   */\n      0x00\n        /* \"#utility.yul\":12415:12417   */\n      0x20\n        /* \"#utility.yul\":12403:12412   */\n      dup3\n        /* \"#utility.yul\":12394:12401   */\n      dup5\n        /* \"#utility.yul\":12390:12413   */\n      sub\n        /* \"#utility.yul\":12386:12418   */\n      slt\n        /* \"#utility.yul\":12383:12502   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":12421:12500   */\n      tag_262\n      tag_99\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":12383:12502   */\n    tag_261:\n        /* \"#utility.yul\":12541:12542   */\n      0x00\n        /* \"#utility.yul\":12566:12627   */\n      tag_263\n        /* \"#utility.yul\":12619:12626   */\n      dup5\n        /* \"#utility.yul\":12610:12616   */\n      dup3\n        /* \"#utility.yul\":12599:12608   */\n      dup6\n        /* \"#utility.yul\":12595:12617   */\n      add\n        /* \"#utility.yul\":12566:12627   */\n      tag_129\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":12556:12627   */\n      swap2\n      pop\n        /* \"#utility.yul\":12512:12637   */\n      pop\n        /* \"#utility.yul\":12299:12644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12650:12819   */\n    tag_130:\n        /* \"#utility.yul\":12734:12745   */\n      0x00\n        /* \"#utility.yul\":12768:12774   */\n      dup3\n        /* \"#utility.yul\":12763:12766   */\n      dup3\n        /* \"#utility.yul\":12756:12775   */\n      mstore\n        /* \"#utility.yul\":12808:12812   */\n      0x20\n        /* \"#utility.yul\":12803:12806   */\n      dup3\n        /* \"#utility.yul\":12799:12813   */\n      add\n        /* \"#utility.yul\":12784:12813   */\n      swap1\n      pop\n        /* \"#utility.yul\":12650:12819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12825:12978   */\n    tag_131:\n        /* \"#utility.yul\":12965:12970   */\n      0x5354460000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12961:12962   */\n      0x00\n        /* \"#utility.yul\":12953:12959   */\n      dup3\n        /* \"#utility.yul\":12949:12963   */\n      add\n        /* \"#utility.yul\":12942:12971   */\n      mstore\n        /* \"#utility.yul\":12825:12978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12984:13349   */\n    tag_132:\n        /* \"#utility.yul\":13126:13129   */\n      0x00\n        /* \"#utility.yul\":13147:13213   */\n      tag_267\n        /* \"#utility.yul\":13211:13212   */\n      0x03\n        /* \"#utility.yul\":13206:13209   */\n      dup4\n        /* \"#utility.yul\":13147:13213   */\n      tag_130\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":13140:13213   */\n      swap2\n      pop\n        /* \"#utility.yul\":13222:13315   */\n      tag_268\n        /* \"#utility.yul\":13311:13314   */\n      dup3\n        /* \"#utility.yul\":13222:13315   */\n      tag_131\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":13340:13342   */\n      0x20\n        /* \"#utility.yul\":13335:13338   */\n      dup3\n        /* \"#utility.yul\":13331:13343   */\n      add\n        /* \"#utility.yul\":13324:13343   */\n      swap1\n      pop\n        /* \"#utility.yul\":12984:13349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13355:13774   */\n    tag_69:\n        /* \"#utility.yul\":13521:13525   */\n      0x00\n        /* \"#utility.yul\":13559:13561   */\n      0x20\n        /* \"#utility.yul\":13548:13557   */\n      dup3\n        /* \"#utility.yul\":13544:13562   */\n      add\n        /* \"#utility.yul\":13536:13562   */\n      swap1\n      pop\n        /* \"#utility.yul\":13608:13617   */\n      dup2\n        /* \"#utility.yul\":13602:13606   */\n      dup2\n        /* \"#utility.yul\":13598:13618   */\n      sub\n        /* \"#utility.yul\":13594:13595   */\n      0x00\n        /* \"#utility.yul\":13583:13592   */\n      dup4\n        /* \"#utility.yul\":13579:13596   */\n      add\n        /* \"#utility.yul\":13572:13619   */\n      mstore\n        /* \"#utility.yul\":13636:13767   */\n      tag_270\n        /* \"#utility.yul\":13762:13766   */\n      dup2\n        /* \"#utility.yul\":13636:13767   */\n      tag_132\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":13628:13767   */\n      swap1\n      pop\n        /* \"#utility.yul\":13355:13774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13780:14112   */\n    tag_72:\n        /* \"#utility.yul\":13901:13905   */\n      0x00\n        /* \"#utility.yul\":13939:13941   */\n      0x40\n        /* \"#utility.yul\":13928:13937   */\n      dup3\n        /* \"#utility.yul\":13924:13942   */\n      add\n        /* \"#utility.yul\":13916:13942   */\n      swap1\n      pop\n        /* \"#utility.yul\":13952:14023   */\n      tag_272\n        /* \"#utility.yul\":14020:14021   */\n      0x00\n        /* \"#utility.yul\":14009:14018   */\n      dup4\n        /* \"#utility.yul\":14005:14022   */\n      add\n        /* \"#utility.yul\":13996:14002   */\n      dup6\n        /* \"#utility.yul\":13952:14023   */\n      tag_97\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":14033:14105   */\n      tag_273\n        /* \"#utility.yul\":14101:14103   */\n      0x20\n        /* \"#utility.yul\":14090:14099   */\n      dup4\n        /* \"#utility.yul\":14086:14104   */\n      add\n        /* \"#utility.yul\":14077:14083   */\n      dup5\n        /* \"#utility.yul\":14033:14105   */\n      tag_109\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":13780:14112   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14118:14270   */\n    tag_133:\n        /* \"#utility.yul\":14258:14262   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14254:14255   */\n      0x00\n        /* \"#utility.yul\":14246:14252   */\n      dup3\n        /* \"#utility.yul\":14242:14256   */\n      add\n        /* \"#utility.yul\":14235:14263   */\n      mstore\n        /* \"#utility.yul\":14118:14270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14276:14641   */\n    tag_134:\n        /* \"#utility.yul\":14418:14421   */\n      0x00\n        /* \"#utility.yul\":14439:14505   */\n      tag_276\n        /* \"#utility.yul\":14503:14504   */\n      0x02\n        /* \"#utility.yul\":14498:14501   */\n      dup4\n        /* \"#utility.yul\":14439:14505   */\n      tag_130\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":14432:14505   */\n      swap2\n      pop\n        /* \"#utility.yul\":14514:14607   */\n      tag_277\n        /* \"#utility.yul\":14603:14606   */\n      dup3\n        /* \"#utility.yul\":14514:14607   */\n      tag_133\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":14632:14634   */\n      0x20\n        /* \"#utility.yul\":14627:14630   */\n      dup3\n        /* \"#utility.yul\":14623:14635   */\n      add\n        /* \"#utility.yul\":14616:14635   */\n      swap1\n      pop\n        /* \"#utility.yul\":14276:14641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14647:15066   */\n    tag_82:\n        /* \"#utility.yul\":14813:14817   */\n      0x00\n        /* \"#utility.yul\":14851:14853   */\n      0x20\n        /* \"#utility.yul\":14840:14849   */\n      dup3\n        /* \"#utility.yul\":14836:14854   */\n      add\n        /* \"#utility.yul\":14828:14854   */\n      swap1\n      pop\n        /* \"#utility.yul\":14900:14909   */\n      dup2\n        /* \"#utility.yul\":14894:14898   */\n      dup2\n        /* \"#utility.yul\":14890:14910   */\n      sub\n        /* \"#utility.yul\":14886:14887   */\n      0x00\n        /* \"#utility.yul\":14875:14884   */\n      dup4\n        /* \"#utility.yul\":14871:14888   */\n      add\n        /* \"#utility.yul\":14864:14911   */\n      mstore\n        /* \"#utility.yul\":14928:15059   */\n      tag_279\n        /* \"#utility.yul\":15054:15058   */\n      dup2\n        /* \"#utility.yul\":14928:15059   */\n      tag_134\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":14920:15059   */\n      swap1\n      pop\n        /* \"#utility.yul\":14647:15066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15072:15224   */\n    tag_135:\n        /* \"#utility.yul\":15212:15216   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15208:15209   */\n      0x00\n        /* \"#utility.yul\":15200:15206   */\n      dup3\n        /* \"#utility.yul\":15196:15210   */\n      add\n        /* \"#utility.yul\":15189:15217   */\n      mstore\n        /* \"#utility.yul\":15072:15224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15230:15595   */\n    tag_136:\n        /* \"#utility.yul\":15372:15375   */\n      0x00\n        /* \"#utility.yul\":15393:15459   */\n      tag_282\n        /* \"#utility.yul\":15457:15458   */\n      0x02\n        /* \"#utility.yul\":15452:15455   */\n      dup4\n        /* \"#utility.yul\":15393:15459   */\n      tag_130\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":15386:15459   */\n      swap2\n      pop\n        /* \"#utility.yul\":15468:15561   */\n      tag_283\n        /* \"#utility.yul\":15557:15560   */\n      dup3\n        /* \"#utility.yul\":15468:15561   */\n      tag_135\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":15586:15588   */\n      0x20\n        /* \"#utility.yul\":15581:15584   */\n      dup3\n        /* \"#utility.yul\":15577:15589   */\n      add\n        /* \"#utility.yul\":15570:15589   */\n      swap1\n      pop\n        /* \"#utility.yul\":15230:15595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15601:16020   */\n    tag_94:\n        /* \"#utility.yul\":15767:15771   */\n      0x00\n        /* \"#utility.yul\":15805:15807   */\n      0x20\n        /* \"#utility.yul\":15794:15803   */\n      dup3\n        /* \"#utility.yul\":15790:15808   */\n      add\n        /* \"#utility.yul\":15782:15808   */\n      swap1\n      pop\n        /* \"#utility.yul\":15854:15863   */\n      dup2\n        /* \"#utility.yul\":15848:15852   */\n      dup2\n        /* \"#utility.yul\":15844:15864   */\n      sub\n        /* \"#utility.yul\":15840:15841   */\n      0x00\n        /* \"#utility.yul\":15829:15838   */\n      dup4\n        /* \"#utility.yul\":15825:15842   */\n      add\n        /* \"#utility.yul\":15818:15865   */\n      mstore\n        /* \"#utility.yul\":15882:16013   */\n      tag_285\n        /* \"#utility.yul\":16008:16012   */\n      dup2\n        /* \"#utility.yul\":15882:16013   */\n      tag_136\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":15874:16013   */\n      swap1\n      pop\n        /* \"#utility.yul\":15601:16020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207d69a462a00f2ed775e68012dbf2b7626acd12dfe88d51d7746a6d8657a7140f64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ISwapRouter_$191": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ISwapRouter_$191": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1434:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "642:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ISwapRouter_$191",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "624:7:5",
														"type": ""
													}
												],
												"src": "568:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "751:98:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "827:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ISwapRouter_$191",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "764:62:5"
															},
															"nodeType": "YulIf",
															"src": "761:82:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_ISwapRouter_$191",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "744:5:5",
														"type": ""
													}
												],
												"src": "689:160:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "937:99:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "947:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ISwapRouter_$191",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:52:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "923:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "931:5:5",
														"type": ""
													}
												],
												"src": "855:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1138:293:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1184:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:32:5"
															},
															"nodeType": "YulIf",
															"src": "1148:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:147:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1321:93:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ISwapRouter_$191_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1108:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1119:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1131:6:5",
														"type": ""
													}
												],
												"src": "1042:389:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b506040516200122e3803806200122e8339818101604052810190620000379190620000f0565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b6000620000b88262000097565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000072565b5b60006200011984828501620000d9565b91505092915050565b6080516110cd620001616000396000818161014201528181610206015281816102ae0152818161030c015281816103f701526104b501526110cd6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634aa4a4fc1461005c5780639b56d8911461007a578063c31c9c07146100aa578063dc236ce6146100c8578063e0bab4c4146100f8575b600080fd5b610064610116565b6040516100719190610969565b60405180910390f35b610094600480360381019061008f9190610a26565b61012e565b6040516100a19190610ab0565b60405180910390f35b6100b26102ac565b6040516100bf9190610b2a565b60405180910390f35b6100e260048036038101906100dd9190610b45565b6102d0565b6040516100ef9190610ab0565b60405180910390f35b61010061050e565b60405161010d9190610969565b60405180910390f35b739c3c9283d3e44854697cd22d3faa240cfb03288981565b600061013c84333088610526565b610167847f00000000000000000000000000000000000000000000000000000000000000008761067e565b60006040518061010001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200142815260200187815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161025d9190610c76565b6020604051808303816000875af115801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a09190610ca7565b91505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006102f2736b175474e89094c44da98b954eedeac495271d0f333085610526565b610331736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000008461067e565b6000604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001739c3c9283d3e44854697cd22d3faa240cfb03288973ffffffffffffffffffffffffffffffffffffffff1681526020018662ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b815260040161044e9190610d76565b6020604051808303816000875af115801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610ca7565b915082821015610506576104db736b175474e89094c44da98b954eedeac495271d0f7f0000000000000000000000000000000000000000000000000000000000000000600061067e565b610505736b175474e89094c44da98b954eedeac495271d0f3384866105009190610dc1565b6107d3565b5b509392505050565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161055d93929190610df5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105c79190610e9d565b6000604051808303816000865af19150503d8060008114610604576040519150601f19603f3d011682016040523d82523d6000602084013e610609565b606091505b509150915081801561063757506000815114806106365750808060200190518101906106359190610eec565b5b5b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610f76565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016106b3929190610f96565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161071d9190610e9d565b6000604051808303816000865af19150503d806000811461075a576040519150601f19603f3d011682016040523d82523d6000602084013e61075f565b606091505b509150915081801561078d575060008151148061078c57508080602001905181019061078b9190610eec565b5b5b6107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c39061100b565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610808929190610f96565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108729190610e9d565b6000604051808303816000865af19150503d80600081146108af576040519150601f19603f3d011682016040523d82523d6000602084013e6108b4565b606091505b50915091508180156108e257506000815114806108e15750808060200190518101906108e09190610eec565b5b5b610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611077565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095382610928565b9050919050565b61096381610948565b82525050565b600060208201905061097e600083018461095a565b92915050565b600080fd5b600062ffffff82169050919050565b6109a181610989565b81146109ac57600080fd5b50565b6000813590506109be81610998565b92915050565b6000819050919050565b6109d7816109c4565b81146109e257600080fd5b50565b6000813590506109f4816109ce565b92915050565b610a0381610948565b8114610a0e57600080fd5b50565b600081359050610a20816109fa565b92915050565b600080600080600060a08688031215610a4257610a41610984565b5b6000610a50888289016109af565b9550506020610a61888289016109e5565b9450506040610a7288828901610a11565b9350506060610a8388828901610a11565b9250506080610a9488828901610a11565b9150509295509295909350565b610aaa816109c4565b82525050565b6000602082019050610ac56000830184610aa1565b92915050565b6000819050919050565b6000610af0610aeb610ae684610928565b610acb565b610928565b9050919050565b6000610b0282610ad5565b9050919050565b6000610b1482610af7565b9050919050565b610b2481610b09565b82525050565b6000602082019050610b3f6000830184610b1b565b92915050565b600080600060608486031215610b5e57610b5d610984565b5b6000610b6c868287016109af565b9350506020610b7d868287016109e5565b9250506040610b8e868287016109e5565b9150509250925092565b610ba181610948565b82525050565b610bb081610989565b82525050565b610bbf816109c4565b82525050565b610bce81610928565b82525050565b61010082016000820151610beb6000850182610b98565b506020820151610bfe6020850182610b98565b506040820151610c116040850182610ba7565b506060820151610c246060850182610b98565b506080820151610c376080850182610bb6565b5060a0820151610c4a60a0850182610bb6565b5060c0820151610c5d60c0850182610bb6565b5060e0820151610c7060e0850182610bc5565b50505050565b600061010082019050610c8c6000830184610bd4565b92915050565b600081519050610ca1816109ce565b92915050565b600060208284031215610cbd57610cbc610984565b5b6000610ccb84828501610c92565b91505092915050565b61010082016000820151610ceb6000850182610b98565b506020820151610cfe6020850182610b98565b506040820151610d116040850182610ba7565b506060820151610d246060850182610b98565b506080820151610d376080850182610bb6565b5060a0820151610d4a60a0850182610bb6565b5060c0820151610d5d60c0850182610bb6565b5060e0820151610d7060e0850182610bc5565b50505050565b600061010082019050610d8c6000830184610cd4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dcc826109c4565b9150610dd7836109c4565b9250828203905081811115610def57610dee610d92565b5b92915050565b6000606082019050610e0a600083018661095a565b610e17602083018561095a565b610e246040830184610aa1565b949350505050565b600081519050919050565b600081905092915050565b60005b83811015610e60578082015181840152602081019050610e45565b60008484015250505050565b6000610e7782610e2c565b610e818185610e37565b9350610e91818560208601610e42565b80840191505092915050565b6000610ea98284610e6c565b915081905092915050565b60008115159050919050565b610ec981610eb4565b8114610ed457600080fd5b50565b600081519050610ee681610ec0565b92915050565b600060208284031215610f0257610f01610984565b5b6000610f1084828501610ed7565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610f60600383610f19565b9150610f6b82610f2a565b602082019050919050565b60006020820190508181036000830152610f8f81610f53565b9050919050565b6000604082019050610fab600083018561095a565b610fb86020830184610aa1565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ff5600283610f19565b915061100082610fbf565b602082019050919050565b6000602082019050818103600083015261102481610fe8565b9050919050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b6000611061600283610f19565b915061106c8261102b565b602082019050919050565b6000602082019050818103600083015261109081611054565b905091905056fea26469706673582212207d69a462a00f2ed775e68012dbf2b7626acd12dfe88d51d7746a6d8657a7140f64736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x122E CODESIZE SUB DUP1 PUSH3 0x122E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xF0 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x122 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA4 DUP3 PUSH3 0x77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB8 DUP3 PUSH3 0x97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xCA DUP2 PUSH3 0xAB JUMP JUMPDEST DUP2 EQ PUSH3 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xEA DUP2 PUSH3 0xBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x109 JUMPI PUSH3 0x108 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x119 DUP5 DUP3 DUP6 ADD PUSH3 0xD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x10CD PUSH3 0x161 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x142 ADD MSTORE DUP2 DUP2 PUSH2 0x206 ADD MSTORE DUP2 DUP2 PUSH2 0x2AE ADD MSTORE DUP2 DUP2 PUSH2 0x30C ADD MSTORE DUP2 DUP2 PUSH2 0x3F7 ADD MSTORE PUSH2 0x4B5 ADD MSTORE PUSH2 0x10CD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9B56D891 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xDC236CE6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP5 CALLER ADDRESS DUP9 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x167 DUP5 PUSH32 0x0 DUP8 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP6 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x331 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP5 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x506 JUMPI PUSH2 0x4DB PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 PUSH1 0x0 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x505 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER DUP5 DUP7 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x55D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x609 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x637 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x636 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6B3 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x78D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x78C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x78B SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x808 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8E2 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x8E1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x918 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x953 DUP3 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A1 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP2 EQ PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BE DUP2 PUSH2 0x998 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0x9C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9F4 DUP2 PUSH2 0x9CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP2 EQ PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA20 DUP2 PUSH2 0x9FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA50 DUP9 DUP3 DUP10 ADD PUSH2 0x9AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA61 DUP9 DUP3 DUP10 ADD PUSH2 0x9E5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xA72 DUP9 DUP3 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xA83 DUP9 DUP3 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xA94 DUP9 DUP3 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0x9C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 PUSH2 0xAEB PUSH2 0xAE6 DUP5 PUSH2 0x928 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 DUP3 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB24 DUP2 PUSH2 0xB09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB5E JUMPI PUSH2 0xB5D PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB6C DUP7 DUP3 DUP8 ADD PUSH2 0x9AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB7D DUP7 DUP3 DUP8 ADD PUSH2 0x9E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB8E DUP7 DUP3 DUP8 ADD PUSH2 0x9E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xBA1 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBB0 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0x9C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBCE DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xBEB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBFE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC11 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBA7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC24 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xC37 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xC4A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xC5D PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xC70 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBC5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xC8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA1 DUP2 PUSH2 0x9CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCCB DUP5 DUP3 DUP6 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xCEB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCFE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD11 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBA7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xD24 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xD37 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xD4A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xD5D PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xD70 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBC5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xD8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDCC DUP3 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD7 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xD92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE0A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xE17 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xE24 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE60 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE77 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xE81 DUP2 DUP6 PUSH2 0xE37 JUMP JUMPDEST SWAP4 POP PUSH2 0xE91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE42 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA9 DUP3 DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC9 DUP2 PUSH2 0xEB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEE6 DUP2 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH2 0xF01 PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP5 DUP3 DUP6 ADD PUSH2 0xED7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 PUSH1 0x3 DUP4 PUSH2 0xF19 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B DUP3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8F DUP2 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xFB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 PUSH1 0x2 DUP4 PUSH2 0xF19 JUMP JUMPDEST SWAP2 POP PUSH2 0x1000 DUP3 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1024 DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1061 PUSH1 0x2 DUP4 PUSH2 0xF19 JUMP JUMPDEST SWAP2 POP PUSH2 0x106C DUP3 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1090 DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x69A462A00F2ED775E68012DBF2B7626ACD12DFE88D51D7746A6D8657A714 0xF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "232:4986:4:-:0;;;1184:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1244:11;1231:24;;;;;;;;;;1184:78;232:4986;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;232:4986:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_373": {
									"entryPoint": 1294,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH9_376": {
									"entryPoint": 278,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_335": {
									"entryPoint": 1662,
									"id": 335,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_243": {
									"entryPoint": 1318,
									"id": 243,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_289": {
									"entryPoint": 2003,
									"id": 289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapExactInputSingle_453": {
									"entryPoint": 302,
									"id": 453,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@swapExactOutputSingle_543": {
									"entryPoint": 720,
									"id": 543,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swapRouter_370": {
									"entryPoint": 684,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint24t_uint256t_addresst_addresst_address": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint24t_uint256t_uint256": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed": {
									"entryPoint": 2858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed": {
									"entryPoint": 3190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$191_to_t_address": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16023:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:5",
														"type": ""
													}
												],
												"src": "593:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "964:47:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "974:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "989:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "996:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "974:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "946:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "956:7:5",
														"type": ""
													}
												],
												"src": "920:91:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1115:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1124:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1127:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1117:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1117:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1117:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1082:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1106:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "1089:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1089:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1079:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1079:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1072:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:42:5"
															},
															"nodeType": "YulIf",
															"src": "1069:62:5"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:5",
														"type": ""
													}
												],
												"src": "1017:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1194:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1204:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1226:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1213:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1204:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1268:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "1242:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:32:5"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1172:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1180:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1188:5:5",
														"type": ""
													}
												],
												"src": "1143:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1341:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1352:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1341:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1323:7:5",
														"type": ""
													}
												],
												"src": "1286:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1412:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1469:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1471:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1435:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1460:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1442:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1442:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1432:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1425:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:43:5"
															},
															"nodeType": "YulIf",
															"src": "1422:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1405:5:5",
														"type": ""
													}
												],
												"src": "1369:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1549:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1559:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1568:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1559:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1624:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1597:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1527:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1535:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1543:5:5",
														"type": ""
													}
												],
												"src": "1497:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1742:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1751:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1754:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1744:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1744:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1744:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1733:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1715:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1715:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1705:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1705:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1698:43:5"
															},
															"nodeType": "YulIf",
															"src": "1695:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1678:5:5",
														"type": ""
													}
												],
												"src": "1642:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1822:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1832:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1854:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1841:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1832:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1897:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1870:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1870:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1800:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1808:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1816:5:5",
														"type": ""
													}
												],
												"src": "1770:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:776:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2095:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2097:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2097:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2097:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:33:5"
															},
															"nodeType": "YulIf",
															"src": "2058:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2188:116:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2203:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2207:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2232:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2266:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2277:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2262:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2262:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2286:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "2242:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2242:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2232:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2314:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2343:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2394:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2405:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2390:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2390:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2414:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2369:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2442:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2457:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2471:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2461:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2487:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2522:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2533:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2518:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2518:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2542:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2497:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2497:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2487:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2570:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2585:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2599:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2589:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2615:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2650:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2661:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2646:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2646:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2625:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2625:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2615:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2698:119:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2713:17:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2727:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2717:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2744:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2779:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2790:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2775:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2775:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2799:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2754:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2744:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24t_uint256t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1986:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1997:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2009:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2017:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2025:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2033:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2041:6:5",
														"type": ""
													}
												],
												"src": "1915:909:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2895:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2912:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2935:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2917:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2905:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2905:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2883:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2890:3:5",
														"type": ""
													}
												],
												"src": "2830:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3052:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3062:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3074:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3085:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3070:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3062:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3142:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3166:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3098:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3098:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3024:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3036:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3047:4:5",
														"type": ""
													}
												],
												"src": "2954:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3214:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3224:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3231:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3224:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3200:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3210:3:5",
														"type": ""
													}
												],
												"src": "3182:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3308:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3318:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3376:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3358:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3358:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3349:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3331:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3318:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3288:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3298:9:5",
														"type": ""
													}
												],
												"src": "3248:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3466:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3510:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3479:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3466:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3436:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3446:9:5",
														"type": ""
													}
												],
												"src": "3396:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3617:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3661:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3630:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3617:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3587:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3597:9:5",
														"type": ""
													}
												],
												"src": "3528:145:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3763:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3835:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$191_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3785:49:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3785:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3773:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3751:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3758:3:5",
														"type": ""
													}
												],
												"src": "3679:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3971:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3981:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3993:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4004:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3989:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3989:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3981:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4080:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4093:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4089:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4017:62:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:90:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4017:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3943:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3955:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3966:4:5",
														"type": ""
													}
												],
												"src": "3854:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4219:518:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4265:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4267:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4267:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4267:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4240:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4249:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4236:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4236:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4232:32:5"
															},
															"nodeType": "YulIf",
															"src": "4229:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4358:116:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4373:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4377:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4402:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "4412:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4412:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4402:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4484:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4499:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4503:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4529:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4564:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4575:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4560:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4560:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4584:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4539:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4539:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4529:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4612:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4627:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4641:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4631:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4657:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4692:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4703:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4688:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4688:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4712:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4667:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4657:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4173:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4184:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4196:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4204:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4212:6:5",
														"type": ""
													}
												],
												"src": "4120:617:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4798:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4815:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4838:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4820:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4820:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4808:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4808:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4786:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4793:3:5",
														"type": ""
													}
												],
												"src": "4743:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4910:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4927:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "4932:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4920:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4898:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4905:3:5",
														"type": ""
													}
												],
												"src": "4857:105:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5023:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5040:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5063:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5045:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5045:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5033:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5011:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5018:3:5",
														"type": ""
													}
												],
												"src": "4968:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5137:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5154:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5177:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "5159:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5159:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5125:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5132:3:5",
														"type": ""
													}
												],
												"src": "5082:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5434:1479:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5444:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5460:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5465:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5448:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5482:167:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5520:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5550:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5557:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5546:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5546:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5540:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5540:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5524:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5610:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5628:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5633:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5624:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5624:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5576:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5576:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5576:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5659:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5698:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5728:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5735:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5724:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5724:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5718:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5718:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5702:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5788:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5806:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5811:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5802:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5802:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5754:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5754:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5754:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5837:161:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5871:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5901:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5908:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5897:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5897:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5891:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5891:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5875:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5959:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5977:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5982:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5973:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5973:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "5927:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:61:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5927:61:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6008:169:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6048:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6078:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6085:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6074:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6074:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6068:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6068:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6052:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6138:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6156:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6161:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6152:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6152:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6104:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6104:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6187:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6226:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6256:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6263:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6252:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6252:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6246:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6246:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6230:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6316:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6334:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6339:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6330:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6330:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6282:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6282:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6282:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6365:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6404:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6434:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6441:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6430:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6430:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6424:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6424:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6408:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6494:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6512:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6517:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6508:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6508:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6460:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6460:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6543:176:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6620:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6627:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6616:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6616:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6610:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6610:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6594:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6680:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6698:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6703:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6694:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6694:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6646:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6646:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6646:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6729:177:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6777:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6807:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6814:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6803:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6803:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6797:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6781:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6867:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6885:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6890:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6881:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6881:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "6833:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6833:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6833:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5421:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5428:3:5",
														"type": ""
													}
												],
												"src": "5290:1623:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7095:203:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7105:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7117:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7128:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7113:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7105:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7264:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7277:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7288:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7273:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7142:121:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7142:149:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7142:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7067:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7090:4:5",
														"type": ""
													}
												],
												"src": "6919:379:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7367:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7377:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7392:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7386:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7377:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7435:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7408:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7408:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7408:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7345:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7353:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7361:5:5",
														"type": ""
													}
												],
												"src": "7304:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7530:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7576:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7578:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7578:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7578:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7551:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7560:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7547:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7547:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7572:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7543:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7543:32:5"
															},
															"nodeType": "YulIf",
															"src": "7540:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "7669:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7684:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7698:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7688:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7713:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7759:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7770:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7755:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7755:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7779:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7723:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7713:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7500:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7511:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7523:6:5",
														"type": ""
													}
												],
												"src": "7453:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8052:1479:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8062:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8078:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8083:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8074:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "8066:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8100:167:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8138:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8168:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8175:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8164:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8164:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8158:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8158:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8142:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8228:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8246:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8251:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8242:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8242:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8194:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8194:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8194:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8277:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8316:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8346:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8353:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8342:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8342:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8336:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8336:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8320:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8406:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8424:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8429:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8420:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8420:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8372:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8372:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8372:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8455:161:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8489:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8519:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8526:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8515:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8515:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8509:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8509:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8493:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8577:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8595:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8600:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8591:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8591:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "8545:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8545:61:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8545:61:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8626:169:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8666:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8696:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8703:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8692:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8692:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8686:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8686:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8670:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8756:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8774:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8779:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8770:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8770:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8722:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8722:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8722:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8805:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8844:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8874:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8881:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8870:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8870:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8864:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8864:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "8848:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8934:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8952:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8957:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8948:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8948:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8900:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8900:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8900:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8983:169:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9023:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9053:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9060:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9049:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9049:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9043:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9043:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9027:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9113:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9131:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9136:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9127:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9127:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9079:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9079:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9079:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9162:175:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9208:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9238:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9245:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9234:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9228:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9212:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9298:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9316:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9321:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9312:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9312:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9264:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9264:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9264:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9347:177:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9395:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9425:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9432:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9421:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9421:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9415:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9415:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9399:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9485:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9503:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9508:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9499:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9499:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "9451:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9451:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9451:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8039:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8046:3:5",
														"type": ""
													}
												],
												"src": "7906:1625:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9715:205:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9725:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9737:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9748:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9725:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9886:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9899:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9910:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9895:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9895:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9762:123:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9762:151:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9762:151:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9687:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9699:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9710:4:5",
														"type": ""
													}
												],
												"src": "9537:383:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9954:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9971:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9974:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9964:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9964:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10068:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10071:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10061:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10061:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10092:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10095:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10085:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9926:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10157:149:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10167:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10190:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10172:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10172:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10167:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10201:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10224:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10206:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10206:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10201:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10235:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10247:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10250:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10243:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10243:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10235:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10277:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10279:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10279:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10279:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10268:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10274:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10265:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10265:11:5"
															},
															"nodeType": "YulIf",
															"src": "10262:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10143:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10146:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10152:4:5",
														"type": ""
													}
												],
												"src": "10112:194:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10466:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10476:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10488:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10484:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10484:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10476:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10556:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10569:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10580:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10565:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10565:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10512:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10512:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10512:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10637:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10650:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10661:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10646:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10646:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10593:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10593:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10593:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10719:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10732:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10743:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10728:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10728:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10675:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10675:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10675:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10422:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10434:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10442:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10450:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10461:4:5",
														"type": ""
													}
												],
												"src": "10312:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10818:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10829:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10845:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10839:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10829:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10801:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10811:6:5",
														"type": ""
													}
												],
												"src": "10760:98:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10977:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10987:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11002:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10987:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10949:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10954:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10965:11:5",
														"type": ""
													}
												],
												"src": "10864:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11089:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11098:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11093:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11158:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11183:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11188:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11179:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11179:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11202:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11207:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11198:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11198:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11192:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11192:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11172:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11172:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11172:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11119:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11116:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11116:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11130:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11132:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11141:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11144:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11137:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11137:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11132:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11112:3:5",
																"statements": []
															},
															"src": "11108:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11241:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11246:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11237:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11237:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11255:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11230:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11230:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11061:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11066:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11071:6:5",
														"type": ""
													}
												],
												"src": "11017:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11377:278:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11387:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11433:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11401:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11391:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11448:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11531:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11536:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11455:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11455:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11448:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11591:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11598:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11587:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11587:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11605:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11610:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11552:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11552:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11552:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11626:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11637:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11642:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11633:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11626:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11358:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11365:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11373:3:5",
														"type": ""
													}
												],
												"src": "11269:386:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11795:137:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11806:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11893:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11902:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11813:79:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11813:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11806:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11916:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11923:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11916:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11774:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11780:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11791:3:5",
														"type": ""
													}
												],
												"src": "11661:271:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11980:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11990:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12015:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12008:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12008:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12001:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11990:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11962:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11972:7:5",
														"type": ""
													}
												],
												"src": "11938:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12074:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12128:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12137:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12140:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12130:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12130:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12130:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12097:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12119:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12104:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12104:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12094:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12094:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12087:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:40:5"
															},
															"nodeType": "YulIf",
															"src": "12084:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12067:5:5",
														"type": ""
													}
												],
												"src": "12034:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12216:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12226:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12241:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12235:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12226:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12281:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12257:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12257:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12257:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12194:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12202:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12210:5:5",
														"type": ""
													}
												],
												"src": "12156:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12373:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12419:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12421:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12421:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12421:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12394:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12403:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12390:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12390:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12415:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12386:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12386:32:5"
															},
															"nodeType": "YulIf",
															"src": "12383:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "12512:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12527:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12541:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12531:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12556:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12599:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12610:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12595:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12595:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12619:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12566:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12566:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12556:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12343:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12354:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12366:6:5",
														"type": ""
													}
												],
												"src": "12299:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12746:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12763:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12768:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12756:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12756:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12756:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12784:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12803:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12808:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12799:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12799:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12784:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12718:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12723:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12734:11:5",
														"type": ""
													}
												],
												"src": "12650:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12931:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12953:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12961:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12949:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12949:14:5"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12965:5:5",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12942:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12942:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12942:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12923:6:5",
														"type": ""
													}
												],
												"src": "12825:153:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13130:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13140:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13206:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13211:1:5",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13147:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13147:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13140:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13311:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																	"nodeType": "YulIdentifier",
																	"src": "13222:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13222:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13222:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13324:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13335:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13340:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13331:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13324:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13118:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13126:3:5",
														"type": ""
													}
												],
												"src": "12984:365:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13526:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13536:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13548:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13559:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13544:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13544:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13536:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13583:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13594:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13579:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13579:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13602:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13608:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13598:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13598:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13572:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13572:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13572:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13628:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13762:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13636:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13628:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13506:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13521:4:5",
														"type": ""
													}
												],
												"src": "13355:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13906:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13916:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13928:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13939:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13924:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13924:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13916:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13996:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14009:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14020:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14005:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14005:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13952:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13952:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13952:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14077:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14090:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14101:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14086:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14086:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14033:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14033:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14033:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13870:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13882:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13890:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13901:4:5",
														"type": ""
													}
												],
												"src": "13780:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14224:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14246:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14254:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14242:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14242:14:5"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14258:4:5",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14235:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14235:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14235:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14216:6:5",
														"type": ""
													}
												],
												"src": "14118:152:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14422:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14432:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14498:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14503:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14439:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14439:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14432:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14603:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nodeType": "YulIdentifier",
																	"src": "14514:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14514:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14514:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14616:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14627:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14632:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14623:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14616:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14410:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14418:3:5",
														"type": ""
													}
												],
												"src": "14276:365:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14818:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14828:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14840:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14851:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14836:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14836:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14828:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14875:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14886:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14871:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14871:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14894:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14900:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14890:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14890:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14864:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14864:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14864:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14920:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15054:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14928:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14928:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14920:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14798:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14813:4:5",
														"type": ""
													}
												],
												"src": "14647:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15178:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15200:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15208:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15196:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15196:14:5"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15212:4:5",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15189:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15189:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15189:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15170:6:5",
														"type": ""
													}
												],
												"src": "15072:152:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15376:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15386:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15452:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15457:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15393:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15393:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15386:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15557:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nodeType": "YulIdentifier",
																	"src": "15468:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15468:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15468:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15570:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15581:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15586:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15577:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15577:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15570:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15364:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15372:3:5",
														"type": ""
													}
												],
												"src": "15230:365:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15772:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15782:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15794:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15805:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15790:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15790:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15782:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15829:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15840:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15825:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15825:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15848:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15854:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15844:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15844:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15818:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15818:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15818:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15874:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16008:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15882:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15882:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15874:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15752:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15767:4:5",
														"type": ""
													}
												],
												"src": "15601:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint24t_uint256t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint24t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$161_memory_ptr__to_t_struct$_ExactOutputSingleParams_$161_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$161_memory_ptr_to_t_struct$_ExactOutputSingleParams_$161_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"STF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"370": [
									{
										"length": 32,
										"start": 322
									},
									{
										"length": 32,
										"start": 518
									},
									{
										"length": 32,
										"start": 686
									},
									{
										"length": 32,
										"start": 780
									},
									{
										"length": 32,
										"start": 1015
									},
									{
										"length": 32,
										"start": 1205
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80634aa4a4fc1461005c5780639b56d8911461007a578063c31c9c07146100aa578063dc236ce6146100c8578063e0bab4c4146100f8575b600080fd5b610064610116565b6040516100719190610969565b60405180910390f35b610094600480360381019061008f9190610a26565b61012e565b6040516100a19190610ab0565b60405180910390f35b6100b26102ac565b6040516100bf9190610b2a565b60405180910390f35b6100e260048036038101906100dd9190610b45565b6102d0565b6040516100ef9190610ab0565b60405180910390f35b61010061050e565b60405161010d9190610969565b60405180910390f35b739c3c9283d3e44854697cd22d3faa240cfb03288981565b600061013c84333088610526565b610167847f00000000000000000000000000000000000000000000000000000000000000008761067e565b60006040518061010001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200142815260200187815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161025d9190610c76565b6020604051808303816000875af115801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a09190610ca7565b91505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006102f2736b175474e89094c44da98b954eedeac495271d0f333085610526565b610331736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000008461067e565b6000604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001739c3c9283d3e44854697cd22d3faa240cfb03288973ffffffffffffffffffffffffffffffffffffffff1681526020018662ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b815260040161044e9190610d76565b6020604051808303816000875af115801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610ca7565b915082821015610506576104db736b175474e89094c44da98b954eedeac495271d0f7f0000000000000000000000000000000000000000000000000000000000000000600061067e565b610505736b175474e89094c44da98b954eedeac495271d0f3384866105009190610dc1565b6107d3565b5b509392505050565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161055d93929190610df5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105c79190610e9d565b6000604051808303816000865af19150503d8060008114610604576040519150601f19603f3d011682016040523d82523d6000602084013e610609565b606091505b509150915081801561063757506000815114806106365750808060200190518101906106359190610eec565b5b5b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610f76565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016106b3929190610f96565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161071d9190610e9d565b6000604051808303816000865af19150503d806000811461075a576040519150601f19603f3d011682016040523d82523d6000602084013e61075f565b606091505b509150915081801561078d575060008151148061078c57508080602001905181019061078b9190610eec565b5b5b6107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c39061100b565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610808929190610f96565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108729190610e9d565b6000604051808303816000865af19150503d80600081146108af576040519150601f19603f3d011682016040523d82523d6000602084013e6108b4565b606091505b50915091508180156108e257506000815114806108e15750808060200190518101906108e09190610eec565b5b5b610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611077565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095382610928565b9050919050565b61096381610948565b82525050565b600060208201905061097e600083018461095a565b92915050565b600080fd5b600062ffffff82169050919050565b6109a181610989565b81146109ac57600080fd5b50565b6000813590506109be81610998565b92915050565b6000819050919050565b6109d7816109c4565b81146109e257600080fd5b50565b6000813590506109f4816109ce565b92915050565b610a0381610948565b8114610a0e57600080fd5b50565b600081359050610a20816109fa565b92915050565b600080600080600060a08688031215610a4257610a41610984565b5b6000610a50888289016109af565b9550506020610a61888289016109e5565b9450506040610a7288828901610a11565b9350506060610a8388828901610a11565b9250506080610a9488828901610a11565b9150509295509295909350565b610aaa816109c4565b82525050565b6000602082019050610ac56000830184610aa1565b92915050565b6000819050919050565b6000610af0610aeb610ae684610928565b610acb565b610928565b9050919050565b6000610b0282610ad5565b9050919050565b6000610b1482610af7565b9050919050565b610b2481610b09565b82525050565b6000602082019050610b3f6000830184610b1b565b92915050565b600080600060608486031215610b5e57610b5d610984565b5b6000610b6c868287016109af565b9350506020610b7d868287016109e5565b9250506040610b8e868287016109e5565b9150509250925092565b610ba181610948565b82525050565b610bb081610989565b82525050565b610bbf816109c4565b82525050565b610bce81610928565b82525050565b61010082016000820151610beb6000850182610b98565b506020820151610bfe6020850182610b98565b506040820151610c116040850182610ba7565b506060820151610c246060850182610b98565b506080820151610c376080850182610bb6565b5060a0820151610c4a60a0850182610bb6565b5060c0820151610c5d60c0850182610bb6565b5060e0820151610c7060e0850182610bc5565b50505050565b600061010082019050610c8c6000830184610bd4565b92915050565b600081519050610ca1816109ce565b92915050565b600060208284031215610cbd57610cbc610984565b5b6000610ccb84828501610c92565b91505092915050565b61010082016000820151610ceb6000850182610b98565b506020820151610cfe6020850182610b98565b506040820151610d116040850182610ba7565b506060820151610d246060850182610b98565b506080820151610d376080850182610bb6565b5060a0820151610d4a60a0850182610bb6565b5060c0820151610d5d60c0850182610bb6565b5060e0820151610d7060e0850182610bc5565b50505050565b600061010082019050610d8c6000830184610cd4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dcc826109c4565b9150610dd7836109c4565b9250828203905081811115610def57610dee610d92565b5b92915050565b6000606082019050610e0a600083018661095a565b610e17602083018561095a565b610e246040830184610aa1565b949350505050565b600081519050919050565b600081905092915050565b60005b83811015610e60578082015181840152602081019050610e45565b60008484015250505050565b6000610e7782610e2c565b610e818185610e37565b9350610e91818560208601610e42565b80840191505092915050565b6000610ea98284610e6c565b915081905092915050565b60008115159050919050565b610ec981610eb4565b8114610ed457600080fd5b50565b600081519050610ee681610ec0565b92915050565b600060208284031215610f0257610f01610984565b5b6000610f1084828501610ed7565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610f60600383610f19565b9150610f6b82610f2a565b602082019050919050565b60006020820190508181036000830152610f8f81610f53565b9050919050565b6000604082019050610fab600083018561095a565b610fb86020830184610aa1565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ff5600283610f19565b915061100082610fbf565b602082019050919050565b6000602082019050818103600083015261102481610fe8565b9050919050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b6000611061600283610f19565b915061106c8261102b565b602082019050919050565b6000602082019050818103600083015261109081611054565b905091905056fea26469706673582212207d69a462a00f2ed775e68012dbf2b7626acd12dfe88d51d7746a6d8657a7140f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9B56D891 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xDC236CE6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP5 CALLER ADDRESS DUP9 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x167 DUP5 PUSH32 0x0 DUP8 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER ADDRESS DUP6 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x331 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 DUP5 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x9C3C9283D3E44854697CD22D3FAA240CFB032889 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x506 JUMPI PUSH2 0x4DB PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH32 0x0 PUSH1 0x0 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x505 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F CALLER DUP5 DUP7 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x55D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x609 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x637 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x636 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6B3 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x78D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x78C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x78B SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x808 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8E2 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x8E1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x918 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x953 DUP3 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A1 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP2 EQ PUSH2 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BE DUP2 PUSH2 0x998 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0x9C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9F4 DUP2 PUSH2 0x9CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP2 EQ PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA20 DUP2 PUSH2 0x9FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA50 DUP9 DUP3 DUP10 ADD PUSH2 0x9AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA61 DUP9 DUP3 DUP10 ADD PUSH2 0x9E5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xA72 DUP9 DUP3 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xA83 DUP9 DUP3 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xA94 DUP9 DUP3 DUP10 ADD PUSH2 0xA11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0x9C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 PUSH2 0xAEB PUSH2 0xAE6 DUP5 PUSH2 0x928 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 DUP3 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB24 DUP2 PUSH2 0xB09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB5E JUMPI PUSH2 0xB5D PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB6C DUP7 DUP3 DUP8 ADD PUSH2 0x9AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB7D DUP7 DUP3 DUP8 ADD PUSH2 0x9E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB8E DUP7 DUP3 DUP8 ADD PUSH2 0x9E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xBA1 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBB0 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0x9C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBCE DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xBEB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBFE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xC11 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBA7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC24 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xC37 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xC4A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xC5D PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xC70 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBC5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xC8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA1 DUP2 PUSH2 0x9CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCCB DUP5 DUP3 DUP6 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xCEB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCFE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD11 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBA7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xD24 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB98 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xD37 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xD4A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xD5D PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xBB6 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xD70 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xBC5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xD8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDCC DUP3 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD7 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xD92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE0A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xE17 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xE24 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE60 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE77 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xE81 DUP2 DUP6 PUSH2 0xE37 JUMP JUMPDEST SWAP4 POP PUSH2 0xE91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE42 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA9 DUP3 DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC9 DUP2 PUSH2 0xEB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEE6 DUP2 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH2 0xF01 PUSH2 0x984 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP5 DUP3 DUP6 ADD PUSH2 0xED7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5354460000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 PUSH1 0x3 DUP4 PUSH2 0xF19 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B DUP3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8F DUP2 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xFB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 PUSH1 0x2 DUP4 PUSH2 0xF19 JUMP JUMPDEST SWAP2 POP PUSH2 0x1000 DUP3 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1024 DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1061 PUSH1 0x2 DUP4 PUSH2 0xF19 JUMP JUMPDEST SWAP2 POP PUSH2 0x106C DUP3 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1090 DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x69A462A00F2ED775E68012DBF2B7626ACD12DFE88D51D7746A6D8657A714 0xF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "232:4986:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1732:1232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;691:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3592:1624;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;837:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;915:74;947:42;915:74;:::o;1732:1232::-;1856:17;2001:74;2033:4;2039:10;2059:4;2066:8;2001:31;:74::i;:::-;2130:63;2157:4;2171:10;2184:8;2130:26;:63::i;:::-;2441:48;2504:334;;;;;;;;2566:4;2504:334;;;;;;2598:4;2504:334;;;;;;2625:7;2504:334;;;;;;2661:8;2504:334;;;;;;2697:15;2504:334;;;;2740:8;2504:334;;;;2784:1;2504:334;;;;2822:1;2504:334;;;;;2441:397;;2922:10;:27;;;2950:6;2922:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2910:47;;1875:1089;1732:1232;;;;;;;:::o;691:39::-;;;:::o;3592:1624::-;3700:16;3794:80;867:42;3831:10;3851:4;3858:15;3794:31;:80::i;:::-;4100:69;867:42;4140:10;4153:15;4100:26;:69::i;:::-;4180:49;4244:352;;;;;;;;867:42;4244:352;;;;;;947:42;4244:352;;;;;;4366:7;4244:352;;;;;;4402:10;4244:352;;;;;;4440:15;4244:352;;;;4484:9;4244:352;;;;4528:15;4244:352;;;;4580:1;4244:352;;;;;4180:416;;4720:10;:28;;;4749:6;4720:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4709:47;;5027:15;5016:8;:26;5012:198;;;5058:55;867:42;5098:10;5111:1;5058:26;:55::i;:::-;5127:72;867:42;5160:10;5190:8;5172:15;:26;;;;:::i;:::-;5127:27;:72::i;:::-;5012:198;3718:1498;3592:1624;;;;;:::o;837:72::-;867:42;837:72;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1461:44;1449:57;1441:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:206;;1211:309;;;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:91;956:7;996:8;989:5;985:20;974:31;;920:91;;;:::o;1017:120::-;1089:23;1106:5;1089:23;:::i;:::-;1082:5;1079:34;1069:62;;1127:1;1124;1117:12;1069:62;1017:120;:::o;1143:137::-;1188:5;1226:6;1213:20;1204:29;;1242:32;1268:5;1242:32;:::i;:::-;1143:137;;;;:::o;1286:77::-;1323:7;1352:5;1341:16;;1286:77;;;:::o;1369:122::-;1442:24;1460:5;1442:24;:::i;:::-;1435:5;1432:35;1422:63;;1481:1;1478;1471:12;1422:63;1369:122;:::o;1497:139::-;1543:5;1581:6;1568:20;1559:29;;1597:33;1624:5;1597:33;:::i;:::-;1497:139;;;;:::o;1642:122::-;1715:24;1733:5;1715:24;:::i;:::-;1708:5;1705:35;1695:63;;1754:1;1751;1744:12;1695:63;1642:122;:::o;1770:139::-;1816:5;1854:6;1841:20;1832:29;;1870:33;1897:5;1870:33;:::i;:::-;1770:139;;;;:::o;1915:909::-;2009:6;2017;2025;2033;2041;2090:3;2078:9;2069:7;2065:23;2061:33;2058:120;;;2097:79;;:::i;:::-;2058:120;2217:1;2242:52;2286:7;2277:6;2266:9;2262:22;2242:52;:::i;:::-;2232:62;;2188:116;2343:2;2369:53;2414:7;2405:6;2394:9;2390:22;2369:53;:::i;:::-;2359:63;;2314:118;2471:2;2497:53;2542:7;2533:6;2522:9;2518:22;2497:53;:::i;:::-;2487:63;;2442:118;2599:2;2625:53;2670:7;2661:6;2650:9;2646:22;2625:53;:::i;:::-;2615:63;;2570:118;2727:3;2754:53;2799:7;2790:6;2779:9;2775:22;2754:53;:::i;:::-;2744:63;;2698:119;1915:909;;;;;;;;:::o;2830:118::-;2917:24;2935:5;2917:24;:::i;:::-;2912:3;2905:37;2830:118;;:::o;2954:222::-;3047:4;3085:2;3074:9;3070:18;3062:26;;3098:71;3166:1;3155:9;3151:17;3142:6;3098:71;:::i;:::-;2954:222;;;;:::o;3182:60::-;3210:3;3231:5;3224:12;;3182:60;;;:::o;3248:142::-;3298:9;3331:53;3349:34;3358:24;3376:5;3358:24;:::i;:::-;3349:34;:::i;:::-;3331:53;:::i;:::-;3318:66;;3248:142;;;:::o;3396:126::-;3446:9;3479:37;3510:5;3479:37;:::i;:::-;3466:50;;3396:126;;;:::o;3528:145::-;3597:9;3630:37;3661:5;3630:37;:::i;:::-;3617:50;;3528:145;;;:::o;3679:169::-;3785:56;3835:5;3785:56;:::i;:::-;3780:3;3773:69;3679:169;;:::o;3854:260::-;3966:4;4004:2;3993:9;3989:18;3981:26;;4017:90;4104:1;4093:9;4089:17;4080:6;4017:90;:::i;:::-;3854:260;;;;:::o;4120:617::-;4196:6;4204;4212;4261:2;4249:9;4240:7;4236:23;4232:32;4229:119;;;4267:79;;:::i;:::-;4229:119;4387:1;4412:52;4456:7;4447:6;4436:9;4432:22;4412:52;:::i;:::-;4402:62;;4358:116;4513:2;4539:53;4584:7;4575:6;4564:9;4560:22;4539:53;:::i;:::-;4529:63;;4484:118;4641:2;4667:53;4712:7;4703:6;4692:9;4688:22;4667:53;:::i;:::-;4657:63;;4612:118;4120:617;;;;;:::o;4743:108::-;4820:24;4838:5;4820:24;:::i;:::-;4815:3;4808:37;4743:108;;:::o;4857:105::-;4932:23;4949:5;4932:23;:::i;:::-;4927:3;4920:36;4857:105;;:::o;4968:108::-;5045:24;5063:5;5045:24;:::i;:::-;5040:3;5033:37;4968:108;;:::o;5082:::-;5159:24;5177:5;5159:24;:::i;:::-;5154:3;5147:37;5082:108;;:::o;5290:1623::-;5465:6;5460:3;5456:16;5557:4;5550:5;5546:16;5540:23;5576:63;5633:4;5628:3;5624:14;5610:12;5576:63;:::i;:::-;5482:167;5735:4;5728:5;5724:16;5718:23;5754:63;5811:4;5806:3;5802:14;5788:12;5754:63;:::i;:::-;5659:168;5908:4;5901:5;5897:16;5891:23;5927:61;5982:4;5977:3;5973:14;5959:12;5927:61;:::i;:::-;5837:161;6085:4;6078:5;6074:16;6068:23;6104:63;6161:4;6156:3;6152:14;6138:12;6104:63;:::i;:::-;6008:169;6263:4;6256:5;6252:16;6246:23;6282:63;6339:4;6334:3;6330:14;6316:12;6282:63;:::i;:::-;6187:168;6441:4;6434:5;6430:16;6424:23;6460:63;6517:4;6512:3;6508:14;6494:12;6460:63;:::i;:::-;6365:168;6627:4;6620:5;6616:16;6610:23;6646:63;6703:4;6698:3;6694:14;6680:12;6646:63;:::i;:::-;6543:176;6814:4;6807:5;6803:16;6797:23;6833:63;6890:4;6885:3;6881:14;6867:12;6833:63;:::i;:::-;6729:177;5434:1479;5290:1623;;:::o;6919:379::-;7090:4;7128:3;7117:9;7113:19;7105:27;;7142:149;7288:1;7277:9;7273:17;7264:6;7142:149;:::i;:::-;6919:379;;;;:::o;7304:143::-;7361:5;7392:6;7386:13;7377:22;;7408:33;7435:5;7408:33;:::i;:::-;7304:143;;;;:::o;7453:351::-;7523:6;7572:2;7560:9;7551:7;7547:23;7543:32;7540:119;;;7578:79;;:::i;:::-;7540:119;7698:1;7723:64;7779:7;7770:6;7759:9;7755:22;7723:64;:::i;:::-;7713:74;;7669:128;7453:351;;;;:::o;7906:1625::-;8083:6;8078:3;8074:16;8175:4;8168:5;8164:16;8158:23;8194:63;8251:4;8246:3;8242:14;8228:12;8194:63;:::i;:::-;8100:167;8353:4;8346:5;8342:16;8336:23;8372:63;8429:4;8424:3;8420:14;8406:12;8372:63;:::i;:::-;8277:168;8526:4;8519:5;8515:16;8509:23;8545:61;8600:4;8595:3;8591:14;8577:12;8545:61;:::i;:::-;8455:161;8703:4;8696:5;8692:16;8686:23;8722:63;8779:4;8774:3;8770:14;8756:12;8722:63;:::i;:::-;8626:169;8881:4;8874:5;8870:16;8864:23;8900:63;8957:4;8952:3;8948:14;8934:12;8900:63;:::i;:::-;8805:168;9060:4;9053:5;9049:16;9043:23;9079:63;9136:4;9131:3;9127:14;9113:12;9079:63;:::i;:::-;8983:169;9245:4;9238:5;9234:16;9228:23;9264:63;9321:4;9316:3;9312:14;9298:12;9264:63;:::i;:::-;9162:175;9432:4;9425:5;9421:16;9415:23;9451:63;9508:4;9503:3;9499:14;9485:12;9451:63;:::i;:::-;9347:177;8052:1479;7906:1625;;:::o;9537:383::-;9710:4;9748:3;9737:9;9733:19;9725:27;;9762:151;9910:1;9899:9;9895:17;9886:6;9762:151;:::i;:::-;9537:383;;;;:::o;9926:180::-;9974:77;9971:1;9964:88;10071:4;10068:1;10061:15;10095:4;10092:1;10085:15;10112:194;10152:4;10172:20;10190:1;10172:20;:::i;:::-;10167:25;;10206:20;10224:1;10206:20;:::i;:::-;10201:25;;10250:1;10247;10243:9;10235:17;;10274:1;10268:4;10265:11;10262:37;;;10279:18;;:::i;:::-;10262:37;10112:194;;;;:::o;10312:442::-;10461:4;10499:2;10488:9;10484:18;10476:26;;10512:71;10580:1;10569:9;10565:17;10556:6;10512:71;:::i;:::-;10593:72;10661:2;10650:9;10646:18;10637:6;10593:72;:::i;:::-;10675;10743:2;10732:9;10728:18;10719:6;10675:72;:::i;:::-;10312:442;;;;;;:::o;10760:98::-;10811:6;10845:5;10839:12;10829:22;;10760:98;;;:::o;10864:147::-;10965:11;11002:3;10987:18;;10864:147;;;;:::o;11017:246::-;11098:1;11108:113;11122:6;11119:1;11116:13;11108:113;;;11207:1;11202:3;11198:11;11192:18;11188:1;11183:3;11179:11;11172:39;11144:2;11141:1;11137:10;11132:15;;11108:113;;;11255:1;11246:6;11241:3;11237:16;11230:27;11079:184;11017:246;;;:::o;11269:386::-;11373:3;11401:38;11433:5;11401:38;:::i;:::-;11455:88;11536:6;11531:3;11455:88;:::i;:::-;11448:95;;11552:65;11610:6;11605:3;11598:4;11591:5;11587:16;11552:65;:::i;:::-;11642:6;11637:3;11633:16;11626:23;;11377:278;11269:386;;;;:::o;11661:271::-;11791:3;11813:93;11902:3;11893:6;11813:93;:::i;:::-;11806:100;;11923:3;11916:10;;11661:271;;;;:::o;11938:90::-;11972:7;12015:5;12008:13;12001:21;11990:32;;11938:90;;;:::o;12034:116::-;12104:21;12119:5;12104:21;:::i;:::-;12097:5;12094:32;12084:60;;12140:1;12137;12130:12;12084:60;12034:116;:::o;12156:137::-;12210:5;12241:6;12235:13;12226:22;;12257:30;12281:5;12257:30;:::i;:::-;12156:137;;;;:::o;12299:345::-;12366:6;12415:2;12403:9;12394:7;12390:23;12386:32;12383:119;;;12421:79;;:::i;:::-;12383:119;12541:1;12566:61;12619:7;12610:6;12599:9;12595:22;12566:61;:::i;:::-;12556:71;;12512:125;12299:345;;;;:::o;12650:169::-;12734:11;12768:6;12763:3;12756:19;12808:4;12803:3;12799:14;12784:29;;12650:169;;;;:::o;12825:153::-;12965:5;12961:1;12953:6;12949:14;12942:29;12825:153;:::o;12984:365::-;13126:3;13147:66;13211:1;13206:3;13147:66;:::i;:::-;13140:73;;13222:93;13311:3;13222:93;:::i;:::-;13340:2;13335:3;13331:12;13324:19;;12984:365;;;:::o;13355:419::-;13521:4;13559:2;13548:9;13544:18;13536:26;;13608:9;13602:4;13598:20;13594:1;13583:9;13579:17;13572:47;13636:131;13762:4;13636:131;:::i;:::-;13628:139;;13355:419;;;:::o;13780:332::-;13901:4;13939:2;13928:9;13924:18;13916:26;;13952:71;14020:1;14009:9;14005:17;13996:6;13952:71;:::i;:::-;14033:72;14101:2;14090:9;14086:18;14077:6;14033:72;:::i;:::-;13780:332;;;;;:::o;14118:152::-;14258:4;14254:1;14246:6;14242:14;14235:28;14118:152;:::o;14276:365::-;14418:3;14439:66;14503:1;14498:3;14439:66;:::i;:::-;14432:73;;14514:93;14603:3;14514:93;:::i;:::-;14632:2;14627:3;14623:12;14616:19;;14276:365;;;:::o;14647:419::-;14813:4;14851:2;14840:9;14836:18;14828:26;;14900:9;14894:4;14890:20;14886:1;14875:9;14871:17;14864:47;14928:131;15054:4;14928:131;:::i;:::-;14920:139;;14647:419;;;:::o;15072:152::-;15212:4;15208:1;15200:6;15196:14;15189:28;15072:152;:::o;15230:365::-;15372:3;15393:66;15457:1;15452:3;15393:66;:::i;:::-;15386:73;;15468:93;15557:3;15468:93;:::i;:::-;15586:2;15581:3;15577:12;15570:19;;15230:365;;;:::o;15601:419::-;15767:4;15805:2;15794:9;15790:18;15782:26;;15854:9;15848:4;15844:20;15840:1;15829:9;15825:17;15818:47;15882:131;16008:4;15882:131;:::i;:::-;15874:139;;15601:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "860200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "444",
								"WETH9()": "356",
								"swapExactInputSingle(uint24,uint256,address,address,address)": "infinite",
								"swapExactOutputSingle(uint24,uint256,uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1184,
									"end": 1262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1255,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1262,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "370"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 5218,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d69a462a00f2ed775e68012dbf2b7626acd12dfe88d51d7746a6d8657a7140f64736f6c63430008130033",
									".code": [
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4AA4A4FC"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "9B56D891"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "DC236CE6"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "E0BAB4C4"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 5218,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 915,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 915,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1732,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1732,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1732,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 691,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 691,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3592,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3592,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3592,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 837,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 837,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 947,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "9C3C9283D3E44854697CD22D3FAA240CFB032889"
										},
										{
											"begin": 915,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 915,
											"end": 989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2033,
											"end": 2037,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2049,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2074,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2001,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2075,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2157,
											"end": 2161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2171,
											"end": 2181,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 2184,
											"end": 2192,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2130,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2602,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2669,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2748,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2932,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 2950,
											"end": 2956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2922,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2922,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 2964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 691,
											"end": 730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 867,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3873,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3794,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3794,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 867,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 4153,
											"end": 4168,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4100,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4169,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4100,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 867,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 947,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "9C3C9283D3E44854697CD22D3FAA240CFB032889"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4412,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4455,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4543,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4730,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 4720,
											"end": 4748,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4720,
											"end": 4748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4748,
											"name": "PUSH",
											"source": 4,
											"value": "DB3E2198"
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4720,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4709,
											"end": 4756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5042,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5042,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5210,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5012,
											"end": 5210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 867,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 5098,
											"end": 5108,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 5111,
											"end": 5112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5058,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5113,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5058,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 867,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5198,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5172,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5127,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5199,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5127,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5210,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5012,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 5216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 867,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 837,
											"end": 909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 837,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 748,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 812,
											"end": 816,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 759,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 859,
											"end": 875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 859,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 847,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 839,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1394,
											"end": 1418,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1371,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1360,
											"end": 1431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1477,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1481,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1481,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1461,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1449,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1441,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1441,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1011,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 920,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 956,
											"end": 963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1004,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 989,
											"end": 994,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1137,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1017,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1089,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1069,
											"end": 1131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1129,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1131,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1069,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1280,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1143,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1242,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1274,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1242,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1280,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1369,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1460,
											"end": 1465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1442,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1467,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1422,
											"end": 1485,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1483,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1485,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1422,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1588,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1597,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1764,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1642,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1715,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1739,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1715,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1695,
											"end": 1758,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1756,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1758,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1695,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1909,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1770,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1870,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1903,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1870,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2094,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2058,
											"end": 2178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2097,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2178,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2058,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2242,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2242,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2242,
											"end": 2294,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2242,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2294,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2414,
											"end": 2421,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2369,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2369,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2422,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2542,
											"end": 2549,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2497,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2497,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2550,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2601,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2625,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2670,
											"end": 2677,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2625,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2678,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2625,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2678,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2730,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2754,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2754,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2948,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2830,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2917,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3098,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3098,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3242,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3182,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3390,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3248,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3358,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3349,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3331,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3384,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3331,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3522,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3396,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3479,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3673,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3528,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3630,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3630,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3630,
											"end": 3667,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3630,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3785,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3841,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3785,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 4114,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3854,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 3970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 4007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 4007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 4007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4017,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4107,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4017,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 4114,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 4114,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 4114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 4114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 4114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4196,
											"end": 4202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4249,
											"end": 4258,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4247,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4259,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4348,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4229,
											"end": 4348,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4267,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4348,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4229,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4456,
											"end": 4463,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4412,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4464,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4539,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4539,
											"end": 4592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4592,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4539,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4643,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4667,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4667,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4667,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 4720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 4720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4612,
											"end": 4730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4851,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4743,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4820,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4844,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4820,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4808,
											"end": 4845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4962,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4857,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4932,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 4930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5076,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4968,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5063,
											"end": 5068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5045,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5045,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5190,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5082,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5177,
											"end": 5182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5159,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5183,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5159,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5184,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 6913,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5290,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5460,
											"end": 5463,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5631,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5638,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5576,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5639,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5576,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5739,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5728,
											"end": 5733,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5741,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5811,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5754,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5817,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5754,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 5827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5906,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5891,
											"end": 5914,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 5987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5927,
											"end": 5988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5927,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6085,
											"end": 6089,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6078,
											"end": 6083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6091,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6161,
											"end": 6165,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6138,
											"end": 6150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6104,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6339,
											"end": 6343,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6282,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6445,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6434,
											"end": 6439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6424,
											"end": 6447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6512,
											"end": 6515,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6460,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6523,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6460,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6365,
											"end": 6533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6631,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 6620,
											"end": 6625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6633,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6703,
											"end": 6707,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 6698,
											"end": 6701,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6646,
											"end": 6709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6709,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6646,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6543,
											"end": 6719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6833,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6890,
											"end": 6894,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6885,
											"end": 6888,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6833,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6833,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6833,
											"end": 6896,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6833,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6729,
											"end": 6906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 6913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 6913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 6913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 6913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 7298,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 6919,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7090,
											"end": 7094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7131,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7117,
											"end": 7126,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7113,
											"end": 7132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7288,
											"end": 7289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7286,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7142,
											"end": 7291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7291,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7142,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 7298,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 7298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 7298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 7298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 7298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7447,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7304,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7361,
											"end": 7366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7398,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7435,
											"end": 7440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 7408,
											"end": 7441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7441,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7408,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7804,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7453,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7558,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7570,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7543,
											"end": 7575,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7540,
											"end": 7659,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7540,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7540,
											"end": 7659,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7578,
											"end": 7657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7540,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7540,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7779,
											"end": 7786,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7770,
											"end": 7776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 7768,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7723,
											"end": 7787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7787,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7723,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7669,
											"end": 7797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7804,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7453,
											"end": 7804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 9531,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7906,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8078,
											"end": 8081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8158,
											"end": 8181,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8251,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8249,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8242,
											"end": 8256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 8194,
											"end": 8257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8257,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8194,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8100,
											"end": 8267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8342,
											"end": 8358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8429,
											"end": 8433,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8424,
											"end": 8427,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8420,
											"end": 8434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 8372,
											"end": 8435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8435,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 8372,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8277,
											"end": 8445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8530,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8515,
											"end": 8531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8509,
											"end": 8532,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 8600,
											"end": 8604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 8545,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8606,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 8545,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8455,
											"end": 8616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8703,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8696,
											"end": 8701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8692,
											"end": 8708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8686,
											"end": 8709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8779,
											"end": 8783,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8774,
											"end": 8777,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8770,
											"end": 8784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8756,
											"end": 8768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 8722,
											"end": 8785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8785,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8722,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8626,
											"end": 8795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8874,
											"end": 8879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8864,
											"end": 8887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8900,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8957,
											"end": 8961,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8952,
											"end": 8955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8948,
											"end": 8962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8900,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 8900,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8900,
											"end": 8963,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8900,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 8973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9060,
											"end": 9064,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 9053,
											"end": 9058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9043,
											"end": 9066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9136,
											"end": 9140,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 9131,
											"end": 9134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9113,
											"end": 9125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9079,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9142,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9079,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 9152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 9238,
											"end": 9243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9234,
											"end": 9250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9321,
											"end": 9325,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9312,
											"end": 9326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9298,
											"end": 9310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9264,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9327,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9264,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9432,
											"end": 9436,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9425,
											"end": 9430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9421,
											"end": 9437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9508,
											"end": 9512,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9503,
											"end": 9506,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9499,
											"end": 9513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9451,
											"end": 9514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9514,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9451,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9347,
											"end": 9524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 9531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 9531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 9531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 9531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9920,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9537,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9751,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9733,
											"end": 9752,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9725,
											"end": 9752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9725,
											"end": 9752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9762,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9910,
											"end": 9911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9899,
											"end": 9908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9895,
											"end": 9912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9886,
											"end": 9892,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9762,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 9762,
											"end": 9913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9762,
											"end": 9913,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9762,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9926,
											"end": 10106,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 9926,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10051,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 10052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10071,
											"end": 10075,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 10068,
											"end": 10069,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10099,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10092,
											"end": 10093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10100,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10306,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 10112,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10152,
											"end": 10156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10190,
											"end": 10191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 10172,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10192,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10172,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10224,
											"end": 10225,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 10206,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10226,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10206,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10201,
											"end": 10226,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10201,
											"end": 10226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10250,
											"end": 10251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10235,
											"end": 10252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10235,
											"end": 10252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10265,
											"end": 10276,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 10279,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10262,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10461,
											"end": 10465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10501,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10488,
											"end": 10497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10484,
											"end": 10502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10476,
											"end": 10502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10476,
											"end": 10502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10512,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 10580,
											"end": 10581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10569,
											"end": 10578,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10565,
											"end": 10582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10512,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10512,
											"end": 10583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10512,
											"end": 10583,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 10512,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10650,
											"end": 10659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10593,
											"end": 10665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10665,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 10593,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 10743,
											"end": 10745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10732,
											"end": 10741,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10725,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 10675,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10747,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 10675,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10858,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 10760,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10839,
											"end": 10851,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 11011,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 10864,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10965,
											"end": 10976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 11011,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 11011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 11011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 11011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 11011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11017,
											"end": 11263,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11017,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11098,
											"end": 11099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11116,
											"end": 11129,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11207,
											"end": 11208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11202,
											"end": 11205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11188,
											"end": 11189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11183,
											"end": 11186,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11179,
											"end": 11190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11172,
											"end": 11211,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11141,
											"end": 11142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11137,
											"end": 11147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 11108,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11252,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11241,
											"end": 11244,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11237,
											"end": 11253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11230,
											"end": 11257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11017,
											"end": 11263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11017,
											"end": 11263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11017,
											"end": 11263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11017,
											"end": 11263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11655,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11269,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 11433,
											"end": 11438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11401,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 11401,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11401,
											"end": 11439,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 11401,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11455,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 11536,
											"end": 11542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11531,
											"end": 11534,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11455,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 11455,
											"end": 11543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11455,
											"end": 11543,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 11455,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11543,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 11610,
											"end": 11616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11605,
											"end": 11608,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11598,
											"end": 11602,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11591,
											"end": 11596,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11552,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 11552,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11642,
											"end": 11648,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11637,
											"end": 11640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11633,
											"end": 11649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11626,
											"end": 11649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11626,
											"end": 11649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11377,
											"end": 11655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11655,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11932,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 11661,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11791,
											"end": 11794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 11902,
											"end": 11905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11813,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11813,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11813,
											"end": 11906,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 11813,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11806,
											"end": 11906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11806,
											"end": 11906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11923,
											"end": 11926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11916,
											"end": 11926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11916,
											"end": 11926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11661,
											"end": 11932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 12028,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 11938,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11972,
											"end": 11979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12008,
											"end": 12021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12001,
											"end": 12022,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 12028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 12028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 12028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12034,
											"end": 12150,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 12034,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12104,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 12119,
											"end": 12124,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12104,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 12104,
											"end": 12125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12104,
											"end": 12125,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 12104,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12097,
											"end": 12102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12094,
											"end": 12126,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12084,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 12084,
											"end": 12144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12130,
											"end": 12142,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12084,
											"end": 12144,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 12084,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12034,
											"end": 12150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12034,
											"end": 12150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12293,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 12156,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12210,
											"end": 12215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12248,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12226,
											"end": 12248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12226,
											"end": 12248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 12281,
											"end": 12286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 12257,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12287,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 12257,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12293,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12644,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 12299,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12366,
											"end": 12372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12417,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12394,
											"end": 12401,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12390,
											"end": 12413,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12386,
											"end": 12418,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12502,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 12383,
											"end": 12502,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 12421,
											"end": 12500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12502,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 12383,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12541,
											"end": 12542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12619,
											"end": 12626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12610,
											"end": 12616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12608,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12595,
											"end": 12617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12566,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 12566,
											"end": 12627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12566,
											"end": 12627,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12566,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12556,
											"end": 12627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12556,
											"end": 12627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12512,
											"end": 12637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12644,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12819,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 12650,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12734,
											"end": 12745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12763,
											"end": 12766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12756,
											"end": 12775,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12808,
											"end": 12812,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12803,
											"end": 12806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12799,
											"end": 12813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12784,
											"end": 12813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12784,
											"end": 12813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12819,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12825,
											"end": 12978,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 12825,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12965,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "5354460000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12949,
											"end": 12963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 12971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12825,
											"end": 12978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12825,
											"end": 12978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12984,
											"end": 13349,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 12984,
											"end": 13349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13126,
											"end": 13129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13147,
											"end": 13213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 13211,
											"end": 13212,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 13206,
											"end": 13209,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13147,
											"end": 13213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 13147,
											"end": 13213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13147,
											"end": 13213,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 13147,
											"end": 13213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13222,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13222,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 13222,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13222,
											"end": 13315,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 13222,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13340,
											"end": 13342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13335,
											"end": 13338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13331,
											"end": 13343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12984,
											"end": 13349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12984,
											"end": 13349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12984,
											"end": 13349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12984,
											"end": 13349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13774,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 13355,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13521,
											"end": 13525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13548,
											"end": 13557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13544,
											"end": 13562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13608,
											"end": 13617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13598,
											"end": 13618,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13594,
											"end": 13595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13583,
											"end": 13592,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13579,
											"end": 13596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13572,
											"end": 13619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13636,
											"end": 13767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 13762,
											"end": 13766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13636,
											"end": 13767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 13636,
											"end": 13767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13636,
											"end": 13767,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 13636,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13628,
											"end": 13767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13628,
											"end": 13767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13901,
											"end": 13905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13928,
											"end": 13937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13924,
											"end": 13942,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13916,
											"end": 13942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13916,
											"end": 13942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13952,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 14020,
											"end": 14021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14009,
											"end": 14018,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14005,
											"end": 14022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13996,
											"end": 14002,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13952,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 13952,
											"end": 14023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13952,
											"end": 14023,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 13952,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 14101,
											"end": 14103,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14090,
											"end": 14099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14086,
											"end": 14104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14077,
											"end": 14083,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 14033,
											"end": 14105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13780,
											"end": 14112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14118,
											"end": 14270,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 14118,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14258,
											"end": 14262,
											"name": "PUSH",
											"source": 5,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14254,
											"end": 14255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14242,
											"end": 14256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14235,
											"end": 14263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14118,
											"end": 14270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14118,
											"end": 14270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14641,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 14276,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 14503,
											"end": 14504,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14498,
											"end": 14501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14439,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 14439,
											"end": 14505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14439,
											"end": 14505,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 14439,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14432,
											"end": 14505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14432,
											"end": 14505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14514,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 14603,
											"end": 14606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14514,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 14514,
											"end": 14607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14514,
											"end": 14607,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 14514,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14632,
											"end": 14634,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14627,
											"end": 14630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14623,
											"end": 14635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14616,
											"end": 14635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14616,
											"end": 14635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14276,
											"end": 14641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14647,
											"end": 15066,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 14647,
											"end": 15066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14813,
											"end": 14817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14840,
											"end": 14849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14836,
											"end": 14854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14828,
											"end": 14854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14828,
											"end": 14854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14900,
											"end": 14909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14894,
											"end": 14898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14890,
											"end": 14910,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14871,
											"end": 14888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14864,
											"end": 14911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14928,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 15054,
											"end": 15058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14928,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 14928,
											"end": 15059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14928,
											"end": 15059,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14928,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14920,
											"end": 15059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14920,
											"end": 15059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14647,
											"end": 15066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14647,
											"end": 15066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14647,
											"end": 15066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14647,
											"end": 15066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15072,
											"end": 15224,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 15072,
											"end": 15224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15212,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15208,
											"end": 15209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15200,
											"end": 15206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15196,
											"end": 15210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15072,
											"end": 15224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15072,
											"end": 15224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15230,
											"end": 15595,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 15230,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15372,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15393,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 15457,
											"end": 15458,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 15452,
											"end": 15455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15393,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 15393,
											"end": 15459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15393,
											"end": 15459,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 15393,
											"end": 15459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15386,
											"end": 15459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15386,
											"end": 15459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15468,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 15557,
											"end": 15560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15468,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 15468,
											"end": 15561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15468,
											"end": 15561,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 15468,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15586,
											"end": 15588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15581,
											"end": 15584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15577,
											"end": 15589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15570,
											"end": 15589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15570,
											"end": 15589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15230,
											"end": 15595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15230,
											"end": 15595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15230,
											"end": 15595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15230,
											"end": 15595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15601,
											"end": 16020,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 15601,
											"end": 16020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15767,
											"end": 15771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15805,
											"end": 15807,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15790,
											"end": 15808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15782,
											"end": 15808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15782,
											"end": 15808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15848,
											"end": 15852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15844,
											"end": 15864,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15840,
											"end": 15841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 15838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15825,
											"end": 15842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15818,
											"end": 15865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15882,
											"end": 16013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 16008,
											"end": 16012,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15882,
											"end": 16013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 15882,
											"end": 16013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15882,
											"end": 16013,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 15882,
											"end": 16013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15874,
											"end": 16013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15874,
											"end": 16013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15601,
											"end": 16020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15601,
											"end": 16020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15601,
											"end": 16020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15601,
											"end": 16020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/Staking/SwapTokenV2Router.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"WETH9()": "4aa4a4fc",
							"swapExactInputSingle(uint24,uint256,address,address,address)": "9b56d891",
							"swapExactOutputSingle(uint24,uint256,uint256)": "dc236ce6",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"FROG\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Receiver\",\"type\":\"address\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint24,uint256,address,address,address)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputSingle(uint24,uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint24,uint256,address,address,address)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint24,uint256,uint256)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking/SwapTokenV2Router.sol\":\"SwapExamples\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/Staking/SwapTokenV2Router.sol\":{\"keccak256\":\"0x1a5dffb3a4ff43b1a34898cb2caf24d31ae82e84da0f802e1d67e3601d698d06\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8186ddb1f1154a24dd43d80e4192a6664dec4c16a84074525712aee28779a384\",\"dweb:/ipfs/QmYYV9AaUoXMXAzEbHhdgiBR4wdGvjRANNsrTfUtE3atRg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapExactInputSingle(uint24,uint256,address,address,address)": {
								"notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
							},
							"swapExactOutputSingle(uint24,uint256,uint256)": {
								"notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 92,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:1",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:1",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1197:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1226:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1255:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:1"
									},
									"scope": 91,
									"src": "1157:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "215:1077:1",
							"usedErrors": []
						}
					],
					"src": "45:1248:1"
				},
				"id": 1
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 94,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 92,
							"src": "91:83:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "305:22:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:2"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:2",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								91
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "374:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 99,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "399:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 101,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "425:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 103,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "445:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "472:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "498:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "524:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "558:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 113,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "334:256:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "877:38:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "877:22:2"
													},
													"referencedDeclaration": 115,
													"src": "877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:2"
									},
									"scope": 191,
									"src": "851:111:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1002:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 125,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1022:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 127,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1049:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1075:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1101:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "968:164:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:2",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1436:32:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$135_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 135,
														"src": "1436:16:2"
													},
													"referencedDeclaration": 135,
													"src": "1436:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$135_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1496:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:2"
									},
									"scope": 191,
									"src": "1416:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1562:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1587:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1613:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1633:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1660:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1686:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1713:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "1746:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 159,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "1521:257:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2066:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "2066:23:2"
													},
													"referencedDeclaration": 161,
													"src": "2066:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2133:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:2"
									},
									"scope": 191,
									"src": "2039:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2192:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2212:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2239:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2265:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "2292:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:2",
									"nodeType": "StructDefinition",
									"scope": 191,
									"src": "2157:165:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:2",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2638:33:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$181_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2638:17:2"
													},
													"referencedDeclaration": 181,
													"src": "2638:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$181_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:2"
									},
									"scope": 191,
									"src": "2617:100:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "280:2439:2",
							"usedErrors": []
						}
					],
					"src": "45:2675:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							362
						]
					},
					"id": 363,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 78,
							"src": "71:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "690:229:3",
										"statements": [
											{
												"assignments": [
													207,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "715:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 217,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "812:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 218,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "818:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "822:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 212,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "847:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 225,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "859:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 231,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "890:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 232,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 234,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 229,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "839:73:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:3",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "619:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:3"
									},
									"scope": 362,
									"src": "561:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1314:206:3",
										"statements": [
											{
												"assignments": [
													254,
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1325:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "1339:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1420:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1424:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1360:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1449:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 271,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1461:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "1492:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 278,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:3",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1265:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1285:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 362,
									"src": "1211:309:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1975:205:3",
										"statements": [
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2000:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 307,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 310,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2080:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2084:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 305,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 303,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2021:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2109:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 317,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2121:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:3",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 323,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "2152:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 324,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:3",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:3",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1926:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 362,
									"src": "1873:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2431:104:3",
										"statements": [
											{
												"assignments": [
													344,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "2442:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 349,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 345,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2460:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 347,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2475:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:3",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2395:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2407:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:3"
									},
									"scope": 362,
									"src": "2370:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "129:2408:3",
							"usedErrors": []
						}
					],
					"src": "45:2493:3"
				},
				"id": 3
			},
			"contracts/Staking/SwapTokenV2Router.sol": {
				"ast": {
					"absolutePath": "contracts/Staking/SwapTokenV2Router.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ISwapRouter": [
							191
						],
						"IUniswapV3SwapCallback": [
							91
						],
						"SwapExamples": [
							544
						],
						"TransferHelper": [
							362
						]
					},
					"id": 545,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"id": 365,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 363,
							"src": "91:70:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 192,
							"src": "162:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapExamples",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544
							],
							"name": "SwapExamples",
							"nameLocation": "241:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 370,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "720:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "691:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$191",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 369,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 368,
											"name": "ISwapRouter",
											"nameLocations": [
												"691:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "691:11:4"
										},
										"referencedDeclaration": 191,
										"src": "691:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$191",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0bab4c4",
									"id": 373,
									"mutability": "constant",
									"name": "DAI",
									"nameLocation": "861:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "837:72:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "837:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
										"id": 372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "867:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4aa4a4fc",
									"id": 376,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "939:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "915:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 374,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "915:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839633343393238334433653434383534363937436432324433466161323430436662303332383839",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "947:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1221:41:4",
										"statements": [
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 382,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1231:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 383,
														"name": "_swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "1244:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$191",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1231:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1231:24:4"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "1208:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1196:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISwapRouter_$191",
													"typeString": "contract ISwapRouter"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "ISwapRouter",
														"nameLocations": [
															"1196:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 191,
														"src": "1196:11:4"
													},
													"referencedDeclaration": 191,
													"src": "1196:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$191",
														"typeString": "contract ISwapRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:25:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:4"
									},
									"scope": 544,
									"src": "1184:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1875:1089:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "FROG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2033:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2039:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2043:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2039:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 411,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2059:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapExamples_$544",
																		"typeString": "contract SwapExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapExamples_$544",
																		"typeString": "contract SwapExamples"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2051:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2051:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2051:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2066:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 403,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "2001:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2016:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "2001:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "2001:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 419,
															"name": "FROG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2157:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 422,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "2171:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2163:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2163:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2163:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2184:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 416,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "2130:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2145:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "2130:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "2130:63:4"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2483:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "2441:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 430,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 429,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"2441:11:4",
																	"2453:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 115,
																"src": "2441:34:4"
															},
															"referencedDeclaration": 115,
															"src": "2441:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"id": 434,
															"name": "FROG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2566:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2598:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "2625:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 437,
															"name": "Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2661:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 438,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2697:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2703:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2697:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 440,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2740:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2784:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2822:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 432,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2504:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2516:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "2504:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2557:7:4",
														"2588:8:4",
														"2620:3:4",
														"2650:9:4",
														"2687:8:4",
														"2730:8:4",
														"2766:16:4",
														"2803:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2504:334:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:397:4"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 445,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2910:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 448,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2950:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 446,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2922:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2933:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "2922:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2922:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2910:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2910:47:4"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1268:459:4",
										"text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
									},
									"functionSelector": "9b56d891",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "1741:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "1769:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1762:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 389,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1762:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1785:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1777:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "FROG",
												"nameLocation": "1802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "WETH",
												"nameLocation": "1815:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1807:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "Receiver",
												"nameLocation": "1828:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1820:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:76:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1864:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1856:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:19:4"
									},
									"scope": 544,
									"src": "1732:1232:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3718:1498:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "3826:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 469,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3831:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3835:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3831:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3851:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapExamples_$544",
																		"typeString": "contract SwapExamples"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapExamples_$544",
																		"typeString": "contract SwapExamples"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3843:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3843:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3843:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3858:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 465,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3794:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3809:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "3794:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3794:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "3794:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4127:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 484,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "4140:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$191",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4132:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4132:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4132:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4153:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 478,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4100:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4115:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 335,
														"src": "4100:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4100:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "4100:69:4"
											},
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4223:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "4180:49:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 492,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 491,
																"name": "ISwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"4180:11:4",
																	"4192:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 161,
																"src": "4180:35:4"
															},
															"referencedDeclaration": 161,
															"src": "4180:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"id": 496,
															"name": "DAI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4307:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "4338:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "poolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4366:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4402:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4406:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4402:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 501,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4440:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4446:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4440:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 503,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4484:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 504,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4528:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4580:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 494,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "4244:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$191_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4256:23:4",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "4244:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$161_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4298:7:4",
														"4328:8:4",
														"4361:3:4",
														"4391:9:4",
														"4430:8:4",
														"4473:9:4",
														"4511:15:4",
														"4561:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "4244:352:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4180:416:4"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "4709:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 511,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "4749:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$161_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "4720:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$191",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4731:17:4",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 170,
															"src": "4720:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$161_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4720:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4709:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "4709:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "5016:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 516,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "5027:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5016:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "5012:198:4",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "5044:166:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 521,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5085:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 524,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "5098:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ISwapRouter_$191",
																					"typeString": "contract ISwapRouter"
																				}
																			],
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5090:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 522,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5090:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5090:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5111:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 518,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "5058:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5073:11:4",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "5058:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5058:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "5058:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 532,
																		"name": "DAI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5155:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 533,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5160:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5164:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5160:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 535,
																			"name": "amountInMaximum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5172:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 536,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "5190:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5172:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 529,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "5127:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$362_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5142:12:4",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 289,
																	"src": "5127:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "ExpressionStatement",
															"src": "5127:72:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2970:617:4",
										"text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
									},
									"functionSelector": "dc236ce6",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nameLocation": "3601:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "poolFee",
												"nameLocation": "3630:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3623:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 455,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3623:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3646:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3638:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "3665:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3622:59:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3708:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3700:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3700:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3699:18:4"
									},
									"scope": 544,
									"src": "3592:1624:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 545,
							"src": "232:4986:4",
							"usedErrors": []
						}
					],
					"src": "45:5173:4"
				},
				"id": 4
			}
		}
	}
}