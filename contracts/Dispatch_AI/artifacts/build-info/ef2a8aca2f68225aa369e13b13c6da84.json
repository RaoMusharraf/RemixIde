{
	"id": "ef2a8aca2f68225aa369e13b13c6da84",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dispatch_AI/MarketplaceFinal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IConnected {\n    struct Token {\n        uint tokenId;\n        string uri;\n        uint capAmount;\n        uint points;\n    }\n    function updateTokenId(address _to,uint _tokenId,address seller,address marketPlace) external;\n    function getToken(address _to,uint _tokenId) external view returns(Token[] memory token);\n}\n/**\n * @title MarketPlace\n*/\ncontract Marketplace is ReentrancyGuard , Ownable{\n    using SafeERC20 for IERC20;\n    using Counters for Counters.Counter;\n    Counters.Counter public _nftCount;\n    Counters.Counter public nftAuctionCount;\n    //Address\n    address tokenAddress;\n    //Mapping\n    mapping (address mintContractAddress=> mapping( uint256 tokenId => NFT)) public _idToNFT;\n    mapping (uint => addressToken) public listCount;\n    mapping (uint => uint ) public userListCount;\n    //Struct\n    struct NFT {\n        uint256 tokenId;\n        address seller;\n        address owner;\n        uint256 price;\n        uint256 count;\n        uint listTime;\n        bool listed;\n    }\n    struct Token {\n        string uri;\n        uint capAmount;\n        uint points;\n    }\n    struct addressToken{\n        address contractAddress;\n        uint tokenId;\n    }\n    struct ListedNftTokenId{\n        NFT listedData;\n        Token tokenDetail;\n        uint listCount;\n\n    }\n    // Modifire\n    modifier listedRequirements(address mintStoneAddress,address userAddress,uint tokenId,uint _price) {\n        // IConnected.Token[] memory connectedNft = IConnected(mintStoneAddress).getToken(userAddress,tokenId);\n        // require(connectedNft[0].capAmount == connectedNft[0].points,\"First Fill Stone Cap!\");\n        require(!_idToNFT[mintStoneAddress][tokenId].listed,\"Already Listed In Marketplace!\");\n        require(_price >= 0, \"Price Must Be At Least 0 Wei\");\n        _;\n    }\n    //Event\n    event NFTListed(uint256 tokenId,address seller,address owner,uint256 price);\n    event NFTSold(uint256 tokenId,address seller,address owner,uint256 price);\n    event NFTCancel(uint256 tokenId,address seller,address owner,uint256 price);\n    //Constructor\n    constructor(address initialOwner,address _tokenAddress)Ownable(initialOwner) {\n        tokenAddress = _tokenAddress;\n    }\n    // ============ ListNft FUNCTIONS ============\n    /*\n        @dev listNft list NFTs in hestory with tokenid.\n        @param _tokenId that are minted by the nftContract\n        @param _price set price of NFT\n    */\n    function ListNft(address _mintContract,address userAddress,uint256 _price,uint256 _tokenId) public listedRequirements(_mintContract,userAddress,_tokenId,_price) nonReentrant{\n        _nftCount.increment();\n        _idToNFT[_mintContract][_tokenId] = NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true);\n        listCount[_nftCount.current()] = addressToken(_mintContract,_tokenId);\n        ERC721(_mintContract).transferFrom(userAddress, address(this), _tokenId); \n        emit NFTListed(_tokenId, userAddress, address(this), _price);\n    }\n    // ============ BuyNFTs FUNCTIONS ============\n    /*\n        @dev BuyNft convert the ownership seller to the buyer\n        @param _tokenId that are minted by the nftContract\n    */\n    function buyNft(uint listIndex,uint256 price) public nonReentrant {\n\n        require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller != msg.sender, \"An offer cannot buy this Seller !!!\");\n        require(price == _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price , \"Not enough ether to cover asking price !!!\");\n        ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId);\n        IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,address(this));\n        uint256 amount = _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price;\n        // if(typ == 1){ price\n        //     payable(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller).transfer(amount);\n        // }  \n        // else if(typ == 2){  \n        //     IERC20(tokenAddress).safeTransferFrom(msg.sender,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,amount);\n        // }\n        // else{\n        //     revert(\"Please Enter the correct payment Type\");\n        // }\n        IERC20(tokenAddress).safeTransferFrom(msg.sender,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,amount);\n        _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed=false;\n        _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId].count = listIndex;\n        listCount[listIndex] = listCount[_nftCount.current()];\n        _nftCount.decrement();\n        emit NFTSold(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, price);\n    }\n    // ============ CancelOffer FUNCTIONS ============\n    /*\n        @dev CancelOffer cancel offer that is listed\n        @param _tokenid identity of token\n    */\n    function CancelOffer(uint listIndex) public nonReentrant {\n        require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed,\"Please List First !!!\");\n        _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner = msg.sender;\n        ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId);\n        _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed=false;\n        _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId].count = listIndex;\n        listCount[listIndex] = listCount[_nftCount.current()];\n        _nftCount.decrement();\n        emit NFTCancel(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price);\n    }\n    // ============ GetListedNFTs FUNCTIONS ============\n    /*\n        @dev getListedNfts fetch all the NFTs that are listed\n        @return array of NFTs that are listed\n    */\n    function getListedNfts(address _to) public view returns (ListedNftTokenId[] memory,ListedNftTokenId[] memory) {\n        uint myListedCount = 0;\n        for (uint i = 1; i <= _nftCount.current() ; i++) {\n            if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {\n                myListedCount++;\n            }\n        }\n        ListedNftTokenId[] memory myListedNFT = new ListedNftTokenId[](myListedCount);\n        if(myListedCount != 0){\n            uint myListedIndex = 0;\n            for (uint i = 1; i <= _nftCount.current() ; i++) {\n                if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {\n                    IConnected.Token[] memory connectedNft = IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId);\n                    myListedNFT[myListedIndex] = ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i);\n                    myListedIndex++;\n                }\n            }\n        }\n        uint listNft = (_nftCount.current()-myListedCount);\n        ListedNftTokenId[] memory listedNFT = new ListedNftTokenId[](listNft);\n        uint listedIndex = 0;\n        for (uint i = 1; i <= _nftCount.current() ; i++) {\n            if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller != _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {\n                IConnected.Token[] memory connectedNft = IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId);\n                listedNFT[listedIndex] = ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i);\n                listedIndex++;\n            }\n        }\n        return (myListedNFT,listedNFT);\n    }\n    function nftDetail(address mintContractAddress,uint tokenId) public view returns(bool onList){\n        return _idToNFT[mintContractAddress][tokenId].listed;\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *setApprovalForAll\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 786,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 788,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 796,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 800,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 806,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP1 0xD9 MULMOD DUP5 CREATE PUSH30 0x2AE340FBD3DD939371721E9292B2B2D882DEE78A3D70E8FA1564736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP1 0xD9 MULMOD DUP5 CREATE PUSH30 0x2AE340FBD3DD939371721E9292B2B2D882DEE78A3D70E8FA1564736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df80d90984f07d2ae340fbd3dd939371721e9292b2b2d882dee78a3d70e8fa1564736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dispatch_AI/MarketplaceFinal.sol": {
				"IConnected": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getToken",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "uri",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "capAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "points",
											"type": "uint256"
										}
									],
									"internalType": "struct IConnected.Token[]",
									"name": "token",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "marketPlace",
									"type": "address"
								}
							],
							"name": "updateTokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getToken(address,uint256)": "43d7cce6",
							"updateTokenId(address,uint256,address,address)": "9ae38d93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"internalType\":\"struct IConnected.Token[]\",\"name\":\"token\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketPlace\",\"type\":\"address\"}],\"name\":\"updateTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dispatch_AI/MarketplaceFinal.sol\":\"IConnected\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Dispatch_AI/MarketplaceFinal.sol\":{\"keccak256\":\"0x42f5dcf6894acc0e589d4f9d3f01fdbd42e0a142efed8c5b4d7eedbcd3c907c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8013f13a329a9a88ed3ae65b28c0ae36ae0d877bce27c81b28f0d8de00ee4f89\",\"dweb:/ipfs/QmcStNqsqm7iX8cocaKBbH695PDvGwxCaGvwDQ49ZKFshD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTCancel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listIndex",
									"type": "uint256"
								}
							],
							"name": "CancelOffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mintContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ListNft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_idToNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "listTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "listed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_nftCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "buyNft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "getListedNfts",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "tokenId",
													"type": "uint256"
												},
												{
													"internalType": "address",
													"name": "seller",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "owner",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "price",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "count",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "listTime",
													"type": "uint256"
												},
												{
													"internalType": "bool",
													"name": "listed",
													"type": "bool"
												}
											],
											"internalType": "struct Marketplace.NFT",
											"name": "listedData",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "uri",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "capAmount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "points",
													"type": "uint256"
												}
											],
											"internalType": "struct Marketplace.Token",
											"name": "tokenDetail",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "listCount",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.ListedNftTokenId[]",
									"name": "",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "tokenId",
													"type": "uint256"
												},
												{
													"internalType": "address",
													"name": "seller",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "owner",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "price",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "count",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "listTime",
													"type": "uint256"
												},
												{
													"internalType": "bool",
													"name": "listed",
													"type": "bool"
												}
											],
											"internalType": "struct Marketplace.NFT",
											"name": "listedData",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "uri",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "capAmount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "points",
													"type": "uint256"
												}
											],
											"internalType": "struct Marketplace.Token",
											"name": "tokenDetail",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "listCount",
											"type": "uint256"
										}
									],
									"internalType": "struct Marketplace.ListedNftTokenId[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listCount",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftAuctionCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "nftDetail",
							"outputs": [
								{
									"internalType": "bool",
									"name": "onList",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userListCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "MarketPlace",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":834:9271  contract Marketplace is ReentrancyGuard , Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2557:2679  constructor(address initialOwner,address _tokenAddress)Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2620:2632  initialOwner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2644:2656  tokenAddress */\n  0x04\n    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2644:2672  tokenAddress = _tokenAddress */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":834:9271  contract Marketplace is ReentrancyGuard , Ownable{... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_18:\n    /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":834:9271  contract Marketplace is ReentrancyGuard , Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":834:9271  contract Marketplace is ReentrancyGuard , Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6617b35d\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd6cbb202\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf33c4061\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6617b35d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8d02f792\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x0d909886\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e903868\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2791a4d0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x293c6ae1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e455dbe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x556f8084\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7027:9101  function getListedNfts(address _to) public view returns (ListedNftTokenId[] memory,ListedNftTokenId[] memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1247:1291  mapping (uint => uint ) public userListCount */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":3621:3646   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3609:3611   */\n      0x20\n        /* \"#utility.yul\":3594:3612   */\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1247:1291  mapping (uint => uint ) public userListCount */\n      tag_22\n        /* \"#utility.yul\":3475:3652   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1100:1188  mapping (address mintContractAddress=> mapping( uint256 tokenId => NFT)) public _idToNFT */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      0x05\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      swap6\n      dup6\n      add\n      sload\n      0x06\n      swap1\n      swap6\n      add\n      sload\n      swap4\n      swap6\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap6\n      swap4\n      swap1\n      swap3\n      and\n      swap4\n      swap1\n      swap3\n      swap1\n      0xff\n      and\n      dup8\n      jump\n    tag_30:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4225:4250   */\n      swap8\n      dup9\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4324:4339   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":4319:4321   */\n      0x20\n        /* \"#utility.yul\":4304:4322   */\n      dup10\n      add\n        /* \"#utility.yul\":4297:4340   */\n      mstore\n        /* \"#utility.yul\":4376:4391   */\n      swap5\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":4356:4374   */\n      swap4\n      dup7\n      add\n        /* \"#utility.yul\":4349:4392   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x60\n        /* \"#utility.yul\":4408:4426   */\n      dup6\n      add\n        /* \"#utility.yul\":4401:4435   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4466:4469   */\n      0x80\n        /* \"#utility.yul\":4451:4470   */\n      dup5\n      add\n        /* \"#utility.yul\":4444:4479   */\n      mstore\n        /* \"#utility.yul\":4277:4280   */\n      0xa0\n        /* \"#utility.yul\":4495:4514   */\n      dup4\n      add\n        /* \"#utility.yul\":4488:4523   */\n      mstore\n        /* \"#utility.yul\":4567:4581   */\n      iszero\n        /* \"#utility.yul\":4560:4582   */\n      iszero\n        /* \"#utility.yul\":4554:4557   */\n      0xc0\n        /* \"#utility.yul\":4539:4558   */\n      dup3\n      add\n        /* \"#utility.yul\":4532:4583   */\n      mstore\n        /* \"#utility.yul\":4212:4215   */\n      0xe0\n        /* \"#utility.yul\":4197:4216   */\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1100:1188  mapping (address mintContractAddress=> mapping( uint256 tokenId => NFT)) public _idToNFT */\n      tag_22\n        /* \"#utility.yul\":3916:4589   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9106:9268  function nftDetail(address mintContractAddress,uint tokenId) public view returns(bool onList){... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":4759:4773   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4752:4774   */\n      iszero\n        /* \"#utility.yul\":4734:4775   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9106:9268  function nftDetail(address mintContractAddress,uint tokenId) public view returns(bool onList){... */\n      tag_22\n        /* \"#utility.yul\":4594:4781   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5816:6843  function CancelOffer(uint listIndex) public nonReentrant {... */\n    tag_7:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3670:5647  function buyNft(uint listIndex,uint256 price) public nonReentrant {... */\n    tag_8:\n      tag_41\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1001:1040  Counters.Counter public nftAuctionCount */\n    tag_9:\n      sload(0x03)\n      tag_24\n      swap1\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_52\n      jump\t// in\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1194:1241  mapping (uint => addressToken) public listCount */\n    tag_11:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_54:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5231:5263   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":5213:5264   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5295:5297   */\n      0x20\n        /* \"#utility.yul\":5280:5298   */\n      dup4\n      add\n        /* \"#utility.yul\":5273:5307   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5186:5204   */\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":1194:1241  mapping (uint => addressToken) public listCount */\n      tag_22\n        /* \"#utility.yul\":5039:5313   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5464:5515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5452:5454   */\n      0x20\n        /* \"#utility.yul\":5437:5455   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":5318:5521   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":962:995  Counters.Counter public _nftCount */\n    tag_13:\n      sload(0x02)\n      tag_24\n      swap1\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_41\n      tag_66\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2903:3479  function ListNft(address _mintContract,address userAddress,uint256 _price,uint256 _tokenId) public listedRequirements(_mintContract,userAddress,_tokenId,_price) nonReentrant{... */\n    tag_15:\n      tag_41\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7027:9101  function getListedNfts(address _to) public view returns (ListedNftTokenId[] memory,ListedNftTokenId[] memory) {... */\n    tag_21:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7084:7109  ListedNftTokenId[] memory */\n      0x60\n      dup1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7147:7165  uint myListedCount */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7193:7194  1 */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7179:7455  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n    tag_73:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7201:7210  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7196:7197  i */\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7196:7220  i <= _nftCount.current() */\n      gt\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7179:7455  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n      tag_74\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7285  _idToNFT[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7256:7268  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7256:7265  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7256:7268  listCount[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7256:7284  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7285  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7255  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7285  _idToNFT[listCount[i].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7256:7284  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7286:7306  listCount[i].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7307  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7314  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller */\n      swap1\n      swap2\n      add\n      sload\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7247:7321  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to */\n      swap1\n      dup7\n      and\n      eq\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7246:7395  (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed) */\n      dup1\n      iszero\n      tag_78\n      jumpi\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7327:7365  _idToNFT[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7336:7348  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7336:7345  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7336:7348  listCount[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7336:7364  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7327:7365  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7327:7335  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7327:7365  _idToNFT[listCount[i].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7336:7364  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7366:7386  listCount[i].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7327:7387  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7327:7394  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7246:7395  (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed) */\n    tag_78:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7242:7445  if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7415:7430  myListedCount++ */\n      dup2\n      tag_80\n      dup2\n      tag_81\n      jump\t// in\n    tag_80:\n      swap3\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7242:7445  if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {... */\n    tag_79:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7223:7226  i++ */\n      dup1\n      tag_82\n      dup2\n      tag_81\n      jump\t// in\n    tag_82:\n      swap2\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7179:7455  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n      jump(tag_73)\n    tag_74:\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7464:7501  ListedNftTokenId[] memory myListedNFT */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7527:7540  myListedCount */\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7504:7541  new ListedNftTokenId[](myListedCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup2\n      0x20\n      add\n    tag_87:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_87\n      jumpi\n      swap1\n      pop\n    tag_86:\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7464:7541  ListedNftTokenId[] memory myListedNFT = new ListedNftTokenId[](myListedCount) */\n      swap1\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7554:7572  myListedCount != 0 */\n      dup2\n      iszero\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7551:8270  if(myListedCount != 0){... */\n      tag_90\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7587:7605  uint myListedIndex */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7637:7638  1 */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7623:8260  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n    tag_91:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7645:7654  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7640:7641  i */\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7640:7664  i <= _nftCount.current() */\n      gt\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7623:8260  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n      tag_92\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7733  _idToNFT[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7704:7716  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7704:7713  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7704:7716  listCount[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7704:7732  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7733  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7703  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7733  _idToNFT[listCount[i].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7704:7732  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7734:7754  listCount[i].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7755  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7762  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller */\n      swap1\n      swap2\n      add\n      sload\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7695:7769  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to */\n      swap1\n      dup9\n      and\n      eq\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7694:7843  (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed) */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7775:7813  _idToNFT[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7784:7796  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7784:7793  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7784:7796  listCount[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7784:7812  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7775:7813  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7775:7783  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7775:7813  _idToNFT[listCount[i].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7784:7812  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7814:7834  listCount[i].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7775:7835  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7775:7842  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7694:7843  (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed) */\n    tag_95:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7690:8246  if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7867:7905  IConnected.Token[] memory connectedNft */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7919:7931  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7919:7928  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7919:7931  listCount[i] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7919:7947  listCount[i].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7962:7982  listCount[i].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7908:7983  IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      swap2\n      mload\n      shl(0xe1, 0x21ebe673)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5231:5263   */\n      dup12\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7908:7983  IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5213:5264   */\n      mstore\n        /* \"#utility.yul\":5280:5298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5273:5307   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7919:7947  listCount[i].contractAddress */\n      swap2\n      and\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7908:7957  IConnected(listCount[i].contractAddress).getToken */\n      0x43d7cce6\n      swap1\n        /* \"#utility.yul\":5186:5204   */\n      0x44\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7908:7983  IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_100\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8034:8190  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      0x40\n      dup1\n      mload\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8060:8072  listCount[i] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8060:8069  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8060:8072  listCount[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8060:8088  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8051:8089  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8051:8059  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8051:8089  _idToNFT[listCount[i].contractAddress] */\n      dup1\n      dup5\n      mstore\n      dup8\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8060:8088  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8090:8110  listCount[i].tokenId */\n      swap4\n      dup5\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8051:8111  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup8\n      mstore\n      dup5\n      mstore\n      dup8\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8034:8190  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      0x0140\n      dup9\n      add\n      dup10\n      mstore\n      dup1\n      sload\n      0x60\n      dup1\n      dup11\n      add\n      swap2\n      dup3\n      mstore\n      swap5\n      dup3\n      add\n      sload\n      dup5\n      and\n      0x80\n      dup11\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap1\n      swap4\n      and\n      0xa0\n      dup10\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0xc0\n      dup10\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0xe0\n      dup10\n      add\n      mstore\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8060:8088  listCount[i].contractAddress */\n      0x0100\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8034:8190  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup9\n      add\n      mstore\n      swap1\n      swap4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x0120\n      dup7\n      add\n      mstore\n      swap2\n      dup5\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8112:8187  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup5\n      mload\n      swap2\n      dup3\n      add\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8118:8133  connectedNft[0] */\n      dup5\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7867:7983  IConnected.Token[] memory connectedNft = IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      swap5\n      swap6\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8034:8190  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      swap2\n      swap4\n      swap3\n      dup5\n      add\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8112:8187  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup3\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7867:7983  IConnected.Token[] memory connectedNft = IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      dup7\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8118:8133  connectedNft[0] */\n      tag_103\n      jumpi\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8118:8137  connectedNft[0].uri */\n      0x20\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8112:8187  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8138:8150  connectedNft */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8151:8152  0 */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8138:8153  connectedNft[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      tag_106\n      tag_104\n      jump\t// in\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8138:8163  connectedNft[0].capAmount */\n      0x40\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8112:8187  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8164:8176  connectedNft */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8177:8178  0 */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8164:8179  connectedNft[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_108\n      tag_104\n      jump\t// in\n    tag_108:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8164:8186  connectedNft[0].points */\n      0x60\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8112:8187  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8034:8190  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8188:8189  i */\n      dup4\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8034:8190  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8005:8016  myListedNFT */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8017:8030  myListedIndex */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8005:8031  myListedNFT[myListedIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_110\n      tag_104\n      jump\t// in\n    tag_110:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8005:8190  myListedNFT[myListedIndex] = ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8212:8227  myListedIndex++ */\n      dup3\n      dup1\n      tag_111\n      swap1\n      tag_81\n      jump\t// in\n    tag_111:\n      swap4\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7845:8246  {... */\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7690:8246  if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller == _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {... */\n    tag_96:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7667:7670  i++ */\n      dup1\n      tag_112\n      dup2\n      tag_81\n      jump\t// in\n    tag_112:\n      swap2\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7623:8260  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n      jump(tag_91)\n    tag_92:\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7573:8270  {... */\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7551:8270  if(myListedCount != 0){... */\n    tag_90:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8279:8291  uint listNft */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8315:8328  myListedCount */\n      dup3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8295:8314  _nftCount.current() */\n      tag_113\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8295:8304  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8295:8314  _nftCount.current() */\n    tag_113:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8295:8328  _nftCount.current()-myListedCount */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8279:8329  uint listNft = (_nftCount.current()-myListedCount) */\n      swap1\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8339:8374  ListedNftTokenId[] memory listedNFT */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8400:8407  listNft */\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8377:8408  new ListedNftTokenId[](listNft) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_117\n      jumpi\n      tag_117\n      tag_85\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup2\n      0x20\n      add\n    tag_119:\n      tag_120\n      tag_89\n      jump\t// in\n    tag_120:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_119\n      jumpi\n      swap1\n      pop\n    tag_118:\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8339:8408  ListedNftTokenId[] memory listedNFT = new ListedNftTokenId[](listNft) */\n      swap1\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8418:8434  uint listedIndex */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8462:8463  1 */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8448:9055  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n    tag_121:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8470:8479  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8465:8466  i */\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8465:8489  i <= _nftCount.current() */\n      gt\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8448:9055  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n      tag_122\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8554  _idToNFT[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8525:8537  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8525:8534  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8525:8537  listCount[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8525:8553  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8554  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8524  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8554  _idToNFT[listCount[i].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8525:8553  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8555:8575  listCount[i].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8576  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8583  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller */\n      swap1\n      swap2\n      add\n      sload\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8516:8590  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller != _to */\n      swap1\n      dup11\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8515:8664  (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller != _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed) */\n      tag_125\n      jumpi\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8596:8634  _idToNFT[listCount[i].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8605:8617  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8605:8614  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8605:8617  listCount[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8605:8633  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8596:8634  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8596:8604  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8596:8634  _idToNFT[listCount[i].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8605:8633  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8635:8655  listCount[i].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8596:8656  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8596:8663  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8515:8664  (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller != _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed) */\n    tag_125:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8511:9045  if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller != _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8684:8722  IConnected.Token[] memory connectedNft */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8736:8748  listCount[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8736:8745  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8736:8748  listCount[i] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8736:8764  listCount[i].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8779:8799  listCount[i].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8725:8800  IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      swap2\n      mload\n      shl(0xe1, 0x21ebe673)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5231:5263   */\n      dup14\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8725:8800  IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5213:5264   */\n      mstore\n        /* \"#utility.yul\":5280:5298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5273:5307   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8736:8764  listCount[i].contractAddress */\n      swap2\n      and\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8725:8774  IConnected(listCount[i].contractAddress).getToken */\n      0x43d7cce6\n      swap1\n        /* \"#utility.yul\":5186:5204   */\n      0x44\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8725:8800  IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_130\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_101\n      jump\t// in\n    tag_130:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8843:8999  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      0x40\n      dup1\n      mload\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8869:8881  listCount[i] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8869:8878  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8869:8881  listCount[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8869:8897  listCount[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8860:8898  _idToNFT[listCount[i].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8860:8868  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8860:8898  _idToNFT[listCount[i].contractAddress] */\n      dup1\n      dup5\n      mstore\n      dup8\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8869:8897  listCount[i].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8899:8919  listCount[i].tokenId */\n      swap4\n      dup5\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8860:8920  _idToNFT[listCount[i].contractAddress][listCount[i].tokenId] */\n      dup8\n      mstore\n      dup5\n      mstore\n      dup8\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8843:8999  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      0x0140\n      dup9\n      add\n      dup10\n      mstore\n      dup1\n      sload\n      0x60\n      dup1\n      dup11\n      add\n      swap2\n      dup3\n      mstore\n      swap5\n      dup3\n      add\n      sload\n      dup5\n      and\n      0x80\n      dup11\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap1\n      swap4\n      and\n      0xa0\n      dup10\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0xc0\n      dup10\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0xe0\n      dup10\n      add\n      mstore\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8869:8897  listCount[i].contractAddress */\n      0x0100\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8843:8999  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup9\n      add\n      mstore\n      swap1\n      swap4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x0120\n      dup7\n      add\n      mstore\n      swap2\n      dup5\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8921:8996  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup5\n      mload\n      swap2\n      dup3\n      add\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8927:8942  connectedNft[0] */\n      dup5\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8684:8800  IConnected.Token[] memory connectedNft = IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      swap5\n      swap6\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8843:8999  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      swap2\n      swap4\n      swap3\n      dup5\n      add\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8921:8996  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup3\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8684:8800  IConnected.Token[] memory connectedNft = IConnected(listCount[i].contractAddress).getToken(_to,listCount[i].tokenId) */\n      dup7\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8927:8942  connectedNft[0] */\n      tag_132\n      jumpi\n      tag_132\n      tag_104\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8927:8946  connectedNft[0].uri */\n      0x20\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8921:8996  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8947:8959  connectedNft */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8960:8961  0 */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8947:8962  connectedNft[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_104\n      jump\t// in\n    tag_134:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8947:8972  connectedNft[0].capAmount */\n      0x40\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8921:8996  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8973:8985  connectedNft */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8986:8987  0 */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8973:8988  connectedNft[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_136\n      tag_104\n      jump\t// in\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8973:8995  connectedNft[0].points */\n      0x60\n      add\n      mload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8921:8996  Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8843:8999  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8997:8998  i */\n      dup4\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8843:8999  ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8818:8827  listedNFT */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8828:8839  listedIndex */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8818:8840  listedNFT[listedIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_138\n      tag_104\n      jump\t// in\n    tag_138:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8818:8999  listedNFT[listedIndex] = ListedNftTokenId(_idToNFT[listCount[i].contractAddress][listCount[i].tokenId],Token(connectedNft[0].uri,connectedNft[0].capAmount,connectedNft[0].points),i) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9017:9030  listedIndex++ */\n      dup3\n      dup1\n      tag_139\n      swap1\n      tag_81\n      jump\t// in\n    tag_139:\n      swap4\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8666:9045  {... */\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8511:9045  if ((_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].seller != _to) && (_idToNFT[listCount[i].contractAddress][listCount[i].tokenId].listed)) {... */\n    tag_126:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8492:8495  i++ */\n      dup1\n      tag_140\n      dup2\n      tag_81\n      jump\t// in\n    tag_140:\n      swap2\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":8448:9055  for (uint i = 1; i <= _nftCount.current() ; i++) {... */\n      jump(tag_121)\n    tag_122:\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9072:9083  myListedNFT */\n      swap3\n      swap8\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9084:9093  listedNFT */\n      swap1\n      swap7\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":7027:9101  function getListedNfts(address _to) public view returns (ListedNftTokenId[] memory,ListedNftTokenId[] memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9106:9268  function nftDetail(address mintContractAddress,uint tokenId) public view returns(bool onList){... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9216:9245  _idToNFT[mintContractAddress] */\n      dup3\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9187:9198  bool onList */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9216:9245  _idToNFT[mintContractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9216:9224  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9216:9245  _idToNFT[mintContractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9216:9254  _idToNFT[mintContractAddress][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9216:9261  _idToNFT[mintContractAddress][tokenId].listed */\n      0x06\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":9106:9268  function nftDetail(address mintContractAddress,uint tokenId) public view returns(bool onList){... */\n    tag_141:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5816:6843  function CancelOffer(uint listIndex) public nonReentrant {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_143\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5891:5937  _idToNFT[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5900:5920  listCount[listIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5900:5909  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5900:5920  listCount[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5900:5936  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5891:5937  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5891:5899  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5891:5937  _idToNFT[listCount[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5900:5936  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5938:5966  listCount[listIndex].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5891:5967  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5891:5974  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5883:5999  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed,\"Please List First !!!\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9381:9383   */\n      0x20\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5883:5999  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed,\"Please List First !!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9363:9384   */\n      mstore\n        /* \"#utility.yul\":9420:9422   */\n      0x15\n        /* \"#utility.yul\":9400:9418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9393:9423   */\n      mstore\n      shl(0x58, 0x506c65617365204c69737420466972737420212121)\n        /* \"#utility.yul\":9439:9457   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9432:9483   */\n      mstore\n        /* \"#utility.yul\":9500:9518   */\n      0x64\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5883:5999  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed,\"Please List First !!!\") */\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6055  _idToNFT[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6018:6038  listCount[listIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6018:6027  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6018:6038  listCount[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6018:6054  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6055  _idToNFT[listCount[listIndex].contractAddress] */\n      dup7\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6017  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6055  _idToNFT[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6018:6054  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6056:6084  listCount[listIndex].tokenId */\n      dup4\n      add\n      dup1\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6085  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup9\n      mstore\n      swap1\n      dup6\n      mstore\n      dup4\n      dup8\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6091  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner */\n      0x02\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6104  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6094:6104  msg.sender */\n      caller\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6009:6104  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].owner = msg.sender */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6121:6141  listCount[listIndex] */\n      swap7\n      dup9\n      swap1\n      mstore\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6121:6157  listCount[listIndex].contractAddress */\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6199:6227  listCount[listIndex].tokenId */\n      swap3\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6114:6228  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6121:6157  listCount[listIndex].contractAddress */\n      swap3\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6114:6171  ERC721(listCount[listIndex].contractAddress).transferFrom */\n      0x23b872dd\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6114:6228  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      tag_149\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6180:6184  this */\n      address\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6094:6104  msg.sender */\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6114:6228  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      0x04\n      add\n      tag_150\n      jump\t// in\n    tag_149:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6322:6327  false */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6247:6267  listCount[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6247:6256  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6247:6267  listCount[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6247:6283  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6284  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6246  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6284  _idToNFT[listCount[listIndex].contractAddress] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6247:6283  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6285:6313  listCount[listIndex].tokenId */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6314  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup7\n      mstore\n      swap3\n      mstore\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6321  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed */\n      dup3\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6327  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed=false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6257:6266  listIndex */\n      dup5\n      swap4\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6238:6246  _idToNFT */\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6322:6327  false */\n      swap1\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6356:6375  _nftCount.current() */\n      tag_154\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6356:6365  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6356:6375  _nftCount.current() */\n    tag_154:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6346:6376  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6346:6392  listCount[_nftCount.current()].contractAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6337:6393  _idToNFT[listCount[_nftCount.current()].contractAddress] */\n      dup5\n      mstore\n      swap2\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6394:6403  listCount */\n      0x06\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6404:6423  _nftCount.current() */\n      tag_155\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6404:6413  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6404:6423  _nftCount.current() */\n    tag_155:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6394:6424  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6394:6432  listCount[_nftCount.current()].tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6337:6433  _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6337:6439  _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId].count */\n      0x04\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6337:6451  _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId].count = listIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6484:6493  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6484:6514  listCount[_nftCount.current()] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6494:6513  _nftCount.current() */\n      tag_156\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6494:6503  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6494:6513  _nftCount.current() */\n    tag_156:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6484:6514  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6461:6481  listCount[listIndex] */\n      dup5\n      dup3\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6461:6470  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6461:6481  listCount[listIndex] */\n      swap1\n      swap4\n      mstore\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6461:6514  listCount[listIndex] = listCount[_nftCount.current()] */\n      dup2\n      sload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n      0x01\n      swap2\n      dup3\n      add\n      sload\n      swap2\n      add\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6524:6545  _nftCount.decrement() */\n      tag_157\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6524:6533  _nftCount */\n      0x02\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6524:6543  _nftCount.decrement */\n      tag_158\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6524:6545  _nftCount.decrement() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6570:6616  _idToNFT[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6579:6599  listCount[listIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6579:6588  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6579:6599  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6579:6615  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6570:6616  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6570:6578  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6570:6616  _idToNFT[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6579:6615  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6617:6645  listCount[listIndex].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6570:6646  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup7\n      mstore\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6570:6654  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId */\n      dup1\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6656:6739  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap2\n      dup2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6753:6835  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6560:6836  NFTCancel(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price) */\n      dup4\n      mload\n        /* \"#utility.yul\":10140:10165   */\n      swap3\n      dup4\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6656:6739  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap5\n      and\n        /* \"#utility.yul\":10219:10237   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":10212:10255   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6741:6751  msg.sender */\n      caller\n        /* \"#utility.yul\":10271:10289   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10264:10307   */\n      mstore\n        /* \"#utility.yul\":10338:10340   */\n      0x60\n        /* \"#utility.yul\":10323:10341   */\n      dup2\n      add\n        /* \"#utility.yul\":10316:10350   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6560:6836  NFTCancel(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price) */\n      0xfb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e02443603\n      swap1\n        /* \"#utility.yul\":10127:10130   */\n      0x80\n        /* \"#utility.yul\":10112:10131   */\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":6560:6836  NFTCancel(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_161:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5816:6843  function CancelOffer(uint listIndex) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3670:5647  function buyNft(uint listIndex,uint256 price) public nonReentrant {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_164\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3801  _idToNFT[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3764:3784  listCount[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3764:3773  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3764:3784  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3764:3800  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3801  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3763  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3801  _idToNFT[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3764:3800  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3802:3830  listCount[listIndex].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3831  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3838  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3842:3852  msg.sender */\n      caller\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3838  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3755:3852  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller != msg.sender */\n      sub\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3747:3892  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller != msg.sender, \"An offer cannot buy this Seller !!!\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10563:10565   */\n      0x20\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3747:3892  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller != msg.sender, \"An offer cannot buy this Seller !!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10545:10566   */\n      mstore\n        /* \"#utility.yul\":10602:10604   */\n      0x23\n        /* \"#utility.yul\":10582:10600   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10575:10605   */\n      mstore\n        /* \"#utility.yul\":10641:10675   */\n      0x416e206f666665722063616e6e6f742062757920746869732053656c6c657220\n        /* \"#utility.yul\":10621:10639   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10614:10676   */\n      mstore\n      shl(0xe8, 0x212121)\n        /* \"#utility.yul\":10692:10710   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10685:10718   */\n      mstore\n        /* \"#utility.yul\":10735:10754   */\n      0x84\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3747:3892  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller != msg.sender, \"An offer cannot buy this Seller !!!\") */\n      tag_147\n        /* \"#utility.yul\":10361:10760   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3747:3892  require(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller != msg.sender, \"An offer cannot buy this Seller !!!\") */\n    tag_166:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3919:3965  _idToNFT[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3928:3948  listCount[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3928:3937  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3928:3948  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3928:3964  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3919:3965  _idToNFT[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3919:3927  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3919:3965  _idToNFT[listCount[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3928:3964  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3966:3994  listCount[listIndex].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3919:3995  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3919:4001  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3910:4001  price == _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      dup2\n      eq\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3902:4049  require(price == _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price , \"Not enough ether to cover asking price !!!\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3902:4049  require(price == _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price , \"Not enough ether to cover asking price !!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10949:10970   */\n      mstore\n        /* \"#utility.yul\":11006:11008   */\n      0x2a\n        /* \"#utility.yul\":10986:11004   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10979:11009   */\n      mstore\n        /* \"#utility.yul\":11045:11079   */\n      0x4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67\n        /* \"#utility.yul\":11025:11043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11018:11080   */\n      mstore\n      shl(0xb0, 0x20707269636520212121)\n        /* \"#utility.yul\":11096:11114   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11089:11129   */\n      mstore\n        /* \"#utility.yul\":11146:11165   */\n      0x84\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3902:4049  require(price == _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price , \"Not enough ether to cover asking price !!!\") */\n      tag_147\n        /* \"#utility.yul\":10765:11171   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3902:4049  require(price == _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price , \"Not enough ether to cover asking price !!!\") */\n    tag_169:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4066:4086  listCount[listIndex] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4066:4075  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4066:4086  listCount[listIndex] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4066:4102  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4144:4172  listCount[listIndex].tokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4059:4173  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      swap2\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4066:4102  listCount[listIndex].contractAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4059:4116  ERC721(listCount[listIndex].contractAddress).transferFrom */\n      0x23b872dd\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4059:4173  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      tag_172\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4125:4129  this */\n      address\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4132:4142  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4144:4172  listCount[listIndex].tokenId */\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4059:4173  ERC721(listCount[listIndex].contractAddress).transferFrom(address(this), msg.sender, listCount[listIndex].tokenId) */\n      0x04\n      add\n      tag_150\n      jump\t// in\n    tag_172:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4194:4214  listCount[listIndex] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4194:4203  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4194:4214  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4194:4230  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4257:4285  listCount[listIndex].tokenId */\n      swap2\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4194:4230  listCount[listIndex].contractAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4286:4332  _idToNFT[listCount[listIndex].contractAddress] */\n      dup1\n      dup8\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4286:4294  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4286:4332  _idToNFT[listCount[listIndex].contractAddress] */\n      dup7\n      mstore\n      dup5\n      dup8\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4286:4362  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup3\n      dup9\n      mstore\n      swap1\n      swap6\n      mstore\n      swap5\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4286:4369  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4183:4384  IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,address(this)) */\n      swap2\n      mload\n      shl(0xe0, 0x9ae38d93)\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4246:4256  msg.sender */\n      caller\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4183:4384  IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11445:11479   */\n      mstore\n        /* \"#utility.yul\":11495:11513   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11488:11522   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4286:4369  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      and\n        /* \"#utility.yul\":11538:11556   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11531:11574   */\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4378:4382  this */\n      address\n        /* \"#utility.yul\":11590:11608   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":11583:11626   */\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4194:4230  listCount[listIndex].contractAddress */\n      swap2\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4183:4245  IConnected(listCount[listIndex].contractAddress).updateTokenId */\n      0x9ae38d93\n      swap1\n        /* \"#utility.yul\":11379:11398   */\n      0x84\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4183:4384  IConnected(listCount[listIndex].contractAddress).updateTokenId(msg.sender,listCount[listIndex].tokenId,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4394:4408  uint256 amount */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4420:4440  listCount[listIndex] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4420:4429  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4420:4440  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4420:4456  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4457  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4419  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4457  _idToNFT[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4420:4456  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4458:4486  listCount[listIndex].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4487  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4493  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5020:5103  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap3\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4978:4990  tokenAddress */\n      sload(0x04)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4493  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4971:5111  IERC20(tokenAddress).safeTransferFrom(msg.sender,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,amount) */\n      tag_181\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4978:4990  tokenAddress */\n      dup3\n      and\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5009:5019  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5020:5103  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4411:4493  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].price */\n      dup5\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4971:5008  IERC20(tokenAddress).safeTransferFrom */\n      tag_182\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":4971:5111  IERC20(tokenAddress).safeTransferFrom(msg.sender,_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller,amount) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5205:5210  false */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5130:5150  listCount[listIndex] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5130:5139  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5130:5150  listCount[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5130:5166  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5167  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5129  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5167  _idToNFT[listCount[listIndex].contractAddress] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5130:5166  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5168:5196  listCount[listIndex].tokenId */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5197  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup7\n      mstore\n      swap3\n      mstore\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5204  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed */\n      dup3\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5210  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].listed=false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5140:5149  listIndex */\n      dup6\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5121:5129  _idToNFT */\n      swap1\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5205:5210  false */\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5239:5258  _nftCount.current() */\n      tag_183\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5239:5248  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5239:5258  _nftCount.current() */\n    tag_183:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5229:5259  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5229:5275  listCount[_nftCount.current()].contractAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5220:5276  _idToNFT[listCount[_nftCount.current()].contractAddress] */\n      dup5\n      mstore\n      swap2\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5277:5286  listCount */\n      0x06\n      dup2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5287:5306  _nftCount.current() */\n      tag_184\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5287:5296  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5287:5306  _nftCount.current() */\n    tag_184:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5277:5307  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5277:5315  listCount[_nftCount.current()].tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5220:5316  _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5220:5322  _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId].count */\n      0x04\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5220:5334  _idToNFT[listCount[_nftCount.current()].contractAddress][listCount[_nftCount.current()].tokenId].count = listIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5367:5376  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5367:5397  listCount[_nftCount.current()] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5377:5396  _nftCount.current() */\n      tag_185\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5377:5386  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5377:5396  _nftCount.current() */\n    tag_185:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5367:5397  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5344:5364  listCount[listIndex] */\n      dup7\n      dup3\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5344:5353  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5344:5364  listCount[listIndex] */\n      swap1\n      swap4\n      mstore\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5344:5397  listCount[listIndex] = listCount[_nftCount.current()] */\n      dup2\n      sload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n      0x01\n      swap2\n      dup3\n      add\n      sload\n      swap2\n      add\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5407:5428  _nftCount.decrement() */\n      tag_186\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5407:5416  _nftCount */\n      0x02\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5407:5426  _nftCount.decrement */\n      tag_158\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5407:5428  _nftCount.decrement() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5451:5497  _idToNFT[listCount[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5460:5480  listCount[listIndex] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5460:5469  listCount */\n      0x06\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5460:5480  listCount[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5460:5496  listCount[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5451:5497  _idToNFT[listCount[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5451:5459  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5451:5497  _idToNFT[listCount[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5460:5496  listCount[listIndex].contractAddress */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5498:5526  listCount[listIndex].tokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5451:5527  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId] */\n      dup7\n      mstore\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5451:5535  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId */\n      dup1\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5537:5620  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap2\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5443:5640  NFTSold(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, price) */\n      dup3\n      mload\n        /* \"#utility.yul\":10140:10165   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5537:5620  _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":10219:10237   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":10212:10255   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5622:5632  msg.sender */\n      caller\n        /* \"#utility.yul\":10271:10289   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10264:10307   */\n      mstore\n        /* \"#utility.yul\":10338:10340   */\n      0x60\n        /* \"#utility.yul\":10323:10341   */\n      dup3\n      add\n        /* \"#utility.yul\":10316:10350   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5443:5640  NFTSold(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, price) */\n      mload\n      0x8562eb94748e30bb0071e932744ce902b460c683474fcb3bfd567ffa16b1afb2\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10127:10130   */\n      0x80\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":5443:5640  NFTSold(_idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].tokenId, _idToNFT[listCount[listIndex].contractAddress][listCount[listIndex].tokenId].seller, msg.sender, price) */\n      add\n      swap1\n      log1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3736:5647  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_188:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3670:5647  function buyNft(uint listIndex,uint256 price) public nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5464:5515   */\n      mstore\n        /* \"#utility.yul\":5437:5455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_147\n        /* \"#utility.yul\":5318:5521   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2903:3479  function ListNft(address _mintContract,address userAddress,uint256 _price,uint256 _tokenId) public listedRequirements(_mintContract,userAddress,_tokenId,_price) nonReentrant{... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2125:2151  _idToNFT[mintStoneAddress] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2125:2133  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2125:2151  _idToNFT[mintStoneAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2125:2160  _idToNFT[mintStoneAddress][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2125:2167  _idToNFT[mintStoneAddress][tokenId].listed */\n      0x06\n      add\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3021:3034  _mintContract */\n      dup5\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3035:3046  userAddress */\n      dup5\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3047:3055  _tokenId */\n      dup4\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3056:3062  _price */\n      dup6\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2125:2167  _idToNFT[mintStoneAddress][tokenId].listed */\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2124:2167  !_idToNFT[mintStoneAddress][tokenId].listed */\n      iszero\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2116:2201  require(!_idToNFT[mintStoneAddress][tokenId].listed,\"Already Listed In Marketplace!\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11839:11841   */\n      0x20\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2116:2201  require(!_idToNFT[mintStoneAddress][tokenId].listed,\"Already Listed In Marketplace!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11821:11842   */\n      mstore\n        /* \"#utility.yul\":11878:11880   */\n      0x1e\n        /* \"#utility.yul\":11858:11876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11851:11881   */\n      mstore\n        /* \"#utility.yul\":11917:11949   */\n      0x416c7265616479204c697374656420496e204d61726b6574706c616365210000\n        /* \"#utility.yul\":11897:11915   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11890:11950   */\n      mstore\n        /* \"#utility.yul\":11967:11985   */\n      0x64\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2116:2201  require(!_idToNFT[mintStoneAddress][tokenId].listed,\"Already Listed In Marketplace!\") */\n      tag_147\n        /* \"#utility.yul\":11637:11991   */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2116:2201  require(!_idToNFT[mintStoneAddress][tokenId].listed,\"Already Listed In Marketplace!\") */\n    tag_203:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_210:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3086:3107  _nftCount.increment() */\n      tag_212\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3086:3095  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3086:3107  _nftCount.increment() */\n    tag_212:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3157:3165  _tokenId */\n      dup7\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3166:3177  userAddress */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3186:3190  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3192:3198  _price */\n      dup8\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3199:3218  _nftCount.current() */\n      tag_214\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3199:3208  _nftCount */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3199:3218  _nftCount.current() */\n    tag_214:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3219:3234  block.timestamp */\n      timestamp\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3235:3239  true */\n      0x01\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3153:3240  NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      0x40\n      swap3\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3117:3140  _idToNFT[_mintContract] */\n      dup13\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3117:3125  _idToNFT */\n      0x05\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3117:3140  _idToNFT[_mintContract] */\n      dup1\n      dup7\n      mstore\n      dup7\n      dup3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3117:3150  _idToNFT[_mintContract][_tokenId] */\n      dup14\n      dup4\n      mstore\n      dup7\n      mstore\n      dup7\n      dup3\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3117:3240  _idToNFT[_mintContract][_tokenId] = NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      dup9\n      mload\n      dup2\n      sstore\n      dup9\n      dup8\n      add\n      mload\n      swap6\n      dup2\n      add\n      dup1\n      sload\n      swap7\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap8\n      dup9\n      and\n      or\n      swap1\n      sstore\n      dup9\n      dup9\n      add\n      mload\n      0x02\n      dup1\n      dup4\n      add\n      dup1\n      sload\n      swap3\n      swap1\n      swap8\n      and\n      swap2\n      swap1\n      swap8\n      and\n      or\n      swap1\n      swap5\n      sstore\n      0x60\n      dup9\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      dup9\n      add\n      mload\n      0x04\n      dup6\n      add\n      sstore\n      0xa0\n      dup9\n      add\n      mload\n      swap1\n      dup5\n      add\n      sstore\n      0xc0\n      swap1\n      swap7\n      add\n      mload\n      0x06\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3283:3319  addressToken(_mintContract,_tokenId) */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      swap1\n      swap6\n      mstore\n      dup5\n      mstore\n      swap2\n      dup4\n      add\n      dup10\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3283:3319  addressToken(_mintContract,_tokenId) */\n      swap2\n      swap3\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3117:3240  _idToNFT[_mintContract][_tokenId] = NFT(_tokenId,userAddress,address(this),_price,_nftCount.current(),block.timestamp,true) */\n      swap1\n      swap2\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3250:3280  listCount[_nftCount.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3250:3319  listCount[_nftCount.current()] = addressToken(_mintContract,_tokenId) */\n      dup4\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      swap4\n      swap1\n      swap3\n      add\n      mload\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3329:3401  ERC721(_mintContract).transferFrom(userAddress, address(this), _tokenId) */\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3329:3363  ERC721(_mintContract).transferFrom */\n      swap1\n      dup10\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3329:3401  ERC721(_mintContract).transferFrom(userAddress, address(this), _tokenId) */\n      tag_216\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3364:3375  userAddress */\n      dup11\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3385:3389  this */\n      address\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3392:3400  _tokenId */\n      dup11\n      swap1\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3329:3401  ERC721(_mintContract).transferFrom(userAddress, address(this), _tokenId) */\n      0x04\n      add\n      tag_150\n      jump\t// in\n    tag_216:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3417:3472  NFTListed(_tokenId, userAddress, address(this), _price) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10140:10165   */\n      dup9\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10239:10254   */\n      dup12\n      and\n        /* \"#utility.yul\":10234:10236   */\n      0x20\n        /* \"#utility.yul\":10219:10237   */\n      dup3\n      add\n        /* \"#utility.yul\":10212:10255   */\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3458:3462  this */\n      address\n        /* \"#utility.yul\":10271:10289   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":10264:10307   */\n      mstore\n        /* \"#utility.yul\":10338:10340   */\n      0x60\n        /* \"#utility.yul\":10323:10341   */\n      dup2\n      add\n        /* \"#utility.yul\":10316:10350   */\n      dup11\n      swap1\n      mstore\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3417:3472  NFTListed(_tokenId, userAddress, address(this), _price) */\n      swap1\n      mload\n      0x62af98dbc3627e85c5eb929b032d3ce3d6c376652d71b4cca6162a16ef099114\n      swap4\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10127:10130   */\n      0x80\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":3417:3472  NFTListed(_tokenId, userAddress, address(this), _price) */\n      add\n      swap2\n      pop\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_221\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_221:\n        /* \"contracts/Dispatch_AI/MarketplaceFinal.sol\":2903:3479  function ListNft(address _mintContract,address userAddress,uint256 _price,uint256 _tokenId) public listedRequirements(_mintContract,userAddress,_tokenId,_price) nonReentrant{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12555:12557   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12537:12558   */\n      mstore\n        /* \"#utility.yul\":12594:12596   */\n      0x1f\n        /* \"#utility.yul\":12574:12592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12567:12597   */\n      mstore\n        /* \"#utility.yul\":12633:12666   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12613:12631   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12606:12667   */\n      mstore\n        /* \"#utility.yul\":12684:12702   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_147\n        /* \"#utility.yul\":12353:12708   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_224:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12915:12917   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12897:12918   */\n      mstore\n        /* \"#utility.yul\":12954:12956   */\n      0x1b\n        /* \"#utility.yul\":12934:12952   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12927:12957   */\n      mstore\n        /* \"#utility.yul\":12993:13022   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":12973:12991   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12966:13023   */\n      mstore\n        /* \"#utility.yul\":13040:13058   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_147\n        /* \"#utility.yul\":12713:13064   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_228:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5464:5515   */\n      mstore\n        /* \"#utility.yul\":5437:5455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_147\n        /* \"#utility.yul\":5318:5521   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_246\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_248\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5482:5514   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5464:5515   */\n      mstore\n        /* \"#utility.yul\":5437:5455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_147\n        /* \"#utility.yul\":5318:5521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5464:5515   */\n      mstore\n        /* \"#utility.yul\":5437:5455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_147\n        /* \"#utility.yul\":5318:5521   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_264\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_263)\n    tag_264:\n      0x60\n      swap2\n      pop\n    tag_263:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_265\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_269\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_270\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_255)\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_272\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5482:5514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5464:5515   */\n      mstore\n        /* \"#utility.yul\":5437:5455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_147\n        /* \"#utility.yul\":5318:5521   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_273:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_255)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n      0x40\n      dup1\n      mload\n      0x0140\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      0x60\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      0x80\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0xc0\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0xe0\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0x0100\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0x0120\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      tag_280\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_280:\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_282:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_291:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_20:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_293:\n        /* \"#utility.yul\":343:372   */\n      tag_255\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_282\n      jump\t// in\n        /* \"#utility.yul\":383:633   */\n    tag_283:\n        /* \"#utility.yul\":468:469   */\n      0x00\n        /* \"#utility.yul\":478:591   */\n    tag_296:\n        /* \"#utility.yul\":492:498   */\n      dup4\n        /* \"#utility.yul\":489:490   */\n      dup2\n        /* \"#utility.yul\":486:499   */\n      lt\n        /* \"#utility.yul\":478:591   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":568:579   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":562:580   */\n      mload\n        /* \"#utility.yul\":549:560   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":542:581   */\n      mstore\n        /* \"#utility.yul\":514:516   */\n      0x20\n        /* \"#utility.yul\":507:517   */\n      add\n        /* \"#utility.yul\":478:591   */\n      jump(tag_296)\n    tag_298:\n      pop\n      pop\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":607:623   */\n      swap2\n      add\n        /* \"#utility.yul\":600:627   */\n      mstore\n        /* \"#utility.yul\":383:633   */\n      jump\t// out\n        /* \"#utility.yul\":638:1117   */\n    tag_284:\n        /* \"#utility.yul\":686:689   */\n      0x00\n        /* \"#utility.yul\":730:735   */\n      dup2\n        /* \"#utility.yul\":724:736   */\n      mload\n        /* \"#utility.yul\":757:761   */\n      0x60\n        /* \"#utility.yul\":752:755   */\n      dup5\n        /* \"#utility.yul\":745:762   */\n      mstore\n        /* \"#utility.yul\":791:803   */\n      dup1\n        /* \"#utility.yul\":785:804   */\n      mload\n        /* \"#utility.yul\":836:842   */\n      dup1\n        /* \"#utility.yul\":829:833   */\n      0x60\n        /* \"#utility.yul\":824:827   */\n      dup7\n        /* \"#utility.yul\":820:834   */\n      add\n        /* \"#utility.yul\":813:843   */\n      mstore\n        /* \"#utility.yul\":852:934   */\n      tag_300\n        /* \"#utility.yul\":927:933   */\n      dup2\n        /* \"#utility.yul\":921:924   */\n      0x80\n        /* \"#utility.yul\":916:919   */\n      dup8\n        /* \"#utility.yul\":912:925   */\n      add\n        /* \"#utility.yul\":905:909   */\n      0x20\n        /* \"#utility.yul\":891:903   */\n      dup6\n        /* \"#utility.yul\":887:910   */\n      add\n        /* \"#utility.yul\":852:934   */\n      tag_283\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":983:987   */\n      0x20\n        /* \"#utility.yul\":972:988   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":966:989   */\n      mload\n        /* \"#utility.yul\":950:964   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":943:990   */\n      mstore\n        /* \"#utility.yul\":1039:1043   */\n      0x40\n        /* \"#utility.yul\":1028:1044   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":1022:1045   */\n      mload\n        /* \"#utility.yul\":1006:1020   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":999:1046   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      add\n        /* \"#utility.yul\":1107:1110   */\n      0x80\n        /* \"#utility.yul\":1062:1111   */\n      add\n      swap1\n        /* \"#utility.yul\":638:1117   */\n      jump\t// out\n        /* \"#utility.yul\":1122:2647   */\n    tag_285:\n        /* \"#utility.yul\":1191:1194   */\n      0x00\n        /* \"#utility.yul\":1222:1225   */\n      dup3\n        /* \"#utility.yul\":1254:1259   */\n      dup3\n        /* \"#utility.yul\":1248:1260   */\n      mload\n        /* \"#utility.yul\":1281:1287   */\n      dup1\n        /* \"#utility.yul\":1276:1279   */\n      dup6\n        /* \"#utility.yul\":1269:1288   */\n      mstore\n        /* \"#utility.yul\":1307:1311   */\n      0x20\n        /* \"#utility.yul\":1336:1338   */\n      dup1\n        /* \"#utility.yul\":1331:1334   */\n      dup7\n        /* \"#utility.yul\":1327:1339   */\n      add\n        /* \"#utility.yul\":1320:1339   */\n      swap6\n      pop\n        /* \"#utility.yul\":1392:1394   */\n      dup1\n        /* \"#utility.yul\":1382:1388   */\n      dup3\n        /* \"#utility.yul\":1379:1380   */\n      0x05\n        /* \"#utility.yul\":1375:1389   */\n      shl\n        /* \"#utility.yul\":1368:1373   */\n      dup5\n        /* \"#utility.yul\":1364:1390   */\n      add\n        /* \"#utility.yul\":1360:1395   */\n      add\n        /* \"#utility.yul\":1429:1431   */\n      dup2\n        /* \"#utility.yul\":1422:1427   */\n      dup7\n        /* \"#utility.yul\":1418:1432   */\n      add\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1460:2621   */\n    tag_302:\n        /* \"#utility.yul\":1474:1480   */\n      dup5\n        /* \"#utility.yul\":1471:1472   */\n      dup2\n        /* \"#utility.yul\":1468:1481   */\n      lt\n        /* \"#utility.yul\":1460:2621   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1539:1555   */\n      dup6\n      dup4\n      sub\n      not(0x1f)\n        /* \"#utility.yul\":1535:1565   */\n      add\n        /* \"#utility.yul\":1523:1566   */\n      dup10\n      mstore\n        /* \"#utility.yul\":1589:1602   */\n      dup2\n      mload\n        /* \"#utility.yul\":1654:1663   */\n      dup1\n      mload\n        /* \"#utility.yul\":1689:1698   */\n      dup1\n      mload\n        /* \"#utility.yul\":1676:1699   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1738:1749   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1732:1750   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1827:1848   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1812:1825   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":1805:1849   */\n      mstore\n        /* \"#utility.yul\":1872:1876   */\n      0x40\n        /* \"#utility.yul\":1921:1932   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1915:1933   */\n      mload\n        /* \"#utility.yul\":1911:1938   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1896:1909   */\n      dup2\n      dup8\n      add\n        /* \"#utility.yul\":1889:1939   */\n      mstore\n        /* \"#utility.yul\":1962:1966   */\n      0x60\n        /* \"#utility.yul\":2007:2018   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2001:2019   */\n      mload\n        /* \"#utility.yul\":1986:1999   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":1979:2020   */\n      mstore\n        /* \"#utility.yul\":2043:2047   */\n      0x80\n        /* \"#utility.yul\":2088:2099   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2082:2100   */\n      mload\n        /* \"#utility.yul\":2067:2080   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":2060:2101   */\n      mstore\n        /* \"#utility.yul\":1781:1784   */\n      0xa0\n        /* \"#utility.yul\":2169:2180   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2163:2181   */\n      mload\n        /* \"#utility.yul\":2148:2161   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":2141:2182   */\n      mstore\n        /* \"#utility.yul\":2206:2210   */\n      0xc0\n        /* \"#utility.yul\":2266:2278   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2260:2279   */\n      mload\n        /* \"#utility.yul\":2253:2280   */\n      iszero\n        /* \"#utility.yul\":2246:2281   */\n      iszero\n        /* \"#utility.yul\":2230:2244   */\n      swap2\n      dup7\n      add\n        /* \"#utility.yul\":2223:2282   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2323:2334   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2317:2335   */\n      mload\n        /* \"#utility.yul\":1625:1631   */\n      0x0120\n        /* \"#utility.yul\":2365:2369   */\n      0xe0\n        /* \"#utility.yul\":2355:2370   */\n      dup8\n      add\n        /* \"#utility.yul\":2348:2375   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1625:1631   */\n      swap2\n        /* \"#utility.yul\":2402:2456   */\n      tag_305\n        /* \"#utility.yul\":2442:2455   */\n      dup4\n      dup9\n      add\n        /* \"#utility.yul\":2317:2335   */\n      dup4\n        /* \"#utility.yul\":2402:2456   */\n      tag_284\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2501:2512   */\n      swap4\n      add\n        /* \"#utility.yul\":2495:2513   */\n      mload\n        /* \"#utility.yul\":2486:2492   */\n      0x0100\n        /* \"#utility.yul\":2476:2493   */\n      swap7\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":2469:2514   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n        /* \"#utility.yul\":2599:2611   */\n      swap9\n      dup5\n      add\n      swap9\n        /* \"#utility.yul\":2388:2456   */\n      swap3\n      pop\n        /* \"#utility.yul\":2564:2579   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1496:1497   */\n      0x01\n        /* \"#utility.yul\":1489:1498   */\n      add\n        /* \"#utility.yul\":1460:2621   */\n      jump(tag_302)\n    tag_304:\n      pop\n        /* \"#utility.yul\":2637:2641   */\n      swap1\n      swap8\n        /* \"#utility.yul\":1122:2647   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:3285   */\n    tag_23:\n        /* \"#utility.yul\":3045:3047   */\n      0x40\n        /* \"#utility.yul\":3034:3043   */\n      dup2\n        /* \"#utility.yul\":3027:3048   */\n      mstore\n        /* \"#utility.yul\":3008:3012   */\n      0x00\n        /* \"#utility.yul\":3071:3143   */\n      tag_307\n        /* \"#utility.yul\":3139:3141   */\n      0x40\n        /* \"#utility.yul\":3128:3137   */\n      dup4\n        /* \"#utility.yul\":3124:3142   */\n      add\n        /* \"#utility.yul\":3116:3122   */\n      dup6\n        /* \"#utility.yul\":3071:3143   */\n      tag_285\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3191:3200   */\n      dup3\n        /* \"#utility.yul\":3183:3189   */\n      dup2\n        /* \"#utility.yul\":3179:3201   */\n      sub\n        /* \"#utility.yul\":3174:3176   */\n      0x20\n        /* \"#utility.yul\":3163:3172   */\n      dup5\n        /* \"#utility.yul\":3159:3177   */\n      add\n        /* \"#utility.yul\":3152:3202   */\n      mstore\n        /* \"#utility.yul\":3219:3279   */\n      tag_308\n        /* \"#utility.yul\":3272:3278   */\n      dup2\n        /* \"#utility.yul\":3264:3270   */\n      dup6\n        /* \"#utility.yul\":3219:3279   */\n      tag_285\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3211:3279   */\n      swap6\n        /* \"#utility.yul\":2652:3285   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3290:3470   */\n    tag_26:\n        /* \"#utility.yul\":3349:3355   */\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3381:3388   */\n      dup5\n        /* \"#utility.yul\":3377:3400   */\n      sub\n        /* \"#utility.yul\":3373:3405   */\n      slt\n        /* \"#utility.yul\":3370:3422   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3418:3419   */\n      0x00\n        /* \"#utility.yul\":3415:3416   */\n      dup1\n        /* \"#utility.yul\":3408:3420   */\n      revert\n        /* \"#utility.yul\":3370:3422   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":3441:3464   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3290:3470   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3657:3911   */\n    tag_32:\n        /* \"#utility.yul\":3725:3731   */\n      0x00\n        /* \"#utility.yul\":3733:3739   */\n      dup1\n        /* \"#utility.yul\":3786:3788   */\n      0x40\n        /* \"#utility.yul\":3774:3783   */\n      dup4\n        /* \"#utility.yul\":3765:3772   */\n      dup6\n        /* \"#utility.yul\":3761:3784   */\n      sub\n        /* \"#utility.yul\":3757:3789   */\n      slt\n        /* \"#utility.yul\":3754:3806   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3799:3800   */\n      dup1\n        /* \"#utility.yul\":3792:3804   */\n      revert\n        /* \"#utility.yul\":3754:3806   */\n    tag_313:\n        /* \"#utility.yul\":3825:3854   */\n      tag_314\n        /* \"#utility.yul\":3844:3853   */\n      dup4\n        /* \"#utility.yul\":3825:3854   */\n      tag_282\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3815:3854   */\n      swap5\n        /* \"#utility.yul\":3901:3903   */\n      0x20\n        /* \"#utility.yul\":3886:3904   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3873:3905   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3657:3911   */\n      jump\t// out\n        /* \"#utility.yul\":4786:5034   */\n    tag_46:\n        /* \"#utility.yul\":4854:4860   */\n      0x00\n        /* \"#utility.yul\":4862:4868   */\n      dup1\n        /* \"#utility.yul\":4915:4917   */\n      0x40\n        /* \"#utility.yul\":4903:4912   */\n      dup4\n        /* \"#utility.yul\":4894:4901   */\n      dup6\n        /* \"#utility.yul\":4890:4913   */\n      sub\n        /* \"#utility.yul\":4886:4918   */\n      slt\n        /* \"#utility.yul\":4883:4935   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4931:4932   */\n      0x00\n        /* \"#utility.yul\":4928:4929   */\n      dup1\n        /* \"#utility.yul\":4921:4933   */\n      revert\n        /* \"#utility.yul\":4883:4935   */\n    tag_318:\n      pop\n      pop\n        /* \"#utility.yul\":4954:4977   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":5024:5026   */\n      0x20\n        /* \"#utility.yul\":5009:5027   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4996:5028   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4786:5034   */\n      jump\t// out\n        /* \"#utility.yul\":5526:5923   */\n    tag_70:\n        /* \"#utility.yul\":5612:5618   */\n      0x00\n        /* \"#utility.yul\":5620:5626   */\n      dup1\n        /* \"#utility.yul\":5628:5634   */\n      0x00\n        /* \"#utility.yul\":5636:5642   */\n      dup1\n        /* \"#utility.yul\":5689:5692   */\n      0x80\n        /* \"#utility.yul\":5677:5686   */\n      dup6\n        /* \"#utility.yul\":5668:5675   */\n      dup8\n        /* \"#utility.yul\":5664:5687   */\n      sub\n        /* \"#utility.yul\":5660:5693   */\n      slt\n        /* \"#utility.yul\":5657:5710   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5703:5704   */\n      dup1\n        /* \"#utility.yul\":5696:5708   */\n      revert\n        /* \"#utility.yul\":5657:5710   */\n    tag_322:\n        /* \"#utility.yul\":5729:5758   */\n      tag_323\n        /* \"#utility.yul\":5748:5757   */\n      dup6\n        /* \"#utility.yul\":5729:5758   */\n      tag_282\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5719:5758   */\n      swap4\n      pop\n        /* \"#utility.yul\":5777:5815   */\n      tag_324\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5800:5809   */\n      dup7\n        /* \"#utility.yul\":5796:5814   */\n      add\n        /* \"#utility.yul\":5777:5815   */\n      tag_282\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5526:5923   */\n      swap4\n      swap7\n        /* \"#utility.yul\":5767:5815   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5862:5864   */\n      0x40\n        /* \"#utility.yul\":5847:5865   */\n      dup3\n      add\n        /* \"#utility.yul\":5834:5866   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5913:5915   */\n      0x60\n        /* \"#utility.yul\":5898:5916   */\n      add\n        /* \"#utility.yul\":5885:5917   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":5526:5923   */\n      jump\t// out\n        /* \"#utility.yul\":5928:6055   */\n    tag_286:\n        /* \"#utility.yul\":5989:5999   */\n      0x4e487b71\n        /* \"#utility.yul\":5984:5987   */\n      0xe0\n        /* \"#utility.yul\":5980:6000   */\n      shl\n        /* \"#utility.yul\":5977:5978   */\n      0x00\n        /* \"#utility.yul\":5970:6001   */\n      mstore\n        /* \"#utility.yul\":6020:6024   */\n      0x11\n        /* \"#utility.yul\":6017:6018   */\n      0x04\n        /* \"#utility.yul\":6010:6025   */\n      mstore\n        /* \"#utility.yul\":6044:6048   */\n      0x24\n        /* \"#utility.yul\":6041:6042   */\n      0x00\n        /* \"#utility.yul\":6034:6049   */\n      revert\n        /* \"#utility.yul\":6060:6195   */\n    tag_81:\n        /* \"#utility.yul\":6099:6102   */\n      0x00\n        /* \"#utility.yul\":6120:6137   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6117:6160   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_328\n      tag_286\n      jump\t// in\n    tag_328:\n      pop\n        /* \"#utility.yul\":6187:6188   */\n      0x01\n        /* \"#utility.yul\":6176:6189   */\n      add\n      swap1\n        /* \"#utility.yul\":6060:6195   */\n      jump\t// out\n        /* \"#utility.yul\":6200:6327   */\n    tag_85:\n        /* \"#utility.yul\":6261:6271   */\n      0x4e487b71\n        /* \"#utility.yul\":6256:6259   */\n      0xe0\n        /* \"#utility.yul\":6252:6272   */\n      shl\n        /* \"#utility.yul\":6249:6250   */\n      0x00\n        /* \"#utility.yul\":6242:6273   */\n      mstore\n        /* \"#utility.yul\":6292:6296   */\n      0x41\n        /* \"#utility.yul\":6289:6290   */\n      0x04\n        /* \"#utility.yul\":6282:6297   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x24\n        /* \"#utility.yul\":6313:6314   */\n      0x00\n        /* \"#utility.yul\":6306:6321   */\n      revert\n        /* \"#utility.yul\":6332:6585   */\n    tag_287:\n        /* \"#utility.yul\":6404:6406   */\n      0x40\n        /* \"#utility.yul\":6398:6407   */\n      mload\n        /* \"#utility.yul\":6446:6450   */\n      0x80\n        /* \"#utility.yul\":6434:6451   */\n      dup2\n      add\n        /* \"#utility.yul\":6481:6499   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6466:6500   */\n      dup2\n      gt\n        /* \"#utility.yul\":6502:6524   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":6463:6525   */\n      or\n        /* \"#utility.yul\":6460:6548   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6528:6546   */\n      tag_332\n      tag_85\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6564:6566   */\n      0x40\n        /* \"#utility.yul\":6557:6579   */\n      mstore\n        /* \"#utility.yul\":6332:6585   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6590:6865   */\n    tag_288:\n        /* \"#utility.yul\":6661:6663   */\n      0x40\n        /* \"#utility.yul\":6655:6664   */\n      mload\n        /* \"#utility.yul\":6726:6728   */\n      0x1f\n        /* \"#utility.yul\":6707:6720   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6703:6730   */\n      and\n        /* \"#utility.yul\":6691:6731   */\n      dup2\n      add\n        /* \"#utility.yul\":6761:6779   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6746:6780   */\n      dup2\n      gt\n        /* \"#utility.yul\":6782:6804   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":6743:6805   */\n      or\n        /* \"#utility.yul\":6740:6828   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6808:6826   */\n      tag_335\n      tag_85\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6844:6846   */\n      0x40\n        /* \"#utility.yul\":6837:6859   */\n      mstore\n        /* \"#utility.yul\":6590:6865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6870:8909   */\n    tag_101:\n        /* \"#utility.yul\":6988:6994   */\n      0x00\n        /* \"#utility.yul\":7019:7021   */\n      0x20\n        /* \"#utility.yul\":7062:7064   */\n      dup1\n        /* \"#utility.yul\":7050:7059   */\n      dup4\n        /* \"#utility.yul\":7041:7048   */\n      dup6\n        /* \"#utility.yul\":7037:7060   */\n      sub\n        /* \"#utility.yul\":7033:7065   */\n      slt\n        /* \"#utility.yul\":7030:7082   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":7078:7079   */\n      0x00\n        /* \"#utility.yul\":7075:7076   */\n      dup1\n        /* \"#utility.yul\":7068:7080   */\n      revert\n        /* \"#utility.yul\":7030:7082   */\n    tag_337:\n        /* \"#utility.yul\":7111:7120   */\n      dup3\n        /* \"#utility.yul\":7105:7121   */\n      mload\n        /* \"#utility.yul\":7140:7158   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7181:7183   */\n      dup1\n        /* \"#utility.yul\":7173:7179   */\n      dup3\n        /* \"#utility.yul\":7170:7184   */\n      gt\n        /* \"#utility.yul\":7167:7201   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7197:7198   */\n      0x00\n        /* \"#utility.yul\":7194:7195   */\n      dup1\n        /* \"#utility.yul\":7187:7199   */\n      revert\n        /* \"#utility.yul\":7167:7201   */\n    tag_338:\n        /* \"#utility.yul\":7235:7241   */\n      dup2\n        /* \"#utility.yul\":7224:7233   */\n      dup6\n        /* \"#utility.yul\":7220:7242   */\n      add\n        /* \"#utility.yul\":7210:7242   */\n      swap2\n      pop\n        /* \"#utility.yul\":7280:7287   */\n      dup6\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7269:7271   */\n      dup4\n        /* \"#utility.yul\":7265:7278   */\n      add\n        /* \"#utility.yul\":7261:7288   */\n      slt\n        /* \"#utility.yul\":7251:7306   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":7302:7303   */\n      0x00\n        /* \"#utility.yul\":7299:7300   */\n      dup1\n        /* \"#utility.yul\":7292:7304   */\n      revert\n        /* \"#utility.yul\":7251:7306   */\n    tag_339:\n        /* \"#utility.yul\":7331:7333   */\n      dup2\n        /* \"#utility.yul\":7325:7334   */\n      mload\n        /* \"#utility.yul\":7353:7355   */\n      dup2\n        /* \"#utility.yul\":7349:7351   */\n      dup2\n        /* \"#utility.yul\":7346:7356   */\n      gt\n        /* \"#utility.yul\":7343:7379   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":7359:7377   */\n      tag_341\n      tag_85\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7405:7407   */\n      dup1\n        /* \"#utility.yul\":7402:7403   */\n      0x05\n        /* \"#utility.yul\":7398:7408   */\n      shl\n        /* \"#utility.yul\":7428:7456   */\n      tag_342\n        /* \"#utility.yul\":7452:7454   */\n      dup6\n        /* \"#utility.yul\":7448:7450   */\n      dup3\n        /* \"#utility.yul\":7444:7455   */\n      add\n        /* \"#utility.yul\":7428:7456   */\n      tag_288\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7490:7505   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":7560:7571   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7556:7576   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":7521:7533   */\n      dup6\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":7588:7607   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":7585:7624   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":7620:7621   */\n      0x00\n        /* \"#utility.yul\":7617:7618   */\n      dup1\n        /* \"#utility.yul\":7610:7622   */\n      revert\n        /* \"#utility.yul\":7585:7624   */\n    tag_343:\n        /* \"#utility.yul\":7652:7654   */\n      dup7\n        /* \"#utility.yul\":7648:7650   */\n      dup7\n        /* \"#utility.yul\":7644:7655   */\n      add\n        /* \"#utility.yul\":7633:7655   */\n      swap3\n      pop\n        /* \"#utility.yul\":7664:8879   */\n    tag_344:\n        /* \"#utility.yul\":7680:7686   */\n      dup4\n        /* \"#utility.yul\":7675:7678   */\n      dup4\n        /* \"#utility.yul\":7672:7687   */\n      lt\n        /* \"#utility.yul\":7664:8879   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7759:7762   */\n      dup3\n        /* \"#utility.yul\":7753:7763   */\n      mload\n        /* \"#utility.yul\":7795:7797   */\n      dup6\n        /* \"#utility.yul\":7782:7793   */\n      dup2\n        /* \"#utility.yul\":7779:7798   */\n      gt\n        /* \"#utility.yul\":7776:7815   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7811:7812   */\n      0x00\n        /* \"#utility.yul\":7808:7809   */\n      dup1\n        /* \"#utility.yul\":7801:7813   */\n      revert\n        /* \"#utility.yul\":7776:7815   */\n    tag_347:\n        /* \"#utility.yul\":7838:7858   */\n      dup7\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7935:7939   */\n      0x80\n        /* \"#utility.yul\":7912:7928   */\n      dup3\n      dup14\n      sub\n        /* \"#utility.yul\":7908:7933   */\n      dup3\n      add\n        /* \"#utility.yul\":7904:7940   */\n      slt\n        /* \"#utility.yul\":7901:7957   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":7953:7954   */\n      0x00\n        /* \"#utility.yul\":7950:7951   */\n      dup1\n        /* \"#utility.yul\":7943:7955   */\n      revert\n        /* \"#utility.yul\":7901:7957   */\n    tag_348:\n        /* \"#utility.yul\":7983:8005   */\n      tag_349\n      tag_287\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8046:8048   */\n      dup10\n        /* \"#utility.yul\":8042:8044   */\n      dup4\n        /* \"#utility.yul\":8038:8049   */\n      add\n        /* \"#utility.yul\":8032:8050   */\n      mload\n        /* \"#utility.yul\":8025:8030   */\n      dup2\n        /* \"#utility.yul\":8018:8051   */\n      mstore\n        /* \"#utility.yul\":8074:8076   */\n      0x40\n        /* \"#utility.yul\":8119:8121   */\n      dup1\n        /* \"#utility.yul\":8115:8117   */\n      dup5\n        /* \"#utility.yul\":8111:8122   */\n      add\n        /* \"#utility.yul\":8105:8123   */\n      mload\n        /* \"#utility.yul\":8152:8154   */\n      dup10\n        /* \"#utility.yul\":8142:8150   */\n      dup2\n        /* \"#utility.yul\":8139:8155   */\n      gt\n        /* \"#utility.yul\":8136:8172   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":8168:8169   */\n      0x00\n        /* \"#utility.yul\":8165:8166   */\n      dup1\n        /* \"#utility.yul\":8158:8170   */\n      revert\n        /* \"#utility.yul\":8136:8172   */\n    tag_350:\n        /* \"#utility.yul\":8195:8212   */\n      dup5\n      add\n        /* \"#utility.yul\":8247:8249   */\n      0x3f\n        /* \"#utility.yul\":8239:8250   */\n      dup2\n      add\n        /* \"#utility.yul\":8235:8260   */\n      dup16\n      sgt\n        /* \"#utility.yul\":8225:8278   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8274:8275   */\n      0x00\n        /* \"#utility.yul\":8271:8272   */\n      dup1\n        /* \"#utility.yul\":8264:8276   */\n      revert\n        /* \"#utility.yul\":8225:8278   */\n    tag_351:\n        /* \"#utility.yul\":8316:8318   */\n      dup12\n        /* \"#utility.yul\":8312:8314   */\n      dup2\n        /* \"#utility.yul\":8308:8319   */\n      add\n        /* \"#utility.yul\":8302:8320   */\n      mload\n        /* \"#utility.yul\":8344:8346   */\n      dup11\n        /* \"#utility.yul\":8339:8342   */\n      dup2\n        /* \"#utility.yul\":8336:8347   */\n      gt\n        /* \"#utility.yul\":8333:8370   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8350:8368   */\n      tag_353\n      tag_85\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8396:8445   */\n      tag_354\n        /* \"#utility.yul\":8441:8443   */\n      dup14\n        /* \"#utility.yul\":8436:8438   */\n      dup7\n        /* \"#utility.yul\":8429:8433   */\n      0x1f\n        /* \"#utility.yul\":8424:8427   */\n      dup5\n        /* \"#utility.yul\":8420:8434   */\n      add\n        /* \"#utility.yul\":8416:8439   */\n      and\n        /* \"#utility.yul\":8412:8444   */\n      add\n        /* \"#utility.yul\":8396:8445   */\n      tag_288\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8383:8445   */\n      swap5\n      pop\n        /* \"#utility.yul\":8472:8475   */\n      dup1\n        /* \"#utility.yul\":8465:8470   */\n      dup6\n        /* \"#utility.yul\":8458:8476   */\n      mstore\n        /* \"#utility.yul\":8518:8525   */\n      dup16\n        /* \"#utility.yul\":8513:8515   */\n      dup4\n        /* \"#utility.yul\":8507:8510   */\n      dup3\n        /* \"#utility.yul\":8503:8505   */\n      dup5\n        /* \"#utility.yul\":8499:8511   */\n      add\n        /* \"#utility.yul\":8495:8516   */\n      add\n        /* \"#utility.yul\":8492:8526   */\n      gt\n        /* \"#utility.yul\":8489:8543   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":8539:8540   */\n      0x00\n        /* \"#utility.yul\":8536:8537   */\n      dup1\n        /* \"#utility.yul\":8529:8541   */\n      revert\n        /* \"#utility.yul\":8489:8543   */\n    tag_355:\n        /* \"#utility.yul\":8556:8624   */\n      tag_356\n        /* \"#utility.yul\":8620:8623   */\n      dup2\n        /* \"#utility.yul\":8615:8617   */\n      dup15\n        /* \"#utility.yul\":8608:8613   */\n      dup8\n        /* \"#utility.yul\":8604:8618   */\n      add\n        /* \"#utility.yul\":8599:8601   */\n      dup6\n        /* \"#utility.yul\":8595:8597   */\n      dup6\n        /* \"#utility.yul\":8591:8602   */\n      add\n        /* \"#utility.yul\":8556:8624   */\n      tag_283\n      jump\t// in\n    tag_356:\n      pop\n      pop\n        /* \"#utility.yul\":8644:8658   */\n      dup2\n      dup12\n      add\n        /* \"#utility.yul\":8637:8666   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8690:8692   */\n      0x60\n        /* \"#utility.yul\":8734:8746   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":8728:8747   */\n      mload\n        /* \"#utility.yul\":8712:8726   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":8705:8748   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x80\n        /* \"#utility.yul\":8791:8804   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":8785:8805   */\n      mload\n        /* \"#utility.yul\":8768:8783   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8761:8806   */\n      mstore\n        /* \"#utility.yul\":8819:8837   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7697:7709   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":8857:8869   */\n      swap1\n      dup7\n      add\n      swap1\n        /* \"#utility.yul\":7664:8879   */\n      jump(tag_344)\n    tag_346:\n        /* \"#utility.yul\":8898:8903   */\n      swap10\n        /* \"#utility.yul\":6870:8909   */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8914:9041   */\n    tag_104:\n        /* \"#utility.yul\":8975:8985   */\n      0x4e487b71\n        /* \"#utility.yul\":8970:8973   */\n      0xe0\n        /* \"#utility.yul\":8966:8986   */\n      shl\n        /* \"#utility.yul\":8963:8964   */\n      0x00\n        /* \"#utility.yul\":8956:8987   */\n      mstore\n        /* \"#utility.yul\":9006:9010   */\n      0x32\n        /* \"#utility.yul\":9003:9004   */\n      0x04\n        /* \"#utility.yul\":8996:9011   */\n      mstore\n        /* \"#utility.yul\":9030:9034   */\n      0x24\n        /* \"#utility.yul\":9027:9028   */\n      0x00\n        /* \"#utility.yul\":9020:9035   */\n      revert\n        /* \"#utility.yul\":9046:9174   */\n    tag_115:\n        /* \"#utility.yul\":9113:9122   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9134:9145   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9131:9168   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":9148:9166   */\n      tag_141\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":9529:9904   */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9787:9802   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":9769:9803   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9839:9854   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9834:9836   */\n      0x20\n        /* \"#utility.yul\":9819:9837   */\n      dup3\n      add\n        /* \"#utility.yul\":9812:9855   */\n      mstore\n        /* \"#utility.yul\":9886:9888   */\n      0x40\n        /* \"#utility.yul\":9871:9889   */\n      dup2\n      add\n        /* \"#utility.yul\":9864:9898   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9719:9721   */\n      0x60\n        /* \"#utility.yul\":9704:9722   */\n      add\n      swap1\n        /* \"#utility.yul\":9529:9904   */\n      jump\t// out\n        /* \"#utility.yul\":13069:13346   */\n    tag_250:\n        /* \"#utility.yul\":13136:13142   */\n      0x00\n        /* \"#utility.yul\":13189:13191   */\n      0x20\n        /* \"#utility.yul\":13177:13186   */\n      dup3\n        /* \"#utility.yul\":13168:13175   */\n      dup5\n        /* \"#utility.yul\":13164:13187   */\n      sub\n        /* \"#utility.yul\":13160:13192   */\n      slt\n        /* \"#utility.yul\":13157:13209   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":13205:13206   */\n      0x00\n        /* \"#utility.yul\":13202:13203   */\n      dup1\n        /* \"#utility.yul\":13195:13207   */\n      revert\n        /* \"#utility.yul\":13157:13209   */\n    tag_372:\n        /* \"#utility.yul\":13237:13246   */\n      dup2\n        /* \"#utility.yul\":13231:13247   */\n      mload\n        /* \"#utility.yul\":13290:13295   */\n      dup1\n        /* \"#utility.yul\":13283:13296   */\n      iszero\n        /* \"#utility.yul\":13276:13297   */\n      iszero\n        /* \"#utility.yul\":13269:13274   */\n      dup2\n        /* \"#utility.yul\":13266:13298   */\n      eq\n        /* \"#utility.yul\":13256:13316   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":13312:13313   */\n      0x00\n        /* \"#utility.yul\":13309:13310   */\n      dup1\n        /* \"#utility.yul\":13302:13314   */\n      revert\n        /* \"#utility.yul\":13351:13638   */\n    tag_261:\n        /* \"#utility.yul\":13480:13483   */\n      0x00\n        /* \"#utility.yul\":13518:13524   */\n      dup3\n        /* \"#utility.yul\":13512:13525   */\n      mload\n        /* \"#utility.yul\":13534:13600   */\n      tag_375\n        /* \"#utility.yul\":13593:13599   */\n      dup2\n        /* \"#utility.yul\":13588:13591   */\n      dup5\n        /* \"#utility.yul\":13581:13585   */\n      0x20\n        /* \"#utility.yul\":13573:13579   */\n      dup8\n        /* \"#utility.yul\":13569:13586   */\n      add\n        /* \"#utility.yul\":13534:13600   */\n      tag_283\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":13616:13632   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":13351:13638   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122076169395800e3092048f4b7742b8273a290092420d3f43af74d3b5bd42344f5864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3913": {
									"entryPoint": null,
									"id": 3913,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 153,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:19",
										"nodeType": "YulBlock",
										"src": "0:699:19",
										"statements": [
											{
												"nativeSrc": "6:3:19",
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:19",
													"nodeType": "YulBlock",
													"src": "74:117:19",
													"statements": [
														{
															"nativeSrc": "84:22:19",
															"nodeType": "YulAssignment",
															"src": "84:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:19"
																},
																"nativeSrc": "93:13:19",
																"nodeType": "YulFunctionCall",
																"src": "93:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:19",
																"nodeType": "YulBlock",
																"src": "169:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:19",
																					"nodeType": "YulLiteral",
																					"src": "178:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:19",
																					"nodeType": "YulLiteral",
																					"src": "181:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:19"
																			},
																			"nativeSrc": "171:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:19"
																		},
																		"nativeSrc": "171:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:19",
																										"nodeType": "YulLiteral",
																										"src": "154:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:19",
																										"nodeType": "YulLiteral",
																										"src": "159:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:19"
																								},
																								"nativeSrc": "150:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:19",
																								"nodeType": "YulLiteral",
																								"src": "163:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:19"
																						},
																						"nativeSrc": "146:19:19",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:19"
																				},
																				"nativeSrc": "135:31:19",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:19"
																		},
																		"nativeSrc": "125:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:19"
																},
																"nativeSrc": "118:50:19",
																"nodeType": "YulFunctionCall",
																"src": "118:50:19"
															},
															"nativeSrc": "115:70:19",
															"nodeType": "YulIf",
															"src": "115:70:19"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:19",
														"nodeType": "YulTypedName",
														"src": "53:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:19",
														"nodeType": "YulTypedName",
														"src": "64:5:19",
														"type": ""
													}
												],
												"src": "14:177:19"
											},
											{
												"body": {
													"nativeSrc": "294:195:19",
													"nodeType": "YulBlock",
													"src": "294:195:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:19",
																"nodeType": "YulBlock",
																"src": "340:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:19",
																					"nodeType": "YulLiteral",
																					"src": "349:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:19",
																					"nodeType": "YulLiteral",
																					"src": "352:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:19"
																			},
																			"nativeSrc": "342:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:19"
																		},
																		"nativeSrc": "342:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:19"
																		},
																		"nativeSrc": "311:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:19",
																		"nodeType": "YulLiteral",
																		"src": "336:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:19"
																},
																"nativeSrc": "307:32:19",
																"nodeType": "YulFunctionCall",
																"src": "307:32:19"
															},
															"nativeSrc": "304:52:19",
															"nodeType": "YulIf",
															"src": "304:52:19"
														},
														{
															"nativeSrc": "365:50:19",
															"nodeType": "YulAssignment",
															"src": "365:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:19",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:19"
																},
																"nativeSrc": "375:40:19",
																"nodeType": "YulFunctionCall",
																"src": "375:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:19"
																}
															]
														},
														{
															"nativeSrc": "424:59:19",
															"nodeType": "YulAssignment",
															"src": "424:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:19",
																				"nodeType": "YulLiteral",
																				"src": "479:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:19"
																		},
																		"nativeSrc": "464:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:19",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:19"
																},
																"nativeSrc": "434:49:19",
																"nodeType": "YulFunctionCall",
																"src": "434:49:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:19",
														"nodeType": "YulTypedName",
														"src": "252:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:19",
														"nodeType": "YulTypedName",
														"src": "263:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:19",
														"nodeType": "YulTypedName",
														"src": "275:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:19",
														"nodeType": "YulTypedName",
														"src": "283:6:19",
														"type": ""
													}
												],
												"src": "196:293:19"
											},
											{
												"body": {
													"nativeSrc": "595:102:19",
													"nodeType": "YulBlock",
													"src": "595:102:19",
													"statements": [
														{
															"nativeSrc": "605:26:19",
															"nodeType": "YulAssignment",
															"src": "605:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:19",
																		"nodeType": "YulLiteral",
																		"src": "628:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:19"
																},
																"nativeSrc": "613:18:19",
																"nodeType": "YulFunctionCall",
																"src": "613:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:19",
																								"nodeType": "YulLiteral",
																								"src": "678:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:19",
																								"nodeType": "YulLiteral",
																								"src": "683:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:19"
																						},
																						"nativeSrc": "674:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:19",
																						"nodeType": "YulLiteral",
																						"src": "687:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:19"
																				},
																				"nativeSrc": "670:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:19"
																		},
																		"nativeSrc": "658:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:19"
																},
																"nativeSrc": "640:51:19",
																"nodeType": "YulFunctionCall",
																"src": "640:51:19"
															},
															"nativeSrc": "640:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:19",
														"nodeType": "YulTypedName",
														"src": "564:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:19",
														"nodeType": "YulTypedName",
														"src": "575:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:19",
														"nodeType": "YulTypedName",
														"src": "586:4:19",
														"type": ""
													}
												],
												"src": "494:203:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001cb138038062001cb1833981016040819052620000339162000106565b60015f55816001600160a01b0381166200006657604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000718162000099565b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200013c565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b038116811462000101575f80fd5b919050565b5f806040838503121562000118575f80fd5b6200012383620000ea565b91506200013360208401620000ea565b90509250929050565b611b67806200014a5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c80636617b35d116100885780638da5cb5b116100635780638da5cb5b14610279578063d6cbb20214610294578063f2fde38b1461029e578063f33c4061146102b1575f80fd5b80636617b35d14610216578063715018a6146102205780638d02f79214610228575f80fd5b80630d909886146100cf5780631e903868146100f95780632791a4d014610126578063293c6ae1146101cb5780634e455dbe146101ee578063556f808414610203575b5f80fd5b6100e26100dd3660046116a0565b6102c4565b6040516100f09291906117ec565b60405180910390f35b610118610107366004611819565b60076020525f908152604090205481565b6040519081526020016100f0565b610188610134366004611830565b600560208181525f93845260408085209091529183529120805460018201546002830154600384015460048501549585015460069095015493956001600160a01b0393841695939092169390929060ff1687565b604080519788526001600160a01b03968716602089015294909516938601939093526060850191909152608084015260a0830152151560c082015260e0016100f0565b6101de6101d9366004611830565b610919565b60405190151581526020016100f0565b6102016101fc366004611819565b610949565b005b610201610211366004611858565b610c0b565b6003546101189081565b610201611022565b61025a610236366004611819565b60066020525f9081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100f0565b6001546040516001600160a01b0390911681526020016100f0565b6002546101189081565b6102016102ac3660046116a0565b611035565b6102016102bf366004611878565b61106f565b6060805f60015b6002548111610375575f81815260066020908152604080832080546001600160a01b039081168552600584528285206001928301548652909352922090910154811690861614801561035057505f81815260066020818152604080842080546001600160a01b03168552600583528185206001909101548552909152909120015460ff165b15610363578161035f816118cb565b9250505b8061036d816118cb565b9150506102cb565b505f8167ffffffffffffffff811115610390576103906118e3565b6040519080825280602002602001820160405280156103c957816020015b6103b661160f565b8152602001906001900390816103ae5790505b5090508115610639575f60015b6002548111610636575f81815260066020908152604080832080546001600160a01b039081168552600584528285206001928301548652909352922090910154811690881614801561045b57505f81815260066020818152604080842080546001600160a01b03168552600583528185206001909101548552909152909120015460ff165b15610624575f81815260066020526040808220805460019091015491516321ebe67360e11b81526001600160a01b038b8116600483015260248201939093529116906343d7cce6906044015f60405180830381865afa1580156104c0573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526104e79190810190611951565b604080515f8581526006602081815284832080546001600160a01b0390811685526005808452878620600193840154875284528786206101408801895280546060808a0191825294820154841660808a0152600282015490931660a0890152600381015460c0890152600481015460e0890152908101546101008801529093015460ff161515610120860152918452845191820190945284519495509193928401928291869161059957610599611aac565b6020026020010151602001518152602001845f815181106105bc576105bc611aac565b6020026020010151604001518152602001845f815181106105df576105df611aac565b60200260200101516060015181525081526020018381525084848151811061060957610609611aac565b6020026020010181905250828061061f906118cb565b935050505b8061062e816118cb565b9150506103d6565b50505b5f8261064460025490565b61064e9190611ac0565b90505f8167ffffffffffffffff81111561066a5761066a6118e3565b6040519080825280602002602001820160405280156106a357816020015b61069061160f565b8152602001906001900390816106885790505b5090505f60015b600254811161090b575f81815260066020908152604080832080546001600160a01b0390811685526005845282852060019283015486529093529220909101548116908a161480159061073057505f81815260066020818152604080842080546001600160a01b03168552600583528185206001909101548552909152909120015460ff165b156108f9575f81815260066020526040808220805460019091015491516321ebe67360e11b81526001600160a01b038d8116600483015260248201939093529116906343d7cce6906044015f60405180830381865afa158015610795573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107bc9190810190611951565b604080515f8581526006602081815284832080546001600160a01b0390811685526005808452878620600193840154875284528786206101408801895280546060808a0191825294820154841660808a0152600282015490931660a0890152600381015460c0890152600481015460e0890152908101546101008801529093015460ff161515610120860152918452845191820190945284519495509193928401928291869161086e5761086e611aac565b6020026020010151602001518152602001845f8151811061089157610891611aac565b6020026020010151604001518152602001845f815181106108b4576108b4611aac565b6020026020010151606001518152508152602001838152508484815181106108de576108de611aac565b602002602001018190525082806108f4906118cb565b935050505b80610903816118cb565b9150506106aa565b509297909650945050505050565b6001600160a01b0382165f90815260056020908152604080832084845290915290206006015460ff165b92915050565b6109516112ec565b5f81815260066020818152604080842080546001600160a01b03168552600583528185206001909101548552909152909120015460ff166109d15760405162461bcd60e51b8152602060048201526015602482015274506c65617365204c6973742046697273742021212160581b60448201526064015b60405180910390fd5b5f81815260066020818152604080842080546001600160a01b03908116865260058452828620600183018054885290855283872060020180546001600160a01b03191633908117909155968890529490935254925490516323b872dd60e01b815292909116926323b872dd92610a4c92309291600401611ad3565b5f604051808303815f87803b158015610a63575f80fd5b505af1158015610a75573d5f803e3d5ffd5b5050505f82815260066020818152604080842080546001600160a01b0316855260058084528286206001909201548652925283208201805460ff19169055849350919081610ac260025490565b815260208082019290925260409081015f908120546001600160a01b03168452918301939093529101812090600681610afa60025490565b81526020019081526020015f206001015481526020019081526020015f206004018190555060065f610b2b60025490565b815260208082019290925260409081015f908120848252600690935220815481546001600160a01b0319166001600160a01b03909116178155600191820154910155610b776002611343565b5f81815260066020908152604080832080546001600160a01b0390811685526005845282852060019283015486528452938290208054918101546003909101548351928352941692810192909252339082015260608101919091527ffb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e024436039060800160405180910390a1610c0860015f55565b50565b610c136112ec565b5f82815260066020908152604080832080546001600160a01b03908116855260058452828520600192830154865290935292209091015433911603610ca65760405162461bcd60e51b815260206004820152602360248201527f416e206f666665722063616e6e6f742062757920746869732053656c6c65722060448201526221212160e81b60648201526084016109c8565b5f82815260066020908152604080832080546001600160a01b031684526005835281842060019091015484529091529020600301548114610d3c5760405162461bcd60e51b815260206004820152602a60248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e676044820152692070726963652021212160b01b60648201526084016109c8565b5f8281526006602052604090819020805460019091015491516323b872dd60e01b81526001600160a01b03909116916323b872dd91610d82913091339190600401611ad3565b5f604051808303815f87803b158015610d99575f80fd5b505af1158015610dab573d5f803e3d5ffd5b5050505f83815260066020908152604080832080546001918201546001600160a01b039182168087526005865284872082885290955294839020909101549151639ae38d9360e01b815233600482015260248101949094521660448301523060648301529150639ae38d93906084015f604051808303815f87803b158015610e31575f80fd5b505af1158015610e43573d5f803e3d5ffd5b5050505f83815260066020908152604080832080546001600160a01b03908116855260058452828520600192830154865290935292206003810154920154600454929350610e979282169133911684611399565b5f83815260066020818152604080842080546001600160a01b0316855260058084528286206001909201548652925283208201805460ff191690558592909181610ee060025490565b815260208082019290925260409081015f908120546001600160a01b03168452918301939093529101812090600681610f1860025490565b81526020019081526020015f206001015481526020019081526020015f206004018190555060065f610f4960025490565b815260208082019290925260409081015f908120868252600690935220815481546001600160a01b0319166001600160a01b03909116178155600191820154910155610f956002611343565b5f83815260066020908152604080832080546001600160a01b0390811685526005845282852060019283015486528452938290208054910154825191825290931691830191909152338282015260608201849052517f8562eb94748e30bb0071e932744ce902b460c683474fcb3bfd567ffa16b1afb29181900360800190a15061101e60015f55565b5050565b61102a6113f9565b6110335f611426565b565b61103d6113f9565b6001600160a01b03811661106657604051631e4fbdf760e01b81525f60048201526024016109c8565b610c0881611426565b6001600160a01b0384165f908152600560209081526040808320848452909152902060060154849084908390859060ff16156110ed5760405162461bcd60e51b815260206004820152601e60248201527f416c7265616479204c697374656420496e204d61726b6574706c61636521000060448201526064016109c8565b6110f56112ec565b611103600280546001019055565b6040518060e00160405280868152602001886001600160a01b03168152602001306001600160a01b0316815260200187815260200161114160025490565b815242602080830191909152600160409283018190526001600160a01b038c81165f81815260058086528682208d83528652868220885181558887015195810180549686166001600160a01b03199788161790558888015160028083018054929097169190971617909455606088015160038501556080880151600485015560a08801519084015560c0909601516006928301805491151560ff19909216919091179055845180860190955284529183018990525491929091815260208082019290925260409081015f20835181546001600160a01b0319166001600160a01b039182161782559390920151600190920191909155516323b872dd60e01b8152908916906323b872dd9061125d908a9030908a90600401611ad3565b5f604051808303815f87803b158015611274575f80fd5b505af1158015611286573d5f803e3d5ffd5b5050604080518881526001600160a01b038b1660208201523081830152606081018a905290517f62af98dbc3627e85c5eb929b032d3ce3d6c376652d71b4cca6162a16ef0991149350908190036080019150a16112e260015f55565b5050505050505050565b60025f540361133d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c8565b60025f55565b8054806113925760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016109c8565b5f19019055565b6113f384856001600160a01b03166323b872dd8686866040516024016113c193929190611ad3565b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611477565b50505050565b6001546001600160a01b031633146110335760405163118cdaa760e01b81523360048201526024016109c8565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f61148b6001600160a01b038416836114dd565b905080515f141580156114af5750808060200190518101906114ad9190611af7565b155b156114d857604051635274afe760e01b81526001600160a01b03841660048201526024016109c8565b505050565b60606114ea83835f6114f1565b9392505050565b6060814710156115165760405163cd78605960e01b81523060048201526024016109c8565b5f80856001600160a01b031684866040516115319190611b16565b5f6040518083038185875af1925050503d805f811461156b576040519150601f19603f3d011682016040523d82523d5f602084013e611570565b606091505b509150915061158086838361158a565b9695505050505050565b60608261159f5761159a826115e6565b6114ea565b81511580156115b657506001600160a01b0384163b155b156115df57604051639996b31560e01b81526001600160a01b03851660048201526024016109c8565b50806114ea565b8051156115f65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040805161014081019091525f606082018181526080830182905260a0830182905260c0830182905260e083018290526101008301829052610120830191909152819081526020016116796040518060600160405280606081526020015f81526020015f81525090565b81526020015f81525090565b80356001600160a01b038116811461169b575f80fd5b919050565b5f602082840312156116b0575f80fd5b6114ea82611685565b5f5b838110156116d35781810151838201526020016116bb565b50505f910152565b5f81516060845280518060608601526116fb8160808701602085016116b9565b60208481015190860152604093840151938501939093525050601f01601f19160160800190565b5f82825180855260208086019550808260051b8401018186015f5b848110156117df57858303601f190189528151805180518552858101516001600160a01b039081168787015260408083015190911681870152606080830151908701526080808301519087015260a0808301519087015260c0918201511515918601919091528582015161012060e08701819052916117be838801836116db565b9301516101009690960195909552509884019892509083019060010161173d565b5090979650505050505050565b604081525f6117fe6040830185611722565b82810360208401526118108185611722565b95945050505050565b5f60208284031215611829575f80fd5b5035919050565b5f8060408385031215611841575f80fd5b61184a83611685565b946020939093013593505050565b5f8060408385031215611869575f80fd5b50508035926020909101359150565b5f805f806080858703121561188b575f80fd5b61189485611685565b93506118a260208601611685565b93969395505050506040820135916060013590565b634e487b7160e01b5f52601160045260245ffd5b5f600182016118dc576118dc6118b7565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff8111828210171561191a5761191a6118e3565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611949576119496118e3565b604052919050565b5f6020808385031215611962575f80fd5b825167ffffffffffffffff80821115611979575f80fd5b818501915085601f83011261198c575f80fd5b81518181111561199e5761199e6118e3565b8060051b6119ad858201611920565b91825283810185019185810190898411156119c6575f80fd5b86860192505b83831015611a9f578251858111156119e2575f80fd5b8601601f196080828d03820112156119f8575f80fd5b611a006118f7565b89830151815260408084015189811115611a18575f80fd5b8401603f81018f13611a28575f80fd5b8b8101518a811115611a3c57611a3c6118e3565b611a4c8d86601f84011601611920565b94508085528f83828401011115611a61575f80fd5b611a70818e87018585016116b9565b5050818b01929092526060838101519282019290925260809092015190820152825291860191908601906119cc565b9998505050505050505050565b634e487b7160e01b5f52603260045260245ffd5b81810381811115610943576109436118b7565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215611b07575f80fd5b815180151581146114ea575f80fd5b5f8251611b278184602087016116b9565b919091019291505056fea264697066735822122076169395800e3092048f4b7742b8273a290092420d3f43af74d3b5bd42344f5864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CB1 CODESIZE SUB DUP1 PUSH3 0x1CB1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x106 JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x66 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x71 DUP2 PUSH3 0x99 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x13C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x118 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x123 DUP4 PUSH3 0xEA JUMP JUMPDEST SWAP2 POP PUSH3 0x133 PUSH1 0x20 DUP5 ADD PUSH3 0xEA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B67 DUP1 PUSH3 0x14A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6617B35D GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD6CBB202 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF33C4061 EQ PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6617B35D EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8D02F792 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD909886 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x1E903868 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x2791A4D0 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x293C6AE1 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x4E455DBE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x556F8084 EQ PUSH2 0x203 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP3 SWAP2 SWAP1 PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 SWAP1 SWAP6 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x118 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x118 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x375 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP2 AND SWAP1 DUP7 AND EQ DUP1 ISZERO PUSH2 0x350 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x363 JUMPI DUP2 PUSH2 0x35F DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x36D DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CB JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x390 JUMPI PUSH2 0x390 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3C9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3B6 PUSH2 0x160F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3AE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 ISZERO PUSH2 0x639 JUMPI PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x636 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP2 AND SWAP1 DUP9 AND EQ DUP1 ISZERO PUSH2 0x45B JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x624 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21EBE673 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x43D7CCE6 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4E7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP8 MSTORE DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH2 0x140 DUP9 ADD DUP10 MSTORE DUP1 SLOAD PUSH1 0x60 DUP1 DUP11 ADD SWAP2 DUP3 MSTORE SWAP5 DUP3 ADD SLOAD DUP5 AND PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE SWAP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP5 MSTORE DUP5 MLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 SWAP3 DUP5 ADD SWAP3 DUP3 SWAP2 DUP7 SWAP2 PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH2 0x5DF PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x61F SWAP1 PUSH2 0x18CB JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 PUSH2 0x62E DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D6 JUMP JUMPDEST POP POP JUMPDEST PUSH0 DUP3 PUSH2 0x644 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x690 PUSH2 0x160F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x688 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x90B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP2 AND SWAP1 DUP11 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x730 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8F9 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21EBE673 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x43D7CCE6 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7BC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP8 MSTORE DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH2 0x140 DUP9 ADD DUP10 MSTORE DUP1 SLOAD PUSH1 0x60 DUP1 DUP11 ADD SWAP2 DUP3 MSTORE SWAP5 DUP3 ADD SLOAD DUP5 AND PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE SWAP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP5 MSTORE DUP5 MLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 SWAP3 DUP5 ADD SWAP3 DUP3 SWAP2 DUP7 SWAP2 PUSH2 0x86E JUMPI PUSH2 0x86E PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x891 JUMPI PUSH2 0x891 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x8B4 JUMPI PUSH2 0x8B4 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x8F4 SWAP1 PUSH2 0x18CB JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 PUSH2 0x903 DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6AA JUMP JUMPDEST POP SWAP3 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0x12EC JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C65617365204C69737420466972737420212121 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 DUP4 ADD DUP1 SLOAD DUP9 MSTORE SWAP1 DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP7 DUP9 SWAP1 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SLOAD SWAP3 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xA4C SWAP3 ADDRESS SWAP3 SWAP2 PUSH1 0x4 ADD PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP7 MSTORE SWAP3 MSTORE DUP4 KECCAK256 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP5 SWAP4 POP SWAP2 SWAP1 DUP2 PUSH2 0xAC2 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 SWAP1 PUSH1 0x6 DUP2 PUSH2 0xAFA PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 PUSH2 0xB2B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP5 DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0xB77 PUSH1 0x2 PUSH2 0x1343 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD SWAP3 DUP4 MSTORE SWAP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFB0451E2371B977DB14CE8DB0BD62262E6FF8FE4B5960280928BA94E02443603 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xC08 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC13 PUSH2 0x12EC JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD CALLER SWAP2 AND SUB PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206F666665722063616E6E6F742062757920746869732053656C6C657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x212121 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 EQ PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20707269636520212121 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xD82 SWAP2 ADDRESS SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP8 MSTORE PUSH1 0x5 DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP3 DUP9 MSTORE SWAP1 SWAP6 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x9AE38D93 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP2 POP PUSH4 0x9AE38D93 SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD SWAP3 ADD SLOAD PUSH1 0x4 SLOAD SWAP3 SWAP4 POP PUSH2 0xE97 SWAP3 DUP3 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x1399 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP7 MSTORE SWAP3 MSTORE DUP4 KECCAK256 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP6 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0xEE0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 SWAP1 PUSH1 0x6 DUP2 PUSH2 0xF18 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 PUSH2 0xF49 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0xF95 PUSH1 0x2 PUSH2 0x1343 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP3 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD PUSH32 0x8562EB94748E30BB0071E932744CE902B460C683474FCB3BFD567FFA16B1AFB2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH2 0x101E PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x102A PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x1033 PUSH0 PUSH2 0x1426 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x103D PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479204C697374656420496E204D61726B6574706C616365210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x10F5 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1103 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1141 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP1 DUP7 MSTORE DUP7 DUP3 KECCAK256 DUP14 DUP4 MSTORE DUP7 MSTORE DUP7 DUP3 KECCAK256 DUP9 MLOAD DUP2 SSTORE DUP9 DUP8 ADD MLOAD SWAP6 DUP2 ADD DUP1 SLOAD SWAP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND OR SWAP1 SSTORE DUP9 DUP9 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP8 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP9 ADD MLOAD SWAP1 DUP5 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x6 SWAP3 DUP4 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE SWAP2 DUP4 ADD DUP10 SWAP1 MSTORE SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x125D SWAP1 DUP11 SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x20 DUP3 ADD MSTORE ADDRESS DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x62AF98DBC3627E85C5EB929B032D3CE3D6C376652D71B4CCA6162A16EF099114 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 PUSH2 0x12E2 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x13F3 DUP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1477 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1033 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x14DD JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x14AF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14AD SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14EA DUP4 DUP4 PUSH0 PUSH2 0x14F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1531 SWAP2 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1580 DUP7 DUP4 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x159F JUMPI PUSH2 0x159A DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x14EA JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x15B6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x15DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST POP DUP1 PUSH2 0x14EA JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x15F6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1679 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x169B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14EA DUP3 PUSH2 0x1685 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BB JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH1 0x60 DUP5 MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x16FB DUP2 PUSH1 0x80 DUP8 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x40 SWAP4 DUP5 ADD MLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x17DF JUMPI DUP6 DUP4 SUB PUSH1 0x1F NOT ADD DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 MSTORE DUP6 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND DUP2 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 DUP3 ADD MLOAD PUSH2 0x120 PUSH1 0xE0 DUP8 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH2 0x17BE DUP4 DUP9 ADD DUP4 PUSH2 0x16DB JUMP JUMPDEST SWAP4 ADD MLOAD PUSH2 0x100 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x173D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x17FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1722 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1810 DUP2 DUP6 PUSH2 0x1722 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x184A DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x188B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1894 DUP6 PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A2 PUSH1 0x20 DUP7 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x18DC JUMPI PUSH2 0x18DC PUSH2 0x18B7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x191A JUMPI PUSH2 0x191A PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1949 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1979 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x199E JUMPI PUSH2 0x199E PUSH2 0x18E3 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x19AD DUP6 DUP3 ADD PUSH2 0x1920 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP6 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x19C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x1A9F JUMPI DUP3 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x19E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F NOT PUSH1 0x80 DUP3 DUP14 SUB DUP3 ADD SLT ISZERO PUSH2 0x19F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A00 PUSH2 0x18F7 JUMP JUMPDEST DUP10 DUP4 ADD MLOAD DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0x1A18 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x3F DUP2 ADD DUP16 SGT PUSH2 0x1A28 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP12 DUP2 ADD MLOAD DUP11 DUP2 GT ISZERO PUSH2 0x1A3C JUMPI PUSH2 0x1A3C PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A4C DUP14 DUP7 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x1920 JUMP JUMPDEST SWAP5 POP DUP1 DUP6 MSTORE DUP16 DUP4 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1A61 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A70 DUP2 DUP15 DUP8 ADD DUP6 DUP6 ADD PUSH2 0x16B9 JUMP JUMPDEST POP POP DUP2 DUP12 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 DUP2 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP3 MSTORE SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x19CC JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x943 JUMPI PUSH2 0x943 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1B27 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16B9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x169395800E3092048F4B7742B8273A290092420D3F43AF PUSH21 0xD3B5BD42344F5864736F6C63430008160033000000 ",
							"sourceMap": "834:8437:18:-:0;;;2557:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;2620:12:18;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:19;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2644:12:18::1;:28:::0;;-1:-1:-1;;;;;;2644:28:18::1;-1:-1:-1::0;;;;;2644:28:18;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;834:8437:18;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:19:-;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;834:8437:18;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CancelOffer_4354": {
									"entryPoint": 2377,
									"id": 4354,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ListNft_3993": {
									"entryPoint": 4207,
									"id": 3993,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callOptionalReturn_703": {
									"entryPoint": 5239,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5113,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_idToNFT_3793": {
									"entryPoint": null,
									"id": 3793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2190": {
									"entryPoint": null,
									"id": 2190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nftCount_3781": {
									"entryPoint": null,
									"id": 3781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 4844,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2177": {
									"entryPoint": 5606,
									"id": 2177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5158,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNft_4205": {
									"entryPoint": 3083,
									"id": 4205,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_2218": {
									"entryPoint": null,
									"id": 2218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_2260": {
									"entryPoint": 4931,
									"id": 2260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_2045": {
									"entryPoint": 5361,
									"id": 2045,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1999": {
									"entryPoint": 5341,
									"id": 1999,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getListedNfts_4672": {
									"entryPoint": 708,
									"id": 4672,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@increment_2232": {
									"entryPoint": null,
									"id": 2232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@listCount_3798": {
									"entryPoint": null,
									"id": 3798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftAuctionCount_3784": {
									"entryPoint": null,
									"id": 3784,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftDetail_4689": {
									"entryPoint": 2329,
									"id": 4689,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 4130,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_540": {
									"entryPoint": 5017,
									"id": 540,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4149,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userListCount_3802": {
									"entryPoint": null,
									"id": 3802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2137": {
									"entryPoint": 5514,
									"id": 2137,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_struct_ListedNftTokenId_dyn": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_Token": {
									"entryPoint": 5851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_address__to_t_address_t_uint256_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e74a7153f5af84cae9b57a96215644a7c5de60057770127769748e3c599d5d76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebd79ccf5ff56656016c69bd918540ff187a66241fdadbd2a4920e6dedce66a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f75c08e287e700392b7ff67e1f3d4c88865d2714af5be39fa99255b28de970c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_2291": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13640:19",
										"nodeType": "YulBlock",
										"src": "0:13640:19",
										"statements": [
											{
												"nativeSrc": "6:3:19",
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:19",
													"nodeType": "YulBlock",
													"src": "63:124:19",
													"statements": [
														{
															"nativeSrc": "73:29:19",
															"nodeType": "YulAssignment",
															"src": "73:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:19"
																},
																"nativeSrc": "82:20:19",
																"nodeType": "YulFunctionCall",
																"src": "82:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:19",
																"nodeType": "YulBlock",
																"src": "165:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:19",
																					"nodeType": "YulLiteral",
																					"src": "174:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:19",
																					"nodeType": "YulLiteral",
																					"src": "177:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:19"
																			},
																			"nativeSrc": "167:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:19"
																		},
																		"nativeSrc": "167:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:19",
																										"nodeType": "YulLiteral",
																										"src": "150:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:19",
																										"nodeType": "YulLiteral",
																										"src": "155:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:19"
																								},
																								"nativeSrc": "146:11:19",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:19",
																								"nodeType": "YulLiteral",
																								"src": "159:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:19"
																						},
																						"nativeSrc": "142:19:19",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:19"
																				},
																				"nativeSrc": "131:31:19",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:19"
																		},
																		"nativeSrc": "121:42:19",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:19"
																},
																"nativeSrc": "114:50:19",
																"nodeType": "YulFunctionCall",
																"src": "114:50:19"
															},
															"nativeSrc": "111:70:19",
															"nodeType": "YulIf",
															"src": "111:70:19"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:19",
														"nodeType": "YulTypedName",
														"src": "42:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:19",
														"nodeType": "YulTypedName",
														"src": "53:5:19",
														"type": ""
													}
												],
												"src": "14:173:19"
											},
											{
												"body": {
													"nativeSrc": "262:116:19",
													"nodeType": "YulBlock",
													"src": "262:116:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:19",
																"nodeType": "YulBlock",
																"src": "308:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:19",
																					"nodeType": "YulLiteral",
																					"src": "317:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:19",
																					"nodeType": "YulLiteral",
																					"src": "320:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:19"
																			},
																			"nativeSrc": "310:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:19"
																		},
																		"nativeSrc": "310:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:19"
																		},
																		"nativeSrc": "279:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:19",
																		"nodeType": "YulLiteral",
																		"src": "304:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:19"
																},
																"nativeSrc": "275:32:19",
																"nodeType": "YulFunctionCall",
																"src": "275:32:19"
															},
															"nativeSrc": "272:52:19",
															"nodeType": "YulIf",
															"src": "272:52:19"
														},
														{
															"nativeSrc": "333:39:19",
															"nodeType": "YulAssignment",
															"src": "333:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:19"
																},
																"nativeSrc": "343:29:19",
																"nodeType": "YulFunctionCall",
																"src": "343:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:19",
														"nodeType": "YulTypedName",
														"src": "228:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:19",
														"nodeType": "YulTypedName",
														"src": "239:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:19",
														"nodeType": "YulTypedName",
														"src": "251:6:19",
														"type": ""
													}
												],
												"src": "192:186:19"
											},
											{
												"body": {
													"nativeSrc": "449:184:19",
													"nodeType": "YulBlock",
													"src": "449:184:19",
													"statements": [
														{
															"nativeSrc": "459:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "459:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "468:1:19",
																"nodeType": "YulLiteral",
																"src": "468:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "463:1:19",
																	"nodeType": "YulTypedName",
																	"src": "463:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "528:63:19",
																"nodeType": "YulBlock",
																"src": "528:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "553:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "553:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "558:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "558:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "549:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "549:3:19"
																					},
																					"nativeSrc": "549:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "549:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "572:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "572:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "577:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "577:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "568:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "568:3:19"
																							},
																							"nativeSrc": "568:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "568:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "562:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "562:5:19"
																					},
																					"nativeSrc": "562:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "562:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "542:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "542:6:19"
																			},
																			"nativeSrc": "542:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "542:39:19"
																		},
																		"nativeSrc": "542:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "542:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "489:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "489:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "492:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "492:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "486:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "486:2:19"
																},
																"nativeSrc": "486:13:19",
																"nodeType": "YulFunctionCall",
																"src": "486:13:19"
															},
															"nativeSrc": "478:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "500:19:19",
																"nodeType": "YulBlock",
																"src": "500:19:19",
																"statements": [
																	{
																		"nativeSrc": "502:15:19",
																		"nodeType": "YulAssignment",
																		"src": "502:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "511:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "511:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "514:2:19",
																					"nodeType": "YulLiteral",
																					"src": "514:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "507:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "507:3:19"
																			},
																			"nativeSrc": "507:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "507:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "502:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "502:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "482:3:19",
																"nodeType": "YulBlock",
																"src": "482:3:19",
																"statements": []
															},
															"src": "478:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "611:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "611:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "616:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "607:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:19"
																		},
																		"nativeSrc": "607:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "607:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "625:1:19",
																		"nodeType": "YulLiteral",
																		"src": "625:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "600:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:19"
																},
																"nativeSrc": "600:27:19",
																"nodeType": "YulFunctionCall",
																"src": "600:27:19"
															},
															"nativeSrc": "600:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "600:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "383:250:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "427:3:19",
														"nodeType": "YulTypedName",
														"src": "427:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "432:3:19",
														"nodeType": "YulTypedName",
														"src": "432:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "437:6:19",
														"nodeType": "YulTypedName",
														"src": "437:6:19",
														"type": ""
													}
												],
												"src": "383:250:19"
											},
											{
												"body": {
													"nativeSrc": "694:423:19",
													"nodeType": "YulBlock",
													"src": "694:423:19",
													"statements": [
														{
															"nativeSrc": "704:32:19",
															"nodeType": "YulVariableDeclaration",
															"src": "704:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "730:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "730:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "724:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "724:5:19"
																},
																"nativeSrc": "724:12:19",
																"nodeType": "YulFunctionCall",
																"src": "724:12:19"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "708:12:19",
																	"nodeType": "YulTypedName",
																	"src": "708:12:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "752:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "752:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "757:4:19",
																		"nodeType": "YulLiteral",
																		"src": "757:4:19",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "745:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:19"
																},
																"nativeSrc": "745:17:19",
																"nodeType": "YulFunctionCall",
																"src": "745:17:19"
															},
															"nativeSrc": "745:17:19",
															"nodeType": "YulExpressionStatement",
															"src": "745:17:19"
														},
														{
															"nativeSrc": "771:33:19",
															"nodeType": "YulVariableDeclaration",
															"src": "771:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "791:12:19",
																		"nodeType": "YulIdentifier",
																		"src": "791:12:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "785:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "785:5:19"
																},
																"nativeSrc": "785:19:19",
																"nodeType": "YulFunctionCall",
																"src": "785:19:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "775:6:19",
																	"nodeType": "YulTypedName",
																	"src": "775:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "824:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "824:3:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "829:4:19",
																				"nodeType": "YulLiteral",
																				"src": "829:4:19",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "820:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "820:3:19"
																		},
																		"nativeSrc": "820:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "820:14:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "836:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "836:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "813:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "813:6:19"
																},
																"nativeSrc": "813:30:19",
																"nodeType": "YulFunctionCall",
																"src": "813:30:19"
															},
															"nativeSrc": "813:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "813:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "891:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "891:12:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "905:4:19",
																				"nodeType": "YulLiteral",
																				"src": "905:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "887:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:19"
																		},
																		"nativeSrc": "887:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "887:23:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "916:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "916:3:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "921:3:19",
																				"nodeType": "YulLiteral",
																				"src": "921:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "912:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "912:3:19"
																		},
																		"nativeSrc": "912:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "912:13:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "927:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "852:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "852:34:19"
																},
																"nativeSrc": "852:82:19",
																"nodeType": "YulFunctionCall",
																"src": "852:82:19"
															},
															"nativeSrc": "852:82:19",
															"nodeType": "YulExpressionStatement",
															"src": "852:82:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "954:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "954:3:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "959:4:19",
																				"nodeType": "YulLiteral",
																				"src": "959:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "950:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:19"
																		},
																		"nativeSrc": "950:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "950:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "976:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "976:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "983:4:19",
																						"nodeType": "YulLiteral",
																						"src": "983:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "972:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "972:3:19"
																				},
																				"nativeSrc": "972:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "972:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "966:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "966:5:19"
																		},
																		"nativeSrc": "966:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "966:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "943:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "943:6:19"
																},
																"nativeSrc": "943:47:19",
																"nodeType": "YulFunctionCall",
																"src": "943:47:19"
															},
															"nativeSrc": "943:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "943:47:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1010:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1010:3:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1015:4:19",
																				"nodeType": "YulLiteral",
																				"src": "1015:4:19",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1006:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:3:19"
																		},
																		"nativeSrc": "1006:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1006:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1032:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1032:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1039:4:19",
																						"nodeType": "YulLiteral",
																						"src": "1039:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1028:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1028:3:19"
																				},
																				"nativeSrc": "1028:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1028:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1022:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "1022:5:19"
																		},
																		"nativeSrc": "1022:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1022:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "999:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "999:6:19"
																},
																"nativeSrc": "999:47:19",
																"nodeType": "YulFunctionCall",
																"src": "999:47:19"
															},
															"nativeSrc": "999:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "999:47:19"
														},
														{
															"nativeSrc": "1055:56:19",
															"nodeType": "YulAssignment",
															"src": "1055:56:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:19",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:19"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:19",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:19"
																						},
																						"nativeSrc": "1079:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:19",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:19"
																						},
																						"nativeSrc": "1096:7:19",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:19"
																				},
																				"nativeSrc": "1075:29:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:19"
																		},
																		"nativeSrc": "1066:39:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:3:19",
																		"nodeType": "YulLiteral",
																		"src": "1107:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:19"
																},
																"nativeSrc": "1062:49:19",
																"nodeType": "YulFunctionCall",
																"src": "1062:49:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_struct_Token",
												"nativeSrc": "638:479:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "671:5:19",
														"nodeType": "YulTypedName",
														"src": "671:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "678:3:19",
														"nodeType": "YulTypedName",
														"src": "678:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "686:3:19",
														"nodeType": "YulTypedName",
														"src": "686:3:19",
														"type": ""
													}
												],
												"src": "638:479:19"
											},
											{
												"body": {
													"nativeSrc": "1199:1448:19",
													"nodeType": "YulBlock",
													"src": "1199:1448:19",
													"statements": [
														{
															"nativeSrc": "1209:16:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1209:16:19",
															"value": {
																"name": "pos",
																"nativeSrc": "1222:3:19",
																"nodeType": "YulIdentifier",
																"src": "1222:3:19"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "1213:5:19",
																	"nodeType": "YulTypedName",
																	"src": "1213:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1234:26:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1234:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1254:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1254:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1248:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1248:5:19"
																},
																"nativeSrc": "1248:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1248:12:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1238:6:19",
																	"nodeType": "YulTypedName",
																	"src": "1238:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1276:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1276:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1281:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1281:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1269:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:19"
																},
																"nativeSrc": "1269:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1269:19:19"
															},
															"nativeSrc": "1269:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1269:19:19"
														},
														{
															"nativeSrc": "1297:14:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1297:14:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1307:4:19",
																"nodeType": "YulLiteral",
																"src": "1307:4:19",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1301:2:19",
																	"nodeType": "YulTypedName",
																	"src": "1301:2:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1320:19:19",
															"nodeType": "YulAssignment",
															"src": "1320:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1331:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1331:3:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1336:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "1336:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1327:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:19"
																},
																"nativeSrc": "1327:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1327:12:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1320:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1320:3:19"
																}
															]
														},
														{
															"nativeSrc": "1348:47:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1348:47:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos_1",
																				"nativeSrc": "1368:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1379:1:19",
																						"nodeType": "YulLiteral",
																						"src": "1379:1:19",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1382:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1382:6:19"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1375:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1375:3:19"
																				},
																				"nativeSrc": "1375:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1375:14:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1364:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1364:3:19"
																		},
																		"nativeSrc": "1364:26:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1364:26:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1392:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "1392:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1360:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:19"
																},
																"nativeSrc": "1360:35:19",
																"nodeType": "YulFunctionCall",
																"src": "1360:35:19"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1352:4:19",
																	"nodeType": "YulTypedName",
																	"src": "1352:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1404:28:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1404:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1422:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1422:5:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1429:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "1429:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1418:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:19"
																},
																"nativeSrc": "1418:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1418:14:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1408:6:19",
																	"nodeType": "YulTypedName",
																	"src": "1408:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1441:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1441:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1450:1:19",
																"nodeType": "YulLiteral",
																"src": "1450:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1445:1:19",
																	"nodeType": "YulTypedName",
																	"src": "1445:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1509:1112:19",
																"nodeType": "YulBlock",
																"src": "1509:1112:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1530:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1530:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail",
																									"nativeSrc": "1543:4:19",
																									"nodeType": "YulIdentifier",
																									"src": "1543:4:19"
																								},
																								{
																									"name": "pos_1",
																									"nativeSrc": "1549:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "1549:5:19"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "1539:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1539:3:19"
																							},
																							"nativeSrc": "1539:16:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1539:16:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1561:2:19",
																									"nodeType": "YulLiteral",
																									"src": "1561:2:19",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1557:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1557:3:19"
																							},
																							"nativeSrc": "1557:7:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1557:7:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1535:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1535:3:19"
																					},
																					"nativeSrc": "1535:30:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1535:30:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1523:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1523:6:19"
																			},
																			"nativeSrc": "1523:43:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1523:43:19"
																		},
																		"nativeSrc": "1523:43:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1523:43:19"
																	},
																	{
																		"nativeSrc": "1579:23:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1579:23:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1595:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "1595:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1589:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1589:5:19"
																			},
																			"nativeSrc": "1589:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1589:13:19"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1583:2:19",
																				"nodeType": "YulTypedName",
																				"src": "1583:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1615:16:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1615:16:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1625:6:19",
																			"nodeType": "YulLiteral",
																			"src": "1625:6:19",
																			"type": "",
																			"value": "0x0120"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nativeSrc": "1619:2:19",
																				"nodeType": "YulTypedName",
																				"src": "1619:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1644:19:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1644:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "_2",
																					"nativeSrc": "1660:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "1660:2:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1654:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1654:5:19"
																			},
																			"nativeSrc": "1654:9:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:9:19"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nativeSrc": "1648:2:19",
																				"nodeType": "YulTypedName",
																				"src": "1648:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nativeSrc": "1683:4:19",
																					"nodeType": "YulIdentifier",
																					"src": "1683:4:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_4",
																							"nativeSrc": "1695:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1695:2:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1689:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1689:5:19"
																					},
																					"nativeSrc": "1689:9:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1689:9:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1676:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:19"
																			},
																			"nativeSrc": "1676:23:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1676:23:19"
																		},
																		"nativeSrc": "1676:23:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:23:19"
																	},
																	{
																		"nativeSrc": "1712:38:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1712:38:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_4",
																							"nativeSrc": "1742:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1742:2:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "1746:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1746:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1738:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1738:3:19"
																					},
																					"nativeSrc": "1738:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1738:11:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1732:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1732:5:19"
																			},
																			"nativeSrc": "1732:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:18:19"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1716:12:19",
																				"nodeType": "YulTypedName",
																				"src": "1716:12:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1763:29:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1763:29:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1781:3:19",
																							"nodeType": "YulLiteral",
																							"src": "1781:3:19",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1786:1:19",
																							"nodeType": "YulLiteral",
																							"src": "1786:1:19",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1777:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1777:3:19"
																					},
																					"nativeSrc": "1777:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1777:11:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1790:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "1773:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1773:3:19"
																			},
																			"nativeSrc": "1773:19:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1773:19:19"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nativeSrc": "1767:2:19",
																				"nodeType": "YulTypedName",
																				"src": "1767:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "1816:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "1816:4:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "1822:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1822:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1812:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:19"
																					},
																					"nativeSrc": "1812:13:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:13:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "memberValue0",
																							"nativeSrc": "1831:12:19",
																							"nodeType": "YulIdentifier",
																							"src": "1831:12:19"
																						},
																						{
																							"name": "_5",
																							"nativeSrc": "1845:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1845:2:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1827:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1827:3:19"
																					},
																					"nativeSrc": "1827:21:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:21:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1805:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1805:6:19"
																			},
																			"nativeSrc": "1805:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1805:44:19"
																		},
																		"nativeSrc": "1805:44:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1805:44:19"
																	},
																	{
																		"nativeSrc": "1862:14:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1862:14:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1872:4:19",
																			"nodeType": "YulLiteral",
																			"src": "1872:4:19",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nativeSrc": "1866:2:19",
																				"nodeType": "YulTypedName",
																				"src": "1866:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "1900:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "1900:4:19"
																						},
																						{
																							"name": "_6",
																							"nativeSrc": "1906:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1906:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1896:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1896:3:19"
																					},
																					"nativeSrc": "1896:13:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1896:13:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_4",
																											"nativeSrc": "1925:2:19",
																											"nodeType": "YulIdentifier",
																											"src": "1925:2:19"
																										},
																										{
																											"name": "_6",
																											"nativeSrc": "1929:2:19",
																											"nodeType": "YulIdentifier",
																											"src": "1929:2:19"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "1921:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "1921:3:19"
																									},
																									"nativeSrc": "1921:11:19",
																									"nodeType": "YulFunctionCall",
																									"src": "1921:11:19"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "1915:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "1915:5:19"
																							},
																							"nativeSrc": "1915:18:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1915:18:19"
																						},
																						{
																							"name": "_5",
																							"nativeSrc": "1935:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1935:2:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1911:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1911:3:19"
																					},
																					"nativeSrc": "1911:27:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1911:27:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1889:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:19"
																			},
																			"nativeSrc": "1889:50:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1889:50:19"
																		},
																		"nativeSrc": "1889:50:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:50:19"
																	},
																	{
																		"nativeSrc": "1952:14:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1952:14:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1962:4:19",
																			"nodeType": "YulLiteral",
																			"src": "1962:4:19",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nativeSrc": "1956:2:19",
																				"nodeType": "YulTypedName",
																				"src": "1956:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "1990:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "1990:4:19"
																						},
																						{
																							"name": "_7",
																							"nativeSrc": "1996:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "1996:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1986:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1986:3:19"
																					},
																					"nativeSrc": "1986:13:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1986:13:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nativeSrc": "2011:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2011:2:19"
																								},
																								{
																									"name": "_7",
																									"nativeSrc": "2015:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2015:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2007:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "2007:3:19"
																							},
																							"nativeSrc": "2007:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2007:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2001:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:19"
																					},
																					"nativeSrc": "2001:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2001:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1979:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1979:6:19"
																			},
																			"nativeSrc": "1979:41:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1979:41:19"
																		},
																		"nativeSrc": "1979:41:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1979:41:19"
																	},
																	{
																		"nativeSrc": "2033:14:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2033:14:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2043:4:19",
																			"nodeType": "YulLiteral",
																			"src": "2043:4:19",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nativeSrc": "2037:2:19",
																				"nodeType": "YulTypedName",
																				"src": "2037:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "2071:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2071:4:19"
																						},
																						{
																							"name": "_8",
																							"nativeSrc": "2077:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "2077:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2067:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2067:3:19"
																					},
																					"nativeSrc": "2067:13:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2067:13:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nativeSrc": "2092:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2092:2:19"
																								},
																								{
																									"name": "_8",
																									"nativeSrc": "2096:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2096:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2088:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "2088:3:19"
																							},
																							"nativeSrc": "2088:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2088:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2082:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2082:5:19"
																					},
																					"nativeSrc": "2082:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2082:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2060:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:19"
																			},
																			"nativeSrc": "2060:41:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2060:41:19"
																		},
																		"nativeSrc": "2060:41:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:41:19"
																	},
																	{
																		"nativeSrc": "2114:14:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2114:14:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2124:4:19",
																			"nodeType": "YulLiteral",
																			"src": "2124:4:19",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nativeSrc": "2118:2:19",
																				"nodeType": "YulTypedName",
																				"src": "2118:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "2152:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:19"
																						},
																						{
																							"name": "_9",
																							"nativeSrc": "2158:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "2158:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2148:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2148:3:19"
																					},
																					"nativeSrc": "2148:13:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2148:13:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nativeSrc": "2173:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2173:2:19"
																								},
																								{
																									"name": "_9",
																									"nativeSrc": "2177:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2177:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2169:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "2169:3:19"
																							},
																							"nativeSrc": "2169:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2169:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2163:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2163:5:19"
																					},
																					"nativeSrc": "2163:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2163:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2141:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2141:6:19"
																			},
																			"nativeSrc": "2141:41:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2141:41:19"
																		},
																		"nativeSrc": "2141:41:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2141:41:19"
																	},
																	{
																		"nativeSrc": "2195:15:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2195:15:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2206:4:19",
																			"nodeType": "YulLiteral",
																			"src": "2206:4:19",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_10",
																				"nativeSrc": "2199:3:19",
																				"nodeType": "YulTypedName",
																				"src": "2199:3:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "2234:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2234:4:19"
																						},
																						{
																							"name": "_10",
																							"nativeSrc": "2240:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2240:3:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2230:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2230:3:19"
																					},
																					"nativeSrc": "2230:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2230:14:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_4",
																													"nativeSrc": "2270:2:19",
																													"nodeType": "YulIdentifier",
																													"src": "2270:2:19"
																												},
																												{
																													"name": "_10",
																													"nativeSrc": "2274:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "2274:3:19"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "2266:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "2266:3:19"
																											},
																											"nativeSrc": "2266:12:19",
																											"nodeType": "YulFunctionCall",
																											"src": "2266:12:19"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "2260:5:19",
																										"nodeType": "YulIdentifier",
																										"src": "2260:5:19"
																									},
																									"nativeSrc": "2260:19:19",
																									"nodeType": "YulFunctionCall",
																									"src": "2260:19:19"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "2253:6:19",
																								"nodeType": "YulIdentifier",
																								"src": "2253:6:19"
																							},
																							"nativeSrc": "2253:27:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2253:27:19"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "2246:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2246:6:19"
																					},
																					"nativeSrc": "2246:35:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2246:35:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2223:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:19"
																			},
																			"nativeSrc": "2223:59:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:59:19"
																		},
																		"nativeSrc": "2223:59:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:59:19"
																	},
																	{
																		"nativeSrc": "2295:40:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:40:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "2327:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "2327:2:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "2331:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "2331:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2323:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2323:3:19"
																					},
																					"nativeSrc": "2323:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2323:11:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2317:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2317:5:19"
																			},
																			"nativeSrc": "2317:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:19"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_1",
																				"nativeSrc": "2299:14:19",
																				"nodeType": "YulTypedName",
																				"src": "2299:14:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "2359:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2359:4:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2365:4:19",
																							"nodeType": "YulLiteral",
																							"src": "2365:4:19",
																							"type": "",
																							"value": "0xe0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2355:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2355:3:19"
																					},
																					"nativeSrc": "2355:15:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2355:15:19"
																				},
																				{
																					"name": "_3",
																					"nativeSrc": "2372:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "2372:2:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2348:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2348:6:19"
																			},
																			"nativeSrc": "2348:27:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2348:27:19"
																		},
																		"nativeSrc": "2348:27:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2348:27:19"
																	},
																	{
																		"nativeSrc": "2388:68:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:68:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0_1",
																					"nativeSrc": "2426:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "2426:14:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "2446:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2446:4:19"
																						},
																						{
																							"name": "_3",
																							"nativeSrc": "2452:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "2452:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2442:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2442:3:19"
																					},
																					"nativeSrc": "2442:13:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2442:13:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_Token",
																				"nativeSrc": "2402:23:19",
																				"nodeType": "YulIdentifier",
																				"src": "2402:23:19"
																			},
																			"nativeSrc": "2402:54:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2402:54:19"
																		},
																		"variables": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "2392:6:19",
																				"nodeType": "YulTypedName",
																				"src": "2392:6:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "2480:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "2480:4:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2486:6:19",
																							"nodeType": "YulLiteral",
																							"src": "2486:6:19",
																							"type": "",
																							"value": "0x0100"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2476:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2476:3:19"
																					},
																					"nativeSrc": "2476:17:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2476:17:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "2505:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2505:2:19"
																								},
																								{
																									"name": "_6",
																									"nativeSrc": "2509:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "2509:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2501:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "2501:3:19"
																							},
																							"nativeSrc": "2501:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2501:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2495:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2495:5:19"
																					},
																					"nativeSrc": "2495:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2495:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2469:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2469:6:19"
																			},
																			"nativeSrc": "2469:45:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2469:45:19"
																		},
																		"nativeSrc": "2469:45:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2469:45:19"
																	},
																	{
																		"nativeSrc": "2527:14:19",
																		"nodeType": "YulAssignment",
																		"src": "2527:14:19",
																		"value": {
																			"name": "tail_1",
																			"nativeSrc": "2535:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2535:6:19"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "2527:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2527:4:19"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2554:25:19",
																		"nodeType": "YulAssignment",
																		"src": "2554:25:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2568:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "2568:6:19"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2576:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "2576:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2564:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2564:3:19"
																			},
																			"nativeSrc": "2564:15:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2564:15:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2554:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2554:6:19"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2592:19:19",
																		"nodeType": "YulAssignment",
																		"src": "2592:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2603:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2603:3:19"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2608:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "2608:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2599:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2599:3:19"
																			},
																			"nativeSrc": "2599:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2599:12:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2592:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2592:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1471:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1474:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1474:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1468:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1468:2:19"
																},
																"nativeSrc": "1468:13:19",
																"nodeType": "YulFunctionCall",
																"src": "1468:13:19"
															},
															"nativeSrc": "1460:1161:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1482:18:19",
																"nodeType": "YulBlock",
																"src": "1482:18:19",
																"statements": [
																	{
																		"nativeSrc": "1484:14:19",
																		"nodeType": "YulAssignment",
																		"src": "1484:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1493:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "1493:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1496:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1496:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1489:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1489:3:19"
																			},
																			"nativeSrc": "1489:9:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1489:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1484:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "1484:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1464:3:19",
																"nodeType": "YulBlock",
																"src": "1464:3:19",
																"statements": []
															},
															"src": "1460:1161:19"
														},
														{
															"nativeSrc": "2630:11:19",
															"nodeType": "YulAssignment",
															"src": "2630:11:19",
															"value": {
																"name": "tail",
																"nativeSrc": "2637:4:19",
																"nodeType": "YulIdentifier",
																"src": "2637:4:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2630:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2630:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_struct_ListedNftTokenId_dyn",
												"nativeSrc": "1122:1525:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1176:5:19",
														"nodeType": "YulTypedName",
														"src": "1176:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1183:3:19",
														"nodeType": "YulTypedName",
														"src": "1183:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1191:3:19",
														"nodeType": "YulTypedName",
														"src": "1191:3:19",
														"type": ""
													}
												],
												"src": "1122:1525:19"
											},
											{
												"body": {
													"nativeSrc": "3017:268:19",
													"nodeType": "YulBlock",
													"src": "3017:268:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3034:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3034:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3045:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3045:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3027:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3027:6:19"
																},
																"nativeSrc": "3027:21:19",
																"nodeType": "YulFunctionCall",
																"src": "3027:21:19"
															},
															"nativeSrc": "3027:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "3027:21:19"
														},
														{
															"nativeSrc": "3057:86:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3057:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3116:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3128:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3139:2:19",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3124:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:19"
																		},
																		"nativeSrc": "3124:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_ListedNftTokenId_dyn",
																	"nativeSrc": "3071:44:19",
																	"nodeType": "YulIdentifier",
																	"src": "3071:44:19"
																},
																"nativeSrc": "3071:72:19",
																"nodeType": "YulFunctionCall",
																"src": "3071:72:19"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3061:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3061:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3163:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3174:2:19",
																				"nodeType": "YulLiteral",
																				"src": "3174:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3159:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:19"
																		},
																		"nativeSrc": "3159:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "3183:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3183:6:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3179:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:19"
																		},
																		"nativeSrc": "3179:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3179:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3152:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:19"
																},
																"nativeSrc": "3152:50:19",
																"nodeType": "YulFunctionCall",
																"src": "3152:50:19"
															},
															"nativeSrc": "3152:50:19",
															"nodeType": "YulExpressionStatement",
															"src": "3152:50:19"
														},
														{
															"nativeSrc": "3211:68:19",
															"nodeType": "YulAssignment",
															"src": "3211:68:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3264:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3264:6:19"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3272:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3272:6:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_ListedNftTokenId_dyn",
																	"nativeSrc": "3219:44:19",
																	"nodeType": "YulIdentifier",
																	"src": "3219:44:19"
																},
																"nativeSrc": "3219:60:19",
																"nodeType": "YulFunctionCall",
																"src": "3219:60:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3211:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3211:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2652:633:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2978:9:19",
														"nodeType": "YulTypedName",
														"src": "2978:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2989:6:19",
														"nodeType": "YulTypedName",
														"src": "2989:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2997:6:19",
														"nodeType": "YulTypedName",
														"src": "2997:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3008:4:19",
														"nodeType": "YulTypedName",
														"src": "3008:4:19",
														"type": ""
													}
												],
												"src": "2652:633:19"
											},
											{
												"body": {
													"nativeSrc": "3360:110:19",
													"nodeType": "YulBlock",
													"src": "3360:110:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3406:16:19",
																"nodeType": "YulBlock",
																"src": "3406:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3415:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3415:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3418:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3418:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3408:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3408:6:19"
																			},
																			"nativeSrc": "3408:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:12:19"
																		},
																		"nativeSrc": "3408:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3381:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3381:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3390:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3377:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:19"
																		},
																		"nativeSrc": "3377:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3373:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:19"
																},
																"nativeSrc": "3373:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3373:32:19"
															},
															"nativeSrc": "3370:52:19",
															"nodeType": "YulIf",
															"src": "3370:52:19"
														},
														{
															"nativeSrc": "3431:33:19",
															"nodeType": "YulAssignment",
															"src": "3431:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3454:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3441:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3441:12:19"
																},
																"nativeSrc": "3441:23:19",
																"nodeType": "YulFunctionCall",
																"src": "3441:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3431:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3290:180:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:19",
														"nodeType": "YulTypedName",
														"src": "3326:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3337:7:19",
														"nodeType": "YulTypedName",
														"src": "3337:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3349:6:19",
														"nodeType": "YulTypedName",
														"src": "3349:6:19",
														"type": ""
													}
												],
												"src": "3290:180:19"
											},
											{
												"body": {
													"nativeSrc": "3576:76:19",
													"nodeType": "YulBlock",
													"src": "3576:76:19",
													"statements": [
														{
															"nativeSrc": "3586:26:19",
															"nodeType": "YulAssignment",
															"src": "3586:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3598:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3598:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3609:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3594:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:19"
																},
																"nativeSrc": "3594:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3594:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3586:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3586:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3628:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3628:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3639:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3639:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3621:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:19"
																},
																"nativeSrc": "3621:25:19",
																"nodeType": "YulFunctionCall",
																"src": "3621:25:19"
															},
															"nativeSrc": "3621:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "3621:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3475:177:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3545:9:19",
														"nodeType": "YulTypedName",
														"src": "3545:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3556:6:19",
														"nodeType": "YulTypedName",
														"src": "3556:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3567:4:19",
														"nodeType": "YulTypedName",
														"src": "3567:4:19",
														"type": ""
													}
												],
												"src": "3475:177:19"
											},
											{
												"body": {
													"nativeSrc": "3744:167:19",
													"nodeType": "YulBlock",
													"src": "3744:167:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3790:16:19",
																"nodeType": "YulBlock",
																"src": "3790:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3799:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3799:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3802:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3802:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3792:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3792:6:19"
																			},
																			"nativeSrc": "3792:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3792:12:19"
																		},
																		"nativeSrc": "3792:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3792:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3765:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3774:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3761:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:19"
																		},
																		"nativeSrc": "3761:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3786:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3757:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:19"
																},
																"nativeSrc": "3757:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3757:32:19"
															},
															"nativeSrc": "3754:52:19",
															"nodeType": "YulIf",
															"src": "3754:52:19"
														},
														{
															"nativeSrc": "3815:39:19",
															"nodeType": "YulAssignment",
															"src": "3815:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3844:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3844:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3825:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "3825:18:19"
																},
																"nativeSrc": "3825:29:19",
																"nodeType": "YulFunctionCall",
																"src": "3825:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3815:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:19"
																}
															]
														},
														{
															"nativeSrc": "3863:42:19",
															"nodeType": "YulAssignment",
															"src": "3863:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3890:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3890:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3901:2:19",
																				"nodeType": "YulLiteral",
																				"src": "3901:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3886:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3886:3:19"
																		},
																		"nativeSrc": "3886:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3886:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3873:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3873:12:19"
																},
																"nativeSrc": "3873:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3873:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3863:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3657:254:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3702:9:19",
														"nodeType": "YulTypedName",
														"src": "3702:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3713:7:19",
														"nodeType": "YulTypedName",
														"src": "3713:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3725:6:19",
														"nodeType": "YulTypedName",
														"src": "3725:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3733:6:19",
														"nodeType": "YulTypedName",
														"src": "3733:6:19",
														"type": ""
													}
												],
												"src": "3657:254:19"
											},
											{
												"body": {
													"nativeSrc": "4179:410:19",
													"nodeType": "YulBlock",
													"src": "4179:410:19",
													"statements": [
														{
															"nativeSrc": "4189:27:19",
															"nodeType": "YulAssignment",
															"src": "4189:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4201:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4201:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4212:3:19",
																		"nodeType": "YulLiteral",
																		"src": "4212:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4197:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4197:3:19"
																},
																"nativeSrc": "4197:19:19",
																"nodeType": "YulFunctionCall",
																"src": "4197:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4189:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4189:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4232:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4232:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4243:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4243:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4225:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:19"
																},
																"nativeSrc": "4225:25:19",
																"nodeType": "YulFunctionCall",
																"src": "4225:25:19"
															},
															"nativeSrc": "4225:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "4225:25:19"
														},
														{
															"nativeSrc": "4259:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4259:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4277:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4277:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4282:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4282:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4273:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4273:3:19"
																		},
																		"nativeSrc": "4273:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4273:11:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4286:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4286:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4269:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4269:3:19"
																},
																"nativeSrc": "4269:19:19",
																"nodeType": "YulFunctionCall",
																"src": "4269:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4263:2:19",
																	"nodeType": "YulTypedName",
																	"src": "4263:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4308:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4308:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4319:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4319:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4304:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:19"
																		},
																		"nativeSrc": "4304:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4328:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4328:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4336:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4336:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4324:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:19"
																		},
																		"nativeSrc": "4324:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4324:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4297:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:19"
																},
																"nativeSrc": "4297:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4297:43:19"
															},
															"nativeSrc": "4297:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "4297:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4360:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4360:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4371:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4371:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4356:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4356:3:19"
																		},
																		"nativeSrc": "4356:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4356:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "4380:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4380:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4388:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "4388:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4376:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:19"
																		},
																		"nativeSrc": "4376:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4376:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4349:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:19"
																},
																"nativeSrc": "4349:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4349:43:19"
															},
															"nativeSrc": "4349:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "4349:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4408:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4408:3:19"
																		},
																		"nativeSrc": "4408:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4408:18:19"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4428:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4401:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:19"
																},
																"nativeSrc": "4401:34:19",
																"nodeType": "YulFunctionCall",
																"src": "4401:34:19"
															},
															"nativeSrc": "4401:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "4401:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4455:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4455:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4466:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4466:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4451:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:19"
																		},
																		"nativeSrc": "4451:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4451:19:19"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "4472:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4472:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4444:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4444:6:19"
																},
																"nativeSrc": "4444:35:19",
																"nodeType": "YulFunctionCall",
																"src": "4444:35:19"
															},
															"nativeSrc": "4444:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "4444:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4499:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4499:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4510:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4510:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4495:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:19"
																		},
																		"nativeSrc": "4495:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:19:19"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "4516:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4516:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4488:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:19"
																},
																"nativeSrc": "4488:35:19",
																"nodeType": "YulFunctionCall",
																"src": "4488:35:19"
															},
															"nativeSrc": "4488:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "4488:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4543:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4543:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4554:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4554:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4539:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4539:3:19"
																		},
																		"nativeSrc": "4539:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4539:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value6",
																						"nativeSrc": "4574:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4574:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4567:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "4567:6:19"
																				},
																				"nativeSrc": "4567:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4567:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4560:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4560:6:19"
																		},
																		"nativeSrc": "4560:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4532:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:19"
																},
																"nativeSrc": "4532:51:19",
																"nodeType": "YulFunctionCall",
																"src": "4532:51:19"
															},
															"nativeSrc": "4532:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "4532:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3916:673:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4100:9:19",
														"nodeType": "YulTypedName",
														"src": "4100:9:19",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4111:6:19",
														"nodeType": "YulTypedName",
														"src": "4111:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4119:6:19",
														"nodeType": "YulTypedName",
														"src": "4119:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4127:6:19",
														"nodeType": "YulTypedName",
														"src": "4127:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4135:6:19",
														"nodeType": "YulTypedName",
														"src": "4135:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4143:6:19",
														"nodeType": "YulTypedName",
														"src": "4143:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4151:6:19",
														"nodeType": "YulTypedName",
														"src": "4151:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4159:6:19",
														"nodeType": "YulTypedName",
														"src": "4159:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4170:4:19",
														"nodeType": "YulTypedName",
														"src": "4170:4:19",
														"type": ""
													}
												],
												"src": "3916:673:19"
											},
											{
												"body": {
													"nativeSrc": "4689:92:19",
													"nodeType": "YulBlock",
													"src": "4689:92:19",
													"statements": [
														{
															"nativeSrc": "4699:26:19",
															"nodeType": "YulAssignment",
															"src": "4699:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4711:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4707:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:19"
																},
																"nativeSrc": "4707:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4707:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4699:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4741:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4741:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "4766:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4766:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4759:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "4759:6:19"
																				},
																				"nativeSrc": "4759:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4759:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4752:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4752:6:19"
																		},
																		"nativeSrc": "4752:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:19"
																},
																"nativeSrc": "4734:41:19",
																"nodeType": "YulFunctionCall",
																"src": "4734:41:19"
															},
															"nativeSrc": "4734:41:19",
															"nodeType": "YulExpressionStatement",
															"src": "4734:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4594:187:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4658:9:19",
														"nodeType": "YulTypedName",
														"src": "4658:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4669:6:19",
														"nodeType": "YulTypedName",
														"src": "4669:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4680:4:19",
														"nodeType": "YulTypedName",
														"src": "4680:4:19",
														"type": ""
													}
												],
												"src": "4594:187:19"
											},
											{
												"body": {
													"nativeSrc": "4873:161:19",
													"nodeType": "YulBlock",
													"src": "4873:161:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4919:16:19",
																"nodeType": "YulBlock",
																"src": "4919:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4928:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4928:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4931:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4931:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4921:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4921:6:19"
																			},
																			"nativeSrc": "4921:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4921:12:19"
																		},
																		"nativeSrc": "4921:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4921:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4894:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4894:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4903:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4903:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4890:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:19"
																		},
																		"nativeSrc": "4890:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4915:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4915:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4886:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4886:3:19"
																},
																"nativeSrc": "4886:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4886:32:19"
															},
															"nativeSrc": "4883:52:19",
															"nodeType": "YulIf",
															"src": "4883:52:19"
														},
														{
															"nativeSrc": "4944:33:19",
															"nodeType": "YulAssignment",
															"src": "4944:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4967:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4954:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4954:12:19"
																},
																"nativeSrc": "4954:23:19",
																"nodeType": "YulFunctionCall",
																"src": "4954:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4944:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:19"
																}
															]
														},
														{
															"nativeSrc": "4986:42:19",
															"nodeType": "YulAssignment",
															"src": "4986:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5013:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5024:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5024:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5009:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:19"
																		},
																		"nativeSrc": "5009:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4996:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4996:12:19"
																},
																"nativeSrc": "4996:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4996:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4986:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4786:248:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4831:9:19",
														"nodeType": "YulTypedName",
														"src": "4831:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4842:7:19",
														"nodeType": "YulTypedName",
														"src": "4842:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4854:6:19",
														"nodeType": "YulTypedName",
														"src": "4854:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4862:6:19",
														"nodeType": "YulTypedName",
														"src": "4862:6:19",
														"type": ""
													}
												],
												"src": "4786:248:19"
											},
											{
												"body": {
													"nativeSrc": "5168:145:19",
													"nodeType": "YulBlock",
													"src": "5168:145:19",
													"statements": [
														{
															"nativeSrc": "5178:26:19",
															"nodeType": "YulAssignment",
															"src": "5178:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5190:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5190:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5201:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5186:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:19"
																},
																"nativeSrc": "5186:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5186:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5178:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5178:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5220:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5220:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5235:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5235:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5251:3:19",
																								"nodeType": "YulLiteral",
																								"src": "5251:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5256:1:19",
																								"nodeType": "YulLiteral",
																								"src": "5256:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5247:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "5247:3:19"
																						},
																						"nativeSrc": "5247:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "5247:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5260:1:19",
																						"nodeType": "YulLiteral",
																						"src": "5260:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5243:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5243:3:19"
																				},
																				"nativeSrc": "5243:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5243:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5231:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:19"
																		},
																		"nativeSrc": "5231:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5231:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5213:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5213:6:19"
																},
																"nativeSrc": "5213:51:19",
																"nodeType": "YulFunctionCall",
																"src": "5213:51:19"
															},
															"nativeSrc": "5213:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "5213:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5295:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5295:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5280:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:19"
																		},
																		"nativeSrc": "5280:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5280:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5300:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5300:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5273:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:19"
																},
																"nativeSrc": "5273:34:19",
																"nodeType": "YulFunctionCall",
																"src": "5273:34:19"
															},
															"nativeSrc": "5273:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "5273:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5039:274:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5129:9:19",
														"nodeType": "YulTypedName",
														"src": "5129:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5140:6:19",
														"nodeType": "YulTypedName",
														"src": "5140:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5148:6:19",
														"nodeType": "YulTypedName",
														"src": "5148:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5159:4:19",
														"nodeType": "YulTypedName",
														"src": "5159:4:19",
														"type": ""
													}
												],
												"src": "5039:274:19"
											},
											{
												"body": {
													"nativeSrc": "5419:102:19",
													"nodeType": "YulBlock",
													"src": "5419:102:19",
													"statements": [
														{
															"nativeSrc": "5429:26:19",
															"nodeType": "YulAssignment",
															"src": "5429:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5441:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5441:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5452:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5452:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5437:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5437:3:19"
																},
																"nativeSrc": "5437:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5437:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5429:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5429:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5471:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5471:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5486:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5486:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5502:3:19",
																								"nodeType": "YulLiteral",
																								"src": "5502:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5507:1:19",
																								"nodeType": "YulLiteral",
																								"src": "5507:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5498:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "5498:3:19"
																						},
																						"nativeSrc": "5498:11:19",
																						"nodeType": "YulFunctionCall",
																						"src": "5498:11:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5511:1:19",
																						"nodeType": "YulLiteral",
																						"src": "5511:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5494:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5494:3:19"
																				},
																				"nativeSrc": "5494:19:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5494:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5482:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5482:3:19"
																		},
																		"nativeSrc": "5482:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5482:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5464:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:19"
																},
																"nativeSrc": "5464:51:19",
																"nodeType": "YulFunctionCall",
																"src": "5464:51:19"
															},
															"nativeSrc": "5464:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "5464:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5318:203:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5388:9:19",
														"nodeType": "YulTypedName",
														"src": "5388:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5399:6:19",
														"nodeType": "YulTypedName",
														"src": "5399:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5410:4:19",
														"nodeType": "YulTypedName",
														"src": "5410:4:19",
														"type": ""
													}
												],
												"src": "5318:203:19"
											},
											{
												"body": {
													"nativeSrc": "5647:276:19",
													"nodeType": "YulBlock",
													"src": "5647:276:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5694:16:19",
																"nodeType": "YulBlock",
																"src": "5694:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5703:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5703:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5706:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5706:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5696:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "5696:6:19"
																			},
																			"nativeSrc": "5696:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5696:12:19"
																		},
																		"nativeSrc": "5696:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5696:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5668:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5668:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5677:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5677:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5664:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:19"
																		},
																		"nativeSrc": "5664:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5664:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5689:3:19",
																		"nodeType": "YulLiteral",
																		"src": "5689:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5660:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:19"
																},
																"nativeSrc": "5660:33:19",
																"nodeType": "YulFunctionCall",
																"src": "5660:33:19"
															},
															"nativeSrc": "5657:53:19",
															"nodeType": "YulIf",
															"src": "5657:53:19"
														},
														{
															"nativeSrc": "5719:39:19",
															"nodeType": "YulAssignment",
															"src": "5719:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5748:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5748:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5729:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "5729:18:19"
																},
																"nativeSrc": "5729:29:19",
																"nodeType": "YulFunctionCall",
																"src": "5729:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5719:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:19"
																}
															]
														},
														{
															"nativeSrc": "5767:48:19",
															"nodeType": "YulAssignment",
															"src": "5767:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5800:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5811:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5811:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5796:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:19"
																		},
																		"nativeSrc": "5796:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5796:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5777:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "5777:18:19"
																},
																"nativeSrc": "5777:38:19",
																"nodeType": "YulFunctionCall",
																"src": "5777:38:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5767:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:19"
																}
															]
														},
														{
															"nativeSrc": "5824:42:19",
															"nodeType": "YulAssignment",
															"src": "5824:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5851:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5851:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5862:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5862:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5847:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:19"
																		},
																		"nativeSrc": "5847:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5834:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "5834:12:19"
																},
																"nativeSrc": "5834:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5834:32:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5824:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5824:6:19"
																}
															]
														},
														{
															"nativeSrc": "5875:42:19",
															"nodeType": "YulAssignment",
															"src": "5875:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5902:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5902:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5913:2:19",
																				"nodeType": "YulLiteral",
																				"src": "5913:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5898:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5898:3:19"
																		},
																		"nativeSrc": "5898:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5898:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5885:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "5885:12:19"
																},
																"nativeSrc": "5885:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5885:32:19"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5875:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nativeSrc": "5526:397:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5589:9:19",
														"nodeType": "YulTypedName",
														"src": "5589:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5600:7:19",
														"nodeType": "YulTypedName",
														"src": "5600:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5612:6:19",
														"nodeType": "YulTypedName",
														"src": "5612:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5620:6:19",
														"nodeType": "YulTypedName",
														"src": "5620:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5628:6:19",
														"nodeType": "YulTypedName",
														"src": "5628:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5636:6:19",
														"nodeType": "YulTypedName",
														"src": "5636:6:19",
														"type": ""
													}
												],
												"src": "5526:397:19"
											},
											{
												"body": {
													"nativeSrc": "5960:95:19",
													"nodeType": "YulBlock",
													"src": "5960:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5977:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5977:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5984:3:19",
																				"nodeType": "YulLiteral",
																				"src": "5984:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5989:10:19",
																				"nodeType": "YulLiteral",
																				"src": "5989:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5980:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5980:3:19"
																		},
																		"nativeSrc": "5980:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5980:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5970:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5970:6:19"
																},
																"nativeSrc": "5970:31:19",
																"nodeType": "YulFunctionCall",
																"src": "5970:31:19"
															},
															"nativeSrc": "5970:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "5970:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6017:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6017:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6020:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6020:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6010:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6010:6:19"
																},
																"nativeSrc": "6010:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6010:15:19"
															},
															"nativeSrc": "6010:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6010:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6041:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6041:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6044:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6044:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6034:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6034:6:19"
																},
																"nativeSrc": "6034:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6034:15:19"
															},
															"nativeSrc": "6034:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6034:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5928:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5928:127:19"
											},
											{
												"body": {
													"nativeSrc": "6107:88:19",
													"nodeType": "YulBlock",
													"src": "6107:88:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6138:22:19",
																"nodeType": "YulBlock",
																"src": "6138:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6140:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:19"
																			},
																			"nativeSrc": "6140:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:19"
																		},
																		"nativeSrc": "6140:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6123:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6123:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6134:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6134:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6130:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6130:3:19"
																		},
																		"nativeSrc": "6130:6:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6130:6:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6120:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6120:2:19"
																},
																"nativeSrc": "6120:17:19",
																"nodeType": "YulFunctionCall",
																"src": "6120:17:19"
															},
															"nativeSrc": "6117:43:19",
															"nodeType": "YulIf",
															"src": "6117:43:19"
														},
														{
															"nativeSrc": "6169:20:19",
															"nodeType": "YulAssignment",
															"src": "6169:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6180:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6180:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6187:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6187:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6176:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:19"
																},
																"nativeSrc": "6176:13:19",
																"nodeType": "YulFunctionCall",
																"src": "6176:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6169:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6169:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6060:135:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6089:5:19",
														"nodeType": "YulTypedName",
														"src": "6089:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6099:3:19",
														"nodeType": "YulTypedName",
														"src": "6099:3:19",
														"type": ""
													}
												],
												"src": "6060:135:19"
											},
											{
												"body": {
													"nativeSrc": "6232:95:19",
													"nodeType": "YulBlock",
													"src": "6232:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6249:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6249:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6256:3:19",
																				"nodeType": "YulLiteral",
																				"src": "6256:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6261:10:19",
																				"nodeType": "YulLiteral",
																				"src": "6261:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6252:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:19"
																		},
																		"nativeSrc": "6252:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6242:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6242:6:19"
																},
																"nativeSrc": "6242:31:19",
																"nodeType": "YulFunctionCall",
																"src": "6242:31:19"
															},
															"nativeSrc": "6242:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "6242:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6289:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6289:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6292:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6292:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6282:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:19"
																},
																"nativeSrc": "6282:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6282:15:19"
															},
															"nativeSrc": "6282:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6282:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6313:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6313:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6306:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:19"
																},
																"nativeSrc": "6306:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6306:15:19"
															},
															"nativeSrc": "6306:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6306:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6200:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6200:127:19"
											},
											{
												"body": {
													"nativeSrc": "6378:207:19",
													"nodeType": "YulBlock",
													"src": "6378:207:19",
													"statements": [
														{
															"nativeSrc": "6388:19:19",
															"nodeType": "YulAssignment",
															"src": "6388:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6404:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6404:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6398:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6398:5:19"
																},
																"nativeSrc": "6398:9:19",
																"nodeType": "YulFunctionCall",
																"src": "6398:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6388:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:19"
																}
															]
														},
														{
															"nativeSrc": "6416:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6416:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6438:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6438:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6446:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6446:4:19",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6434:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6434:3:19"
																},
																"nativeSrc": "6434:17:19",
																"nodeType": "YulFunctionCall",
																"src": "6434:17:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6420:10:19",
																	"nodeType": "YulTypedName",
																	"src": "6420:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6526:22:19",
																"nodeType": "YulBlock",
																"src": "6526:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6528:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6528:16:19"
																			},
																			"nativeSrc": "6528:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6528:18:19"
																		},
																		"nativeSrc": "6528:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6528:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6469:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6469:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6481:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6481:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6466:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6466:2:19"
																		},
																		"nativeSrc": "6466:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6505:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6505:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6517:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6517:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6502:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6502:2:19"
																		},
																		"nativeSrc": "6502:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6463:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6463:2:19"
																},
																"nativeSrc": "6463:62:19",
																"nodeType": "YulFunctionCall",
																"src": "6463:62:19"
															},
															"nativeSrc": "6460:88:19",
															"nodeType": "YulIf",
															"src": "6460:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6564:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6568:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "6568:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6557:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:19"
																},
																"nativeSrc": "6557:22:19",
																"nodeType": "YulFunctionCall",
																"src": "6557:22:19"
															},
															"nativeSrc": "6557:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "6557:22:19"
														}
													]
												},
												"name": "allocate_memory_2291",
												"nativeSrc": "6332:253:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6367:6:19",
														"nodeType": "YulTypedName",
														"src": "6367:6:19",
														"type": ""
													}
												],
												"src": "6332:253:19"
											},
											{
												"body": {
													"nativeSrc": "6635:230:19",
													"nodeType": "YulBlock",
													"src": "6635:230:19",
													"statements": [
														{
															"nativeSrc": "6645:19:19",
															"nodeType": "YulAssignment",
															"src": "6645:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6661:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6661:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6655:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6655:5:19"
																},
																"nativeSrc": "6655:9:19",
																"nodeType": "YulFunctionCall",
																"src": "6655:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6645:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6645:6:19"
																}
															]
														},
														{
															"nativeSrc": "6673:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6673:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6695:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6695:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "6711:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "6711:4:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6717:2:19",
																						"nodeType": "YulLiteral",
																						"src": "6717:2:19",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6707:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6707:3:19"
																				},
																				"nativeSrc": "6707:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6707:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6726:2:19",
																						"nodeType": "YulLiteral",
																						"src": "6726:2:19",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6722:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6722:3:19"
																				},
																				"nativeSrc": "6722:7:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6722:7:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6703:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6703:3:19"
																		},
																		"nativeSrc": "6703:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6703:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6691:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6691:3:19"
																},
																"nativeSrc": "6691:40:19",
																"nodeType": "YulFunctionCall",
																"src": "6691:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6677:10:19",
																	"nodeType": "YulTypedName",
																	"src": "6677:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6806:22:19",
																"nodeType": "YulBlock",
																"src": "6806:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6808:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "6808:16:19"
																			},
																			"nativeSrc": "6808:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6808:18:19"
																		},
																		"nativeSrc": "6808:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6808:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6749:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6749:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6761:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6761:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6746:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6746:2:19"
																		},
																		"nativeSrc": "6746:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6746:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6785:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "6785:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6797:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6797:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6782:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6782:2:19"
																		},
																		"nativeSrc": "6782:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6782:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6743:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "6743:2:19"
																},
																"nativeSrc": "6743:62:19",
																"nodeType": "YulFunctionCall",
																"src": "6743:62:19"
															},
															"nativeSrc": "6740:88:19",
															"nodeType": "YulIf",
															"src": "6740:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6844:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6844:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6848:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "6848:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6837:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6837:6:19"
																},
																"nativeSrc": "6837:22:19",
																"nodeType": "YulFunctionCall",
																"src": "6837:22:19"
															},
															"nativeSrc": "6837:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "6837:22:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6590:275:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6615:4:19",
														"nodeType": "YulTypedName",
														"src": "6615:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6624:6:19",
														"nodeType": "YulTypedName",
														"src": "6624:6:19",
														"type": ""
													}
												],
												"src": "6590:275:19"
											},
											{
												"body": {
													"nativeSrc": "6999:1910:19",
													"nodeType": "YulBlock",
													"src": "6999:1910:19",
													"statements": [
														{
															"nativeSrc": "7009:12:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7009:12:19",
															"value": {
																"kind": "number",
																"nativeSrc": "7019:2:19",
																"nodeType": "YulLiteral",
																"src": "7019:2:19",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7013:2:19",
																	"nodeType": "YulTypedName",
																	"src": "7013:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7066:16:19",
																"nodeType": "YulBlock",
																"src": "7066:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7075:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7075:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7078:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7078:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7068:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7068:6:19"
																			},
																			"nativeSrc": "7068:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7068:12:19"
																		},
																		"nativeSrc": "7068:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7068:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7041:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7041:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7050:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7050:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7037:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:19"
																		},
																		"nativeSrc": "7037:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7037:23:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7062:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7062:2:19"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7033:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7033:3:19"
																},
																"nativeSrc": "7033:32:19",
																"nodeType": "YulFunctionCall",
																"src": "7033:32:19"
															},
															"nativeSrc": "7030:52:19",
															"nodeType": "YulIf",
															"src": "7030:52:19"
														},
														{
															"nativeSrc": "7091:30:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7091:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7111:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7111:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7105:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7105:5:19"
																},
																"nativeSrc": "7105:16:19",
																"nodeType": "YulFunctionCall",
																"src": "7105:16:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "7095:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7095:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:28:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7130:28:19",
															"value": {
																"kind": "number",
																"nativeSrc": "7140:18:19",
																"nodeType": "YulLiteral",
																"src": "7140:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "7134:2:19",
																	"nodeType": "YulTypedName",
																	"src": "7134:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7185:16:19",
																"nodeType": "YulBlock",
																"src": "7185:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7194:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7194:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7197:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7197:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7187:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7187:6:19"
																			},
																			"nativeSrc": "7187:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:12:19"
																		},
																		"nativeSrc": "7187:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7187:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7173:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7173:6:19"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "7181:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7181:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7170:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7170:2:19"
																},
																"nativeSrc": "7170:14:19",
																"nodeType": "YulFunctionCall",
																"src": "7170:14:19"
															},
															"nativeSrc": "7167:34:19",
															"nodeType": "YulIf",
															"src": "7167:34:19"
														},
														{
															"nativeSrc": "7210:32:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7210:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7224:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7224:9:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7235:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7235:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7220:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7220:3:19"
																},
																"nativeSrc": "7220:22:19",
																"nodeType": "YulFunctionCall",
																"src": "7220:22:19"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "7214:2:19",
																	"nodeType": "YulTypedName",
																	"src": "7214:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7290:16:19",
																"nodeType": "YulBlock",
																"src": "7290:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7299:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7299:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7302:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7302:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7292:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7292:6:19"
																			},
																			"nativeSrc": "7292:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7292:12:19"
																		},
																		"nativeSrc": "7292:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7292:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "7269:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "7269:2:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:19",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7265:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7265:3:19"
																				},
																				"nativeSrc": "7265:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7265:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7280:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7280:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7261:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7261:3:19"
																		},
																		"nativeSrc": "7261:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7261:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7254:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7254:6:19"
																},
																"nativeSrc": "7254:35:19",
																"nodeType": "YulFunctionCall",
																"src": "7254:35:19"
															},
															"nativeSrc": "7251:55:19",
															"nodeType": "YulIf",
															"src": "7251:55:19"
														},
														{
															"nativeSrc": "7315:19:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "7331:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7331:2:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7325:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7325:5:19"
																},
																"nativeSrc": "7325:9:19",
																"nodeType": "YulFunctionCall",
																"src": "7325:9:19"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "7319:2:19",
																	"nodeType": "YulTypedName",
																	"src": "7319:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7357:22:19",
																"nodeType": "YulBlock",
																"src": "7357:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7359:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7359:16:19"
																			},
																			"nativeSrc": "7359:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7359:18:19"
																		},
																		"nativeSrc": "7359:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7359:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "7349:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7349:2:19"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "7353:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7353:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7346:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7346:2:19"
																},
																"nativeSrc": "7346:10:19",
																"nodeType": "YulFunctionCall",
																"src": "7346:10:19"
															},
															"nativeSrc": "7343:36:19",
															"nodeType": "YulIf",
															"src": "7343:36:19"
														},
														{
															"nativeSrc": "7388:20:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7388:20:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7402:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7402:1:19",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "7405:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7405:2:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "7398:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7398:3:19"
																},
																"nativeSrc": "7398:10:19",
																"nodeType": "YulFunctionCall",
																"src": "7398:10:19"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "7392:2:19",
																	"nodeType": "YulTypedName",
																	"src": "7392:2:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7417:39:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7417:39:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nativeSrc": "7448:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7448:2:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7452:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7452:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7444:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:19"
																		},
																		"nativeSrc": "7444:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:11:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7428:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "7428:15:19"
																},
																"nativeSrc": "7428:28:19",
																"nodeType": "YulFunctionCall",
																"src": "7428:28:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7421:3:19",
																	"nodeType": "YulTypedName",
																	"src": "7421:3:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7465:16:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7465:16:19",
															"value": {
																"name": "dst",
																"nativeSrc": "7478:3:19",
																"nodeType": "YulIdentifier",
																"src": "7478:3:19"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "7469:5:19",
																	"nodeType": "YulTypedName",
																	"src": "7469:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7497:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7497:3:19"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "7502:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7502:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7490:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7490:6:19"
																},
																"nativeSrc": "7490:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7490:15:19"
															},
															"nativeSrc": "7490:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7490:15:19"
														},
														{
															"nativeSrc": "7514:19:19",
															"nodeType": "YulAssignment",
															"src": "7514:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7525:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7525:3:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7530:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7530:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7521:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7521:3:19"
																},
																"nativeSrc": "7521:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7521:12:19"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7514:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7514:3:19"
																}
															]
														},
														{
															"nativeSrc": "7542:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7542:34:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "7564:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7564:2:19"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "7568:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7568:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7560:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:19"
																		},
																		"nativeSrc": "7560:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7560:11:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7573:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7573:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7556:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:19"
																},
																"nativeSrc": "7556:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7556:20:19"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7546:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7546:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7608:16:19",
																"nodeType": "YulBlock",
																"src": "7608:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7617:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7617:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7620:1:19",
																					"nodeType": "YulLiteral",
																					"src": "7620:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7610:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7610:6:19"
																			},
																			"nativeSrc": "7610:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7610:12:19"
																		},
																		"nativeSrc": "7610:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7610:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7591:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:19"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7599:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "7599:7:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7588:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7588:2:19"
																},
																"nativeSrc": "7588:19:19",
																"nodeType": "YulFunctionCall",
																"src": "7588:19:19"
															},
															"nativeSrc": "7585:39:19",
															"nodeType": "YulIf",
															"src": "7585:39:19"
														},
														{
															"nativeSrc": "7633:22:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7633:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "7648:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7648:2:19"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7652:2:19",
																		"nodeType": "YulIdentifier",
																		"src": "7652:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7644:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7644:3:19"
																},
																"nativeSrc": "7644:11:19",
																"nodeType": "YulFunctionCall",
																"src": "7644:11:19"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "7637:3:19",
																	"nodeType": "YulTypedName",
																	"src": "7637:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7720:1159:19",
																"nodeType": "YulBlock",
																"src": "7720:1159:19",
																"statements": [
																	{
																		"nativeSrc": "7734:29:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7734:29:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7759:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7759:3:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7753:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7753:5:19"
																			},
																			"nativeSrc": "7753:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7753:10:19"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "7738:11:19",
																				"nodeType": "YulTypedName",
																				"src": "7738:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7799:16:19",
																			"nodeType": "YulBlock",
																			"src": "7799:16:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7808:1:19",
																								"nodeType": "YulLiteral",
																								"src": "7808:1:19",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7811:1:19",
																								"nodeType": "YulLiteral",
																								"src": "7811:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7801:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "7801:6:19"
																						},
																						"nativeSrc": "7801:12:19",
																						"nodeType": "YulFunctionCall",
																						"src": "7801:12:19"
																					},
																					"nativeSrc": "7801:12:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "7801:12:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "7782:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "7782:11:19"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "7795:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "7795:2:19"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7779:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "7779:2:19"
																			},
																			"nativeSrc": "7779:19:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7779:19:19"
																		},
																		"nativeSrc": "7776:39:19",
																		"nodeType": "YulIf",
																		"src": "7776:39:19"
																	},
																	{
																		"nativeSrc": "7828:30:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7828:30:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "_3",
																					"nativeSrc": "7842:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "7842:2:19"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "7846:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "7846:11:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7838:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7838:3:19"
																			},
																			"nativeSrc": "7838:20:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7838:20:19"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nativeSrc": "7832:2:19",
																				"nodeType": "YulTypedName",
																				"src": "7832:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7871:17:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7871:17:19",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7885:2:19",
																					"nodeType": "YulLiteral",
																					"src": "7885:2:19",
																					"type": "",
																					"value": "31"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "7881:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7881:3:19"
																			},
																			"nativeSrc": "7881:7:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7881:7:19"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nativeSrc": "7875:2:19",
																				"nodeType": "YulTypedName",
																				"src": "7875:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7941:16:19",
																			"nodeType": "YulBlock",
																			"src": "7941:16:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7950:1:19",
																								"nodeType": "YulLiteral",
																								"src": "7950:1:19",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7953:1:19",
																								"nodeType": "YulLiteral",
																								"src": "7953:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7943:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "7943:6:19"
																						},
																						"nativeSrc": "7943:12:19",
																						"nodeType": "YulFunctionCall",
																						"src": "7943:12:19"
																					},
																					"nativeSrc": "7943:12:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "7943:12:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "dataEnd",
																									"nativeSrc": "7916:7:19",
																									"nodeType": "YulIdentifier",
																									"src": "7916:7:19"
																								},
																								{
																									"name": "_6",
																									"nativeSrc": "7925:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "7925:2:19"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "7912:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "7912:3:19"
																							},
																							"nativeSrc": "7912:16:19",
																							"nodeType": "YulFunctionCall",
																							"src": "7912:16:19"
																						},
																						{
																							"name": "_7",
																							"nativeSrc": "7930:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "7930:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7908:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "7908:3:19"
																					},
																					"nativeSrc": "7908:25:19",
																					"nodeType": "YulFunctionCall",
																					"src": "7908:25:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7935:4:19",
																					"nodeType": "YulLiteral",
																					"src": "7935:4:19",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nativeSrc": "7904:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7904:3:19"
																			},
																			"nativeSrc": "7904:36:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7904:36:19"
																		},
																		"nativeSrc": "7901:56:19",
																		"nodeType": "YulIf",
																		"src": "7901:56:19"
																	},
																	{
																		"nativeSrc": "7970:35:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7970:35:19",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_2291",
																				"nativeSrc": "7983:20:19",
																				"nodeType": "YulIdentifier",
																				"src": "7983:20:19"
																			},
																			"nativeSrc": "7983:22:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7983:22:19"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "7974:5:19",
																				"nodeType": "YulTypedName",
																				"src": "7974:5:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "8025:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8025:5:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "8042:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8042:2:19"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "8046:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8046:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8038:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8038:3:19"
																							},
																							"nativeSrc": "8038:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8038:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8032:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "8032:5:19"
																					},
																					"nativeSrc": "8032:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8032:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8018:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8018:6:19"
																			},
																			"nativeSrc": "8018:33:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8018:33:19"
																		},
																		"nativeSrc": "8018:33:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8018:33:19"
																	},
																	{
																		"nativeSrc": "8064:12:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8064:12:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8074:2:19",
																			"nodeType": "YulLiteral",
																			"src": "8074:2:19",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nativeSrc": "8068:2:19",
																				"nodeType": "YulTypedName",
																				"src": "8068:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8089:34:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8089:34:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_6",
																							"nativeSrc": "8115:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8115:2:19"
																						},
																						{
																							"name": "_8",
																							"nativeSrc": "8119:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8119:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8111:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8111:3:19"
																					},
																					"nativeSrc": "8111:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8111:11:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8105:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8105:5:19"
																			},
																			"nativeSrc": "8105:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8105:18:19"
																		},
																		"variables": [
																			{
																				"name": "offset_1",
																				"nativeSrc": "8093:8:19",
																				"nodeType": "YulTypedName",
																				"src": "8093:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8156:16:19",
																			"nodeType": "YulBlock",
																			"src": "8156:16:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8165:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8165:1:19",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8168:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8168:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8158:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "8158:6:19"
																						},
																						"nativeSrc": "8158:12:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8158:12:19"
																					},
																					"nativeSrc": "8158:12:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "8158:12:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "offset_1",
																					"nativeSrc": "8142:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "8142:8:19"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "8152:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "8152:2:19"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8139:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "8139:2:19"
																			},
																			"nativeSrc": "8139:16:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8139:16:19"
																		},
																		"nativeSrc": "8136:36:19",
																		"nodeType": "YulIf",
																		"src": "8136:36:19"
																	},
																	{
																		"nativeSrc": "8185:27:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8185:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "_6",
																					"nativeSrc": "8199:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "8199:2:19"
																				},
																				{
																					"name": "offset_1",
																					"nativeSrc": "8203:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "8203:8:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8195:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8195:3:19"
																			},
																			"nativeSrc": "8195:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8195:17:19"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nativeSrc": "8189:2:19",
																				"nodeType": "YulTypedName",
																				"src": "8189:2:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8262:16:19",
																			"nodeType": "YulBlock",
																			"src": "8262:16:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8271:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8271:1:19",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8274:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8274:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8264:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "8264:6:19"
																						},
																						"nativeSrc": "8264:12:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8264:12:19"
																					},
																					"nativeSrc": "8264:12:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "8264:12:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_9",
																									"nativeSrc": "8243:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8243:2:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8247:2:19",
																									"nodeType": "YulLiteral",
																									"src": "8247:2:19",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8239:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8239:3:19"
																							},
																							"nativeSrc": "8239:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8239:11:19"
																						},
																						{
																							"name": "dataEnd",
																							"nativeSrc": "8252:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "8252:7:19"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nativeSrc": "8235:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8235:3:19"
																					},
																					"nativeSrc": "8235:25:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8235:25:19"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "8228:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8228:6:19"
																			},
																			"nativeSrc": "8228:33:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8228:33:19"
																		},
																		"nativeSrc": "8225:53:19",
																		"nodeType": "YulIf",
																		"src": "8225:53:19"
																	},
																	{
																		"nativeSrc": "8291:29:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8291:29:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_9",
																							"nativeSrc": "8312:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8312:2:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "8316:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8316:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8308:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8308:3:19"
																					},
																					"nativeSrc": "8308:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8308:11:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8302:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8302:5:19"
																			},
																			"nativeSrc": "8302:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8302:18:19"
																		},
																		"variables": [
																			{
																				"name": "_10",
																				"nativeSrc": "8295:3:19",
																				"nodeType": "YulTypedName",
																				"src": "8295:3:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8348:22:19",
																			"nodeType": "YulBlock",
																			"src": "8348:22:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x41",
																							"nativeSrc": "8350:16:19",
																							"nodeType": "YulIdentifier",
																							"src": "8350:16:19"
																						},
																						"nativeSrc": "8350:18:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8350:18:19"
																					},
																					"nativeSrc": "8350:18:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "8350:18:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "_10",
																					"nativeSrc": "8339:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8339:3:19"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "8344:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "8344:2:19"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8336:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "8336:2:19"
																			},
																			"nativeSrc": "8336:11:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8336:11:19"
																		},
																		"nativeSrc": "8333:37:19",
																		"nodeType": "YulIf",
																		"src": "8333:37:19"
																	},
																	{
																		"nativeSrc": "8383:62:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8383:62:19",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_10",
																											"nativeSrc": "8424:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "8424:3:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8429:4:19",
																											"nodeType": "YulLiteral",
																											"src": "8429:4:19",
																											"type": "",
																											"value": "0x1f"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "8420:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "8420:3:19"
																									},
																									"nativeSrc": "8420:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "8420:14:19"
																								},
																								{
																									"name": "_7",
																									"nativeSrc": "8436:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8436:2:19"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "8416:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8416:3:19"
																							},
																							"nativeSrc": "8416:23:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8416:23:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "8441:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8441:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8412:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8412:3:19"
																					},
																					"nativeSrc": "8412:32:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8412:32:19"
																				}
																			],
																			"functionName": {
																				"name": "allocate_memory",
																				"nativeSrc": "8396:15:19",
																				"nodeType": "YulIdentifier",
																				"src": "8396:15:19"
																			},
																			"nativeSrc": "8396:49:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8396:49:19"
																		},
																		"variables": [
																			{
																				"name": "array",
																				"nativeSrc": "8387:5:19",
																				"nodeType": "YulTypedName",
																				"src": "8387:5:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "8465:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8465:5:19"
																				},
																				{
																					"name": "_10",
																					"nativeSrc": "8472:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8472:3:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8458:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8458:6:19"
																			},
																			"nativeSrc": "8458:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8458:18:19"
																		},
																		"nativeSrc": "8458:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8458:18:19"
																	},
																	{
																		"body": {
																			"nativeSrc": "8527:16:19",
																			"nodeType": "YulBlock",
																			"src": "8527:16:19",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8536:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8536:1:19",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8539:1:19",
																								"nodeType": "YulLiteral",
																								"src": "8539:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8529:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "8529:6:19"
																						},
																						"nativeSrc": "8529:12:19",
																						"nodeType": "YulFunctionCall",
																						"src": "8529:12:19"
																					},
																					"nativeSrc": "8529:12:19",
																					"nodeType": "YulExpressionStatement",
																					"src": "8529:12:19"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_9",
																									"nativeSrc": "8503:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8503:2:19"
																								},
																								{
																									"name": "_10",
																									"nativeSrc": "8507:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "8507:3:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8499:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8499:3:19"
																							},
																							"nativeSrc": "8499:12:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8499:12:19"
																						},
																						{
																							"name": "_8",
																							"nativeSrc": "8513:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8513:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8495:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8495:3:19"
																					},
																					"nativeSrc": "8495:21:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8495:21:19"
																				},
																				{
																					"name": "dataEnd",
																					"nativeSrc": "8518:7:19",
																					"nodeType": "YulIdentifier",
																					"src": "8518:7:19"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8492:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "8492:2:19"
																			},
																			"nativeSrc": "8492:34:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8492:34:19"
																		},
																		"nativeSrc": "8489:54:19",
																		"nodeType": "YulIf",
																		"src": "8489:54:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_9",
																							"nativeSrc": "8595:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8595:2:19"
																						},
																						{
																							"name": "_8",
																							"nativeSrc": "8599:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8599:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8591:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8591:3:19"
																					},
																					"nativeSrc": "8591:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8591:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "array",
																							"nativeSrc": "8608:5:19",
																							"nodeType": "YulIdentifier",
																							"src": "8608:5:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "8615:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8615:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8604:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8604:3:19"
																					},
																					"nativeSrc": "8604:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8604:14:19"
																				},
																				{
																					"name": "_10",
																					"nativeSrc": "8620:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8620:3:19"
																				}
																			],
																			"functionName": {
																				"name": "copy_memory_to_memory_with_cleanup",
																				"nativeSrc": "8556:34:19",
																				"nodeType": "YulIdentifier",
																				"src": "8556:34:19"
																			},
																			"nativeSrc": "8556:68:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8556:68:19"
																		},
																		"nativeSrc": "8556:68:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8556:68:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "8648:5:19",
																							"nodeType": "YulIdentifier",
																							"src": "8648:5:19"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "8655:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8655:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8644:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8644:3:19"
																					},
																					"nativeSrc": "8644:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8644:14:19"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "8660:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8660:5:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8637:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8637:6:19"
																			},
																			"nativeSrc": "8637:29:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8637:29:19"
																		},
																		"nativeSrc": "8637:29:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8637:29:19"
																	},
																	{
																		"nativeSrc": "8679:13:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8679:13:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8690:2:19",
																			"nodeType": "YulLiteral",
																			"src": "8690:2:19",
																			"type": "",
																			"value": "96"
																		},
																		"variables": [
																			{
																				"name": "_11",
																				"nativeSrc": "8683:3:19",
																				"nodeType": "YulTypedName",
																				"src": "8683:3:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "8716:5:19",
																							"nodeType": "YulIdentifier",
																							"src": "8716:5:19"
																						},
																						{
																							"name": "_8",
																							"nativeSrc": "8723:2:19",
																							"nodeType": "YulIdentifier",
																							"src": "8723:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8712:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8712:3:19"
																					},
																					"nativeSrc": "8712:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8712:14:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "8738:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8738:2:19"
																								},
																								{
																									"name": "_11",
																									"nativeSrc": "8742:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "8742:3:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8734:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8734:3:19"
																							},
																							"nativeSrc": "8734:12:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8734:12:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8728:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "8728:5:19"
																					},
																					"nativeSrc": "8728:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8728:19:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8705:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8705:6:19"
																			},
																			"nativeSrc": "8705:43:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:43:19"
																		},
																		"nativeSrc": "8705:43:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:43:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "8772:5:19",
																							"nodeType": "YulIdentifier",
																							"src": "8772:5:19"
																						},
																						{
																							"name": "_11",
																							"nativeSrc": "8779:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "8779:3:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8768:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "8768:3:19"
																					},
																					"nativeSrc": "8768:15:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8768:15:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "8795:2:19",
																									"nodeType": "YulIdentifier",
																									"src": "8795:2:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8799:4:19",
																									"nodeType": "YulLiteral",
																									"src": "8799:4:19",
																									"type": "",
																									"value": "0x80"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8791:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8791:3:19"
																							},
																							"nativeSrc": "8791:13:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8791:13:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8785:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "8785:5:19"
																					},
																					"nativeSrc": "8785:20:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8785:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8761:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8761:6:19"
																			},
																			"nativeSrc": "8761:45:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8761:45:19"
																		},
																		"nativeSrc": "8761:45:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8761:45:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8826:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:19"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "8831:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8831:5:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8819:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8819:6:19"
																			},
																			"nativeSrc": "8819:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8819:18:19"
																		},
																		"nativeSrc": "8819:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8819:18:19"
																	},
																	{
																		"nativeSrc": "8850:19:19",
																		"nodeType": "YulAssignment",
																		"src": "8850:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8861:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8861:3:19"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "8866:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "8866:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8857:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8857:3:19"
																			},
																			"nativeSrc": "8857:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8857:12:19"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8850:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8850:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7675:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7675:3:19"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7680:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7680:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7672:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7672:2:19"
																},
																"nativeSrc": "7672:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7672:15:19"
															},
															"nativeSrc": "7664:1215:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7688:23:19",
																"nodeType": "YulBlock",
																"src": "7688:23:19",
																"statements": [
																	{
																		"nativeSrc": "7690:19:19",
																		"nodeType": "YulAssignment",
																		"src": "7690:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7701:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:19"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7706:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "7706:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7697:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7697:3:19"
																			},
																			"nativeSrc": "7697:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7697:12:19"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7690:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7690:3:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7668:3:19",
																"nodeType": "YulBlock",
																"src": "7668:3:19",
																"statements": []
															},
															"src": "7664:1215:19"
														},
														{
															"nativeSrc": "8888:15:19",
															"nodeType": "YulAssignment",
															"src": "8888:15:19",
															"value": {
																"name": "dst_1",
																"nativeSrc": "8898:5:19",
																"nodeType": "YulIdentifier",
																"src": "8898:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8888:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "6870:2039:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6965:9:19",
														"nodeType": "YulTypedName",
														"src": "6965:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6976:7:19",
														"nodeType": "YulTypedName",
														"src": "6976:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6988:6:19",
														"nodeType": "YulTypedName",
														"src": "6988:6:19",
														"type": ""
													}
												],
												"src": "6870:2039:19"
											},
											{
												"body": {
													"nativeSrc": "8946:95:19",
													"nodeType": "YulBlock",
													"src": "8946:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8963:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8963:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8970:3:19",
																				"nodeType": "YulLiteral",
																				"src": "8970:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8975:10:19",
																				"nodeType": "YulLiteral",
																				"src": "8975:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8966:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:19"
																		},
																		"nativeSrc": "8966:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8966:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8956:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8956:6:19"
																},
																"nativeSrc": "8956:31:19",
																"nodeType": "YulFunctionCall",
																"src": "8956:31:19"
															},
															"nativeSrc": "8956:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "8956:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9003:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9003:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9006:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9006:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8996:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8996:6:19"
																},
																"nativeSrc": "8996:15:19",
																"nodeType": "YulFunctionCall",
																"src": "8996:15:19"
															},
															"nativeSrc": "8996:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "8996:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9027:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9027:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9030:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9030:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9020:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:19"
																},
																"nativeSrc": "9020:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9020:15:19"
															},
															"nativeSrc": "9020:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9020:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8914:127:19",
												"nodeType": "YulFunctionDefinition",
												"src": "8914:127:19"
											},
											{
												"body": {
													"nativeSrc": "9095:79:19",
													"nodeType": "YulBlock",
													"src": "9095:79:19",
													"statements": [
														{
															"nativeSrc": "9105:17:19",
															"nodeType": "YulAssignment",
															"src": "9105:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9117:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9117:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9120:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9120:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9113:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9113:3:19"
																},
																"nativeSrc": "9113:9:19",
																"nodeType": "YulFunctionCall",
																"src": "9113:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9105:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9105:4:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9146:22:19",
																"nodeType": "YulBlock",
																"src": "9146:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9148:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "9148:16:19"
																			},
																			"nativeSrc": "9148:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9148:18:19"
																		},
																		"nativeSrc": "9148:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9148:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9137:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9137:4:19"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9143:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9143:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9134:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9134:2:19"
																},
																"nativeSrc": "9134:11:19",
																"nodeType": "YulFunctionCall",
																"src": "9134:11:19"
															},
															"nativeSrc": "9131:37:19",
															"nodeType": "YulIf",
															"src": "9131:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9046:128:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9077:1:19",
														"nodeType": "YulTypedName",
														"src": "9077:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9080:1:19",
														"nodeType": "YulTypedName",
														"src": "9080:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9086:4:19",
														"nodeType": "YulTypedName",
														"src": "9086:4:19",
														"type": ""
													}
												],
												"src": "9046:128:19"
											},
											{
												"body": {
													"nativeSrc": "9353:171:19",
													"nodeType": "YulBlock",
													"src": "9353:171:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9370:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9370:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9381:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9381:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9363:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9363:6:19"
																},
																"nativeSrc": "9363:21:19",
																"nodeType": "YulFunctionCall",
																"src": "9363:21:19"
															},
															"nativeSrc": "9363:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "9363:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9404:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9404:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9415:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9415:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9400:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9400:3:19"
																		},
																		"nativeSrc": "9400:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9400:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9420:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9420:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9393:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9393:6:19"
																},
																"nativeSrc": "9393:30:19",
																"nodeType": "YulFunctionCall",
																"src": "9393:30:19"
															},
															"nativeSrc": "9393:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "9393:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9443:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9454:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9454:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9439:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:19"
																		},
																		"nativeSrc": "9439:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:18:19"
																	},
																	{
																		"hexValue": "506c65617365204c69737420466972737420212121",
																		"kind": "string",
																		"nativeSrc": "9459:23:19",
																		"nodeType": "YulLiteral",
																		"src": "9459:23:19",
																		"type": "",
																		"value": "Please List First !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9432:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:19"
																},
																"nativeSrc": "9432:51:19",
																"nodeType": "YulFunctionCall",
																"src": "9432:51:19"
															},
															"nativeSrc": "9432:51:19",
															"nodeType": "YulExpressionStatement",
															"src": "9432:51:19"
														},
														{
															"nativeSrc": "9492:26:19",
															"nodeType": "YulAssignment",
															"src": "9492:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9504:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9504:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9515:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9500:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9500:3:19"
																},
																"nativeSrc": "9500:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9500:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9492:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9492:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f75c08e287e700392b7ff67e1f3d4c88865d2714af5be39fa99255b28de970c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9179:345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9330:9:19",
														"nodeType": "YulTypedName",
														"src": "9330:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9344:4:19",
														"nodeType": "YulTypedName",
														"src": "9344:4:19",
														"type": ""
													}
												],
												"src": "9179:345:19"
											},
											{
												"body": {
													"nativeSrc": "9686:218:19",
													"nodeType": "YulBlock",
													"src": "9686:218:19",
													"statements": [
														{
															"nativeSrc": "9696:26:19",
															"nodeType": "YulAssignment",
															"src": "9696:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9708:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9708:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9704:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:19"
																},
																"nativeSrc": "9704:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9704:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9696:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9696:4:19"
																}
															]
														},
														{
															"nativeSrc": "9731:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9731:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9749:3:19",
																				"nodeType": "YulLiteral",
																				"src": "9749:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9754:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9754:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9745:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9745:3:19"
																		},
																		"nativeSrc": "9745:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9745:11:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9758:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9758:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9741:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9741:3:19"
																},
																"nativeSrc": "9741:19:19",
																"nodeType": "YulFunctionCall",
																"src": "9741:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9735:2:19",
																	"nodeType": "YulTypedName",
																	"src": "9735:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9776:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9776:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9791:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9791:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9799:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "9799:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9787:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9787:3:19"
																		},
																		"nativeSrc": "9787:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9787:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9769:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9769:6:19"
																},
																"nativeSrc": "9769:34:19",
																"nodeType": "YulFunctionCall",
																"src": "9769:34:19"
															},
															"nativeSrc": "9769:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "9769:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9823:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9823:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9834:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9834:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9819:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9819:3:19"
																		},
																		"nativeSrc": "9819:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9819:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9843:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9843:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9851:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "9851:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9839:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9839:3:19"
																		},
																		"nativeSrc": "9839:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9839:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9812:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9812:6:19"
																},
																"nativeSrc": "9812:43:19",
																"nodeType": "YulFunctionCall",
																"src": "9812:43:19"
															},
															"nativeSrc": "9812:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "9812:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9875:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9875:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9886:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9886:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9871:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9871:3:19"
																		},
																		"nativeSrc": "9871:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9871:18:19"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9891:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9891:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9864:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9864:6:19"
																},
																"nativeSrc": "9864:34:19",
																"nodeType": "YulFunctionCall",
																"src": "9864:34:19"
															},
															"nativeSrc": "9864:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "9864:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9529:375:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9639:9:19",
														"nodeType": "YulTypedName",
														"src": "9639:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9650:6:19",
														"nodeType": "YulTypedName",
														"src": "9650:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9658:6:19",
														"nodeType": "YulTypedName",
														"src": "9658:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9666:6:19",
														"nodeType": "YulTypedName",
														"src": "9666:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9677:4:19",
														"nodeType": "YulTypedName",
														"src": "9677:4:19",
														"type": ""
													}
												],
												"src": "9529:375:19"
											},
											{
												"body": {
													"nativeSrc": "10094:262:19",
													"nodeType": "YulBlock",
													"src": "10094:262:19",
													"statements": [
														{
															"nativeSrc": "10104:27:19",
															"nodeType": "YulAssignment",
															"src": "10104:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10116:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10116:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10127:3:19",
																		"nodeType": "YulLiteral",
																		"src": "10127:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10112:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10112:3:19"
																},
																"nativeSrc": "10112:19:19",
																"nodeType": "YulFunctionCall",
																"src": "10112:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10104:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10104:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10147:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10147:9:19"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10158:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10158:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10140:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10140:6:19"
																},
																"nativeSrc": "10140:25:19",
																"nodeType": "YulFunctionCall",
																"src": "10140:25:19"
															},
															"nativeSrc": "10140:25:19",
															"nodeType": "YulExpressionStatement",
															"src": "10140:25:19"
														},
														{
															"nativeSrc": "10174:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10174:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10192:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10192:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10197:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10197:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10188:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10188:3:19"
																		},
																		"nativeSrc": "10188:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10188:11:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10201:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10201:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10184:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10184:3:19"
																},
																"nativeSrc": "10184:19:19",
																"nodeType": "YulFunctionCall",
																"src": "10184:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10178:2:19",
																	"nodeType": "YulTypedName",
																	"src": "10178:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10223:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10223:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10234:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10234:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10219:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10219:3:19"
																		},
																		"nativeSrc": "10219:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10219:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10243:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10243:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10251:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "10251:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10239:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10239:3:19"
																		},
																		"nativeSrc": "10239:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10239:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10212:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10212:6:19"
																},
																"nativeSrc": "10212:43:19",
																"nodeType": "YulFunctionCall",
																"src": "10212:43:19"
															},
															"nativeSrc": "10212:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "10212:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10275:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10275:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10286:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10286:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10271:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10271:3:19"
																		},
																		"nativeSrc": "10271:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10271:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "10295:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10295:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10303:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "10303:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10291:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10291:3:19"
																		},
																		"nativeSrc": "10291:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10291:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10264:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10264:6:19"
																},
																"nativeSrc": "10264:43:19",
																"nodeType": "YulFunctionCall",
																"src": "10264:43:19"
															},
															"nativeSrc": "10264:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "10264:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10327:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10327:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10338:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10338:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10323:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10323:3:19"
																		},
																		"nativeSrc": "10323:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10323:18:19"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10343:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10343:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10316:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10316:6:19"
																},
																"nativeSrc": "10316:34:19",
																"nodeType": "YulFunctionCall",
																"src": "10316:34:19"
															},
															"nativeSrc": "10316:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "10316:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9909:447:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10039:9:19",
														"nodeType": "YulTypedName",
														"src": "10039:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10050:6:19",
														"nodeType": "YulTypedName",
														"src": "10050:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10058:6:19",
														"nodeType": "YulTypedName",
														"src": "10058:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10066:6:19",
														"nodeType": "YulTypedName",
														"src": "10066:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10074:6:19",
														"nodeType": "YulTypedName",
														"src": "10074:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10085:4:19",
														"nodeType": "YulTypedName",
														"src": "10085:4:19",
														"type": ""
													}
												],
												"src": "9909:447:19"
											},
											{
												"body": {
													"nativeSrc": "10535:225:19",
													"nodeType": "YulBlock",
													"src": "10535:225:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10552:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10552:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10563:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10545:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10545:6:19"
																},
																"nativeSrc": "10545:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10545:21:19"
															},
															"nativeSrc": "10545:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10545:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10586:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10586:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10597:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10597:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10582:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10582:3:19"
																		},
																		"nativeSrc": "10582:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10582:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10602:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10602:2:19",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10575:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10575:6:19"
																},
																"nativeSrc": "10575:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10575:30:19"
															},
															"nativeSrc": "10575:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "10575:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10625:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10625:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10636:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10636:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10621:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10621:3:19"
																		},
																		"nativeSrc": "10621:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10621:18:19"
																	},
																	{
																		"hexValue": "416e206f666665722063616e6e6f742062757920746869732053656c6c657220",
																		"kind": "string",
																		"nativeSrc": "10641:34:19",
																		"nodeType": "YulLiteral",
																		"src": "10641:34:19",
																		"type": "",
																		"value": "An offer cannot buy this Seller "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10614:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10614:6:19"
																},
																"nativeSrc": "10614:62:19",
																"nodeType": "YulFunctionCall",
																"src": "10614:62:19"
															},
															"nativeSrc": "10614:62:19",
															"nodeType": "YulExpressionStatement",
															"src": "10614:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10696:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10696:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10707:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10707:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10692:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10692:3:19"
																		},
																		"nativeSrc": "10692:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10692:18:19"
																	},
																	{
																		"hexValue": "212121",
																		"kind": "string",
																		"nativeSrc": "10712:5:19",
																		"nodeType": "YulLiteral",
																		"src": "10712:5:19",
																		"type": "",
																		"value": "!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10685:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10685:6:19"
																},
																"nativeSrc": "10685:33:19",
																"nodeType": "YulFunctionCall",
																"src": "10685:33:19"
															},
															"nativeSrc": "10685:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "10685:33:19"
														},
														{
															"nativeSrc": "10727:27:19",
															"nodeType": "YulAssignment",
															"src": "10727:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10739:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10739:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10750:3:19",
																		"nodeType": "YulLiteral",
																		"src": "10750:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10735:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10735:3:19"
																},
																"nativeSrc": "10735:19:19",
																"nodeType": "YulFunctionCall",
																"src": "10735:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10727:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10727:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e74a7153f5af84cae9b57a96215644a7c5de60057770127769748e3c599d5d76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10361:399:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10512:9:19",
														"nodeType": "YulTypedName",
														"src": "10512:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10526:4:19",
														"nodeType": "YulTypedName",
														"src": "10526:4:19",
														"type": ""
													}
												],
												"src": "10361:399:19"
											},
											{
												"body": {
													"nativeSrc": "10939:232:19",
													"nodeType": "YulBlock",
													"src": "10939:232:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10956:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10956:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10967:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10967:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10949:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10949:6:19"
																},
																"nativeSrc": "10949:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10949:21:19"
															},
															"nativeSrc": "10949:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10949:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10990:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10990:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11001:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11001:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10986:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10986:3:19"
																		},
																		"nativeSrc": "10986:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10986:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11006:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11006:2:19",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10979:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10979:6:19"
																},
																"nativeSrc": "10979:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10979:30:19"
															},
															"nativeSrc": "10979:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "10979:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11029:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11029:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11040:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11040:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11025:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11025:3:19"
																		},
																		"nativeSrc": "11025:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11025:18:19"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67",
																		"kind": "string",
																		"nativeSrc": "11045:34:19",
																		"nodeType": "YulLiteral",
																		"src": "11045:34:19",
																		"type": "",
																		"value": "Not enough ether to cover asking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11018:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11018:6:19"
																},
																"nativeSrc": "11018:62:19",
																"nodeType": "YulFunctionCall",
																"src": "11018:62:19"
															},
															"nativeSrc": "11018:62:19",
															"nodeType": "YulExpressionStatement",
															"src": "11018:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11100:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11100:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11111:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11111:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11096:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11096:3:19"
																		},
																		"nativeSrc": "11096:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11096:18:19"
																	},
																	{
																		"hexValue": "20707269636520212121",
																		"kind": "string",
																		"nativeSrc": "11116:12:19",
																		"nodeType": "YulLiteral",
																		"src": "11116:12:19",
																		"type": "",
																		"value": " price !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11089:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:19"
																},
																"nativeSrc": "11089:40:19",
																"nodeType": "YulFunctionCall",
																"src": "11089:40:19"
															},
															"nativeSrc": "11089:40:19",
															"nodeType": "YulExpressionStatement",
															"src": "11089:40:19"
														},
														{
															"nativeSrc": "11138:27:19",
															"nodeType": "YulAssignment",
															"src": "11138:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11150:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11150:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11161:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11161:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11146:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11146:3:19"
																},
																"nativeSrc": "11146:19:19",
																"nodeType": "YulFunctionCall",
																"src": "11146:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11138:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11138:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebd79ccf5ff56656016c69bd918540ff187a66241fdadbd2a4920e6dedce66a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10765:406:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10916:9:19",
														"nodeType": "YulTypedName",
														"src": "10916:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10930:4:19",
														"nodeType": "YulTypedName",
														"src": "10930:4:19",
														"type": ""
													}
												],
												"src": "10765:406:19"
											},
											{
												"body": {
													"nativeSrc": "11361:271:19",
													"nodeType": "YulBlock",
													"src": "11361:271:19",
													"statements": [
														{
															"nativeSrc": "11371:27:19",
															"nodeType": "YulAssignment",
															"src": "11371:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11383:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11383:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11394:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11394:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11379:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11379:3:19"
																},
																"nativeSrc": "11379:19:19",
																"nodeType": "YulFunctionCall",
																"src": "11379:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11371:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11371:4:19"
																}
															]
														},
														{
															"nativeSrc": "11407:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11407:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11425:3:19",
																				"nodeType": "YulLiteral",
																				"src": "11425:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11430:1:19",
																				"nodeType": "YulLiteral",
																				"src": "11430:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11421:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11421:3:19"
																		},
																		"nativeSrc": "11421:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11421:11:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11434:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11434:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11417:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11417:3:19"
																},
																"nativeSrc": "11417:19:19",
																"nodeType": "YulFunctionCall",
																"src": "11417:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11411:2:19",
																	"nodeType": "YulTypedName",
																	"src": "11411:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11452:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11452:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11467:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11467:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11475:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "11475:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11463:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11463:3:19"
																		},
																		"nativeSrc": "11463:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11463:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11445:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11445:6:19"
																},
																"nativeSrc": "11445:34:19",
																"nodeType": "YulFunctionCall",
																"src": "11445:34:19"
															},
															"nativeSrc": "11445:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "11445:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11499:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11499:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11510:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11510:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11495:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11495:3:19"
																		},
																		"nativeSrc": "11495:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11495:18:19"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11515:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11515:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11488:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:19"
																},
																"nativeSrc": "11488:34:19",
																"nodeType": "YulFunctionCall",
																"src": "11488:34:19"
															},
															"nativeSrc": "11488:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "11488:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11542:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11542:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11553:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11553:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11538:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11538:3:19"
																		},
																		"nativeSrc": "11538:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11538:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "11562:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11562:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11570:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "11570:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11558:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11558:3:19"
																		},
																		"nativeSrc": "11558:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11558:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11531:6:19"
																},
																"nativeSrc": "11531:43:19",
																"nodeType": "YulFunctionCall",
																"src": "11531:43:19"
															},
															"nativeSrc": "11531:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "11531:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11594:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11594:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11605:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11605:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11590:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11590:3:19"
																		},
																		"nativeSrc": "11590:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11590:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "11614:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11614:6:19"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11622:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "11622:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11610:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:19"
																		},
																		"nativeSrc": "11610:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11610:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11583:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:19"
																},
																"nativeSrc": "11583:43:19",
																"nodeType": "YulFunctionCall",
																"src": "11583:43:19"
															},
															"nativeSrc": "11583:43:19",
															"nodeType": "YulExpressionStatement",
															"src": "11583:43:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_address__to_t_address_t_uint256_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11176:456:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11306:9:19",
														"nodeType": "YulTypedName",
														"src": "11306:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11317:6:19",
														"nodeType": "YulTypedName",
														"src": "11317:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11325:6:19",
														"nodeType": "YulTypedName",
														"src": "11325:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11333:6:19",
														"nodeType": "YulTypedName",
														"src": "11333:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11341:6:19",
														"nodeType": "YulTypedName",
														"src": "11341:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11352:4:19",
														"nodeType": "YulTypedName",
														"src": "11352:4:19",
														"type": ""
													}
												],
												"src": "11176:456:19"
											},
											{
												"body": {
													"nativeSrc": "11811:180:19",
													"nodeType": "YulBlock",
													"src": "11811:180:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11828:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11828:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11839:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11839:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11821:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11821:6:19"
																},
																"nativeSrc": "11821:21:19",
																"nodeType": "YulFunctionCall",
																"src": "11821:21:19"
															},
															"nativeSrc": "11821:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "11821:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11862:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11862:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11873:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11873:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11858:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:19"
																		},
																		"nativeSrc": "11858:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11858:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11878:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11878:2:19",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11851:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11851:6:19"
																},
																"nativeSrc": "11851:30:19",
																"nodeType": "YulFunctionCall",
																"src": "11851:30:19"
															},
															"nativeSrc": "11851:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "11851:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11901:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11901:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11912:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11912:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11897:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11897:3:19"
																		},
																		"nativeSrc": "11897:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11897:18:19"
																	},
																	{
																		"hexValue": "416c7265616479204c697374656420496e204d61726b6574706c61636521",
																		"kind": "string",
																		"nativeSrc": "11917:32:19",
																		"nodeType": "YulLiteral",
																		"src": "11917:32:19",
																		"type": "",
																		"value": "Already Listed In Marketplace!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11890:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11890:6:19"
																},
																"nativeSrc": "11890:60:19",
																"nodeType": "YulFunctionCall",
																"src": "11890:60:19"
															},
															"nativeSrc": "11890:60:19",
															"nodeType": "YulExpressionStatement",
															"src": "11890:60:19"
														},
														{
															"nativeSrc": "11959:26:19",
															"nodeType": "YulAssignment",
															"src": "11959:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11971:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11971:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11982:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11982:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11967:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11967:3:19"
																},
																"nativeSrc": "11967:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11967:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11959:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11959:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11637:354:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11788:9:19",
														"nodeType": "YulTypedName",
														"src": "11788:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11802:4:19",
														"nodeType": "YulTypedName",
														"src": "11802:4:19",
														"type": ""
													}
												],
												"src": "11637:354:19"
											},
											{
												"body": {
													"nativeSrc": "12170:178:19",
													"nodeType": "YulBlock",
													"src": "12170:178:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12187:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12187:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12198:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12198:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12180:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12180:6:19"
																},
																"nativeSrc": "12180:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12180:21:19"
															},
															"nativeSrc": "12180:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "12180:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12221:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12221:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12232:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12232:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12217:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12217:3:19"
																		},
																		"nativeSrc": "12217:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12217:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12237:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12237:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12210:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12210:6:19"
																},
																"nativeSrc": "12210:30:19",
																"nodeType": "YulFunctionCall",
																"src": "12210:30:19"
															},
															"nativeSrc": "12210:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "12210:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12260:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12260:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12271:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12271:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12256:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12256:3:19"
																		},
																		"nativeSrc": "12256:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12256:18:19"
																	},
																	{
																		"hexValue": "5072696365204d757374204265204174204c65617374203020576569",
																		"kind": "string",
																		"nativeSrc": "12276:30:19",
																		"nodeType": "YulLiteral",
																		"src": "12276:30:19",
																		"type": "",
																		"value": "Price Must Be At Least 0 Wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12249:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12249:6:19"
																},
																"nativeSrc": "12249:58:19",
																"nodeType": "YulFunctionCall",
																"src": "12249:58:19"
															},
															"nativeSrc": "12249:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "12249:58:19"
														},
														{
															"nativeSrc": "12316:26:19",
															"nodeType": "YulAssignment",
															"src": "12316:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12328:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12328:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12339:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12339:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12324:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12324:3:19"
																},
																"nativeSrc": "12324:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12324:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12316:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12316:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11996:352:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12147:9:19",
														"nodeType": "YulTypedName",
														"src": "12147:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12161:4:19",
														"nodeType": "YulTypedName",
														"src": "12161:4:19",
														"type": ""
													}
												],
												"src": "11996:352:19"
											},
											{
												"body": {
													"nativeSrc": "12527:181:19",
													"nodeType": "YulBlock",
													"src": "12527:181:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12544:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12544:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12555:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12555:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12537:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12537:6:19"
																},
																"nativeSrc": "12537:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12537:21:19"
															},
															"nativeSrc": "12537:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "12537:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12578:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12578:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12589:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12589:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12574:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12574:3:19"
																		},
																		"nativeSrc": "12574:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12574:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12594:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12594:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12567:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12567:6:19"
																},
																"nativeSrc": "12567:30:19",
																"nodeType": "YulFunctionCall",
																"src": "12567:30:19"
															},
															"nativeSrc": "12567:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "12567:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12617:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12617:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12628:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12628:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12613:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12613:3:19"
																		},
																		"nativeSrc": "12613:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12613:18:19"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12633:33:19",
																		"nodeType": "YulLiteral",
																		"src": "12633:33:19",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12606:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12606:6:19"
																},
																"nativeSrc": "12606:61:19",
																"nodeType": "YulFunctionCall",
																"src": "12606:61:19"
															},
															"nativeSrc": "12606:61:19",
															"nodeType": "YulExpressionStatement",
															"src": "12606:61:19"
														},
														{
															"nativeSrc": "12676:26:19",
															"nodeType": "YulAssignment",
															"src": "12676:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12688:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12688:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12699:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12699:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12684:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12684:3:19"
																},
																"nativeSrc": "12684:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12684:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12676:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12676:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12353:355:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12504:9:19",
														"nodeType": "YulTypedName",
														"src": "12504:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12518:4:19",
														"nodeType": "YulTypedName",
														"src": "12518:4:19",
														"type": ""
													}
												],
												"src": "12353:355:19"
											},
											{
												"body": {
													"nativeSrc": "12887:177:19",
													"nodeType": "YulBlock",
													"src": "12887:177:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12904:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12904:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12915:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12915:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12897:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12897:6:19"
																},
																"nativeSrc": "12897:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12897:21:19"
															},
															"nativeSrc": "12897:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "12897:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12938:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12938:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12949:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12949:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12934:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12934:3:19"
																		},
																		"nativeSrc": "12934:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12934:18:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12954:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12954:2:19",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12927:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12927:6:19"
																},
																"nativeSrc": "12927:30:19",
																"nodeType": "YulFunctionCall",
																"src": "12927:30:19"
															},
															"nativeSrc": "12927:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "12927:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12977:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12977:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12988:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12988:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12973:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12973:3:19"
																		},
																		"nativeSrc": "12973:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12973:18:19"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "12993:29:19",
																		"nodeType": "YulLiteral",
																		"src": "12993:29:19",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12966:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12966:6:19"
																},
																"nativeSrc": "12966:57:19",
																"nodeType": "YulFunctionCall",
																"src": "12966:57:19"
															},
															"nativeSrc": "12966:57:19",
															"nodeType": "YulExpressionStatement",
															"src": "12966:57:19"
														},
														{
															"nativeSrc": "13032:26:19",
															"nodeType": "YulAssignment",
															"src": "13032:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13044:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13044:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13055:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13055:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13040:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13040:3:19"
																},
																"nativeSrc": "13040:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13040:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13032:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13032:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12713:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12864:9:19",
														"nodeType": "YulTypedName",
														"src": "12864:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12878:4:19",
														"nodeType": "YulTypedName",
														"src": "12878:4:19",
														"type": ""
													}
												],
												"src": "12713:351:19"
											},
											{
												"body": {
													"nativeSrc": "13147:199:19",
													"nodeType": "YulBlock",
													"src": "13147:199:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "13193:16:19",
																"nodeType": "YulBlock",
																"src": "13193:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13202:1:19",
																					"nodeType": "YulLiteral",
																					"src": "13202:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13205:1:19",
																					"nodeType": "YulLiteral",
																					"src": "13205:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13195:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13195:6:19"
																			},
																			"nativeSrc": "13195:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13195:12:19"
																		},
																		"nativeSrc": "13195:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13195:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13168:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "13168:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13177:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13177:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13164:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:19"
																		},
																		"nativeSrc": "13164:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13164:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13189:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13189:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13160:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13160:3:19"
																},
																"nativeSrc": "13160:32:19",
																"nodeType": "YulFunctionCall",
																"src": "13160:32:19"
															},
															"nativeSrc": "13157:52:19",
															"nodeType": "YulIf",
															"src": "13157:52:19"
														},
														{
															"nativeSrc": "13218:29:19",
															"nodeType": "YulVariableDeclaration",
															"src": "13218:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13237:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13237:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13231:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "13231:5:19"
																},
																"nativeSrc": "13231:16:19",
																"nodeType": "YulFunctionCall",
																"src": "13231:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "13222:5:19",
																	"nodeType": "YulTypedName",
																	"src": "13222:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13300:16:19",
																"nodeType": "YulBlock",
																"src": "13300:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13309:1:19",
																					"nodeType": "YulLiteral",
																					"src": "13309:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13312:1:19",
																					"nodeType": "YulLiteral",
																					"src": "13312:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13302:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13302:6:19"
																			},
																			"nativeSrc": "13302:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13302:12:19"
																		},
																		"nativeSrc": "13302:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13302:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13269:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "13269:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "13290:5:19",
																								"nodeType": "YulIdentifier",
																								"src": "13290:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "13283:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "13283:6:19"
																						},
																						"nativeSrc": "13283:13:19",
																						"nodeType": "YulFunctionCall",
																						"src": "13283:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13276:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "13276:6:19"
																				},
																				"nativeSrc": "13276:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "13276:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13266:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "13266:2:19"
																		},
																		"nativeSrc": "13266:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13266:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13259:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13259:6:19"
																},
																"nativeSrc": "13259:40:19",
																"nodeType": "YulFunctionCall",
																"src": "13259:40:19"
															},
															"nativeSrc": "13256:60:19",
															"nodeType": "YulIf",
															"src": "13256:60:19"
														},
														{
															"nativeSrc": "13325:15:19",
															"nodeType": "YulAssignment",
															"src": "13325:15:19",
															"value": {
																"name": "value",
																"nativeSrc": "13335:5:19",
																"nodeType": "YulIdentifier",
																"src": "13335:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13325:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13325:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13069:277:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13113:9:19",
														"nodeType": "YulTypedName",
														"src": "13113:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13124:7:19",
														"nodeType": "YulTypedName",
														"src": "13124:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13136:6:19",
														"nodeType": "YulTypedName",
														"src": "13136:6:19",
														"type": ""
													}
												],
												"src": "13069:277:19"
											},
											{
												"body": {
													"nativeSrc": "13488:150:19",
													"nodeType": "YulBlock",
													"src": "13488:150:19",
													"statements": [
														{
															"nativeSrc": "13498:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "13498:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13518:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13518:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13512:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "13512:5:19"
																},
																"nativeSrc": "13512:13:19",
																"nodeType": "YulFunctionCall",
																"src": "13512:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13502:6:19",
																	"nodeType": "YulTypedName",
																	"src": "13502:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13573:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13573:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13581:4:19",
																				"nodeType": "YulLiteral",
																				"src": "13581:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13569:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13569:3:19"
																		},
																		"nativeSrc": "13569:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13569:17:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13588:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13588:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13593:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13593:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13534:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "13534:34:19"
																},
																"nativeSrc": "13534:66:19",
																"nodeType": "YulFunctionCall",
																"src": "13534:66:19"
															},
															"nativeSrc": "13534:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "13534:66:19"
														},
														{
															"nativeSrc": "13609:23:19",
															"nodeType": "YulAssignment",
															"src": "13609:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13620:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13620:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13625:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13625:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13616:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13616:3:19"
																},
																"nativeSrc": "13616:16:19",
																"nodeType": "YulFunctionCall",
																"src": "13616:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13609:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13609:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13351:287:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13464:3:19",
														"nodeType": "YulTypedName",
														"src": "13464:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13469:6:19",
														"nodeType": "YulTypedName",
														"src": "13469:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13480:3:19",
														"nodeType": "YulTypedName",
														"src": "13480:3:19",
														"type": ""
													}
												],
												"src": "13351:287:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_struct_Token(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0x60)\n        let length := mload(memberValue0)\n        mstore(add(pos, 0x60), length)\n        copy_memory_to_memory_with_cleanup(add(memberValue0, 0x20), add(pos, 128), length)\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        end := add(add(pos, and(add(length, 31), not(31))), 128)\n    }\n    function abi_encode_array_struct_ListedNftTokenId_dyn(value, pos) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let tail := add(add(pos_1, shl(5, length)), _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail, pos_1), not(31)))\n            let _2 := mload(srcPtr)\n            let _3 := 0x0120\n            let _4 := mload(_2)\n            mstore(tail, mload(_4))\n            let memberValue0 := mload(add(_4, _1))\n            let _5 := sub(shl(160, 1), 1)\n            mstore(add(tail, _1), and(memberValue0, _5))\n            let _6 := 0x40\n            mstore(add(tail, _6), and(mload(add(_4, _6)), _5))\n            let _7 := 0x60\n            mstore(add(tail, _7), mload(add(_4, _7)))\n            let _8 := 0x80\n            mstore(add(tail, _8), mload(add(_4, _8)))\n            let _9 := 0xa0\n            mstore(add(tail, _9), mload(add(_4, _9)))\n            let _10 := 0xc0\n            mstore(add(tail, _10), iszero(iszero(mload(add(_4, _10)))))\n            let memberValue0_1 := mload(add(_2, _1))\n            mstore(add(tail, 0xe0), _3)\n            let tail_1 := abi_encode_struct_Token(memberValue0_1, add(tail, _3))\n            mstore(add(tail, 0x0100), mload(add(_2, _6)))\n            tail := tail_1\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_struct_ListedNftTokenId_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_struct_ListedNftTokenId_dyn(value1, tail_1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_2291() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x80)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, _2) { revert(0, 0) }\n            let _6 := add(_3, innerOffset)\n            let _7 := not(31)\n            if slt(add(sub(dataEnd, _6), _7), 0x80) { revert(0, 0) }\n            let value := allocate_memory_2291()\n            mstore(value, mload(add(_6, _1)))\n            let _8 := 64\n            let offset_1 := mload(add(_6, _8))\n            if gt(offset_1, _2) { revert(0, 0) }\n            let _9 := add(_6, offset_1)\n            if iszero(slt(add(_9, 63), dataEnd)) { revert(0, 0) }\n            let _10 := mload(add(_9, _1))\n            if gt(_10, _2) { panic_error_0x41() }\n            let array := allocate_memory(add(and(add(_10, 0x1f), _7), _1))\n            mstore(array, _10)\n            if gt(add(add(_9, _10), _8), dataEnd) { revert(0, 0) }\n            copy_memory_to_memory_with_cleanup(add(_9, _8), add(array, _1), _10)\n            mstore(add(value, _1), array)\n            let _11 := 96\n            mstore(add(value, _8), mload(add(_6, _11)))\n            mstore(add(value, _11), mload(add(_6, 0x80)))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f75c08e287e700392b7ff67e1f3d4c88865d2714af5be39fa99255b28de970c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Please List First !!!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e74a7153f5af84cae9b57a96215644a7c5de60057770127769748e3c599d5d76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"An offer cannot buy this Seller \")\n        mstore(add(headStart, 96), \"!!!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebd79ccf5ff56656016c69bd918540ff187a66241fdadbd2a4920e6dedce66a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Not enough ether to cover asking\")\n        mstore(add(headStart, 96), \" price !!!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_address__to_t_address_t_uint256_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Already Listed In Marketplace!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price Must Be At Least 0 Wei\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6617B35D GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD6CBB202 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF33C4061 EQ PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6617B35D EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8D02F792 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD909886 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x1E903868 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x2791A4D0 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x293C6AE1 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x4E455DBE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x556F8084 EQ PUSH2 0x203 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP3 SWAP2 SWAP1 PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 SWAP1 SWAP6 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x118 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x118 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x375 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP2 AND SWAP1 DUP7 AND EQ DUP1 ISZERO PUSH2 0x350 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x363 JUMPI DUP2 PUSH2 0x35F DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x36D DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CB JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x390 JUMPI PUSH2 0x390 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3C9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3B6 PUSH2 0x160F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3AE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 ISZERO PUSH2 0x639 JUMPI PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x636 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP2 AND SWAP1 DUP9 AND EQ DUP1 ISZERO PUSH2 0x45B JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x624 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21EBE673 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x43D7CCE6 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4E7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP8 MSTORE DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH2 0x140 DUP9 ADD DUP10 MSTORE DUP1 SLOAD PUSH1 0x60 DUP1 DUP11 ADD SWAP2 DUP3 MSTORE SWAP5 DUP3 ADD SLOAD DUP5 AND PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE SWAP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP5 MSTORE DUP5 MLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 SWAP3 DUP5 ADD SWAP3 DUP3 SWAP2 DUP7 SWAP2 PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH2 0x5DF PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x61F SWAP1 PUSH2 0x18CB JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 PUSH2 0x62E DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D6 JUMP JUMPDEST POP POP JUMPDEST PUSH0 DUP3 PUSH2 0x644 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x690 PUSH2 0x160F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x688 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x90B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP2 AND SWAP1 DUP11 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x730 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8F9 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21EBE673 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x43D7CCE6 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7BC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP8 MSTORE DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH2 0x140 DUP9 ADD DUP10 MSTORE DUP1 SLOAD PUSH1 0x60 DUP1 DUP11 ADD SWAP2 DUP3 MSTORE SWAP5 DUP3 ADD SLOAD DUP5 AND PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 DUP2 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE SWAP2 DUP5 MSTORE DUP5 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP5 MSTORE DUP5 MLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 SWAP3 DUP5 ADD SWAP3 DUP3 SWAP2 DUP7 SWAP2 PUSH2 0x86E JUMPI PUSH2 0x86E PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x891 JUMPI PUSH2 0x891 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x8B4 JUMPI PUSH2 0x8B4 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x8F4 SWAP1 PUSH2 0x18CB JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 PUSH2 0x903 DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6AA JUMP JUMPDEST POP SWAP3 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0x12EC JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C65617365204C69737420466972737420212121 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 DUP4 ADD DUP1 SLOAD DUP9 MSTORE SWAP1 DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP7 DUP9 SWAP1 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SLOAD SWAP3 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xA4C SWAP3 ADDRESS SWAP3 SWAP2 PUSH1 0x4 ADD PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP7 MSTORE SWAP3 MSTORE DUP4 KECCAK256 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP5 SWAP4 POP SWAP2 SWAP1 DUP2 PUSH2 0xAC2 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 SWAP1 PUSH1 0x6 DUP2 PUSH2 0xAFA PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 PUSH2 0xB2B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP5 DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0xB77 PUSH1 0x2 PUSH2 0x1343 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD SWAP3 DUP4 MSTORE SWAP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFB0451E2371B977DB14CE8DB0BD62262E6FF8FE4B5960280928BA94E02443603 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xC08 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC13 PUSH2 0x12EC JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD CALLER SWAP2 AND SUB PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206F666665722063616E6E6F742062757920746869732053656C6C657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x212121 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 EQ PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20707269636520212121 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xD82 SWAP2 ADDRESS SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDAB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 DUP8 MSTORE PUSH1 0x5 DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP3 DUP9 MSTORE SWAP1 SWAP6 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x9AE38D93 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP2 POP PUSH4 0x9AE38D93 SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD SWAP3 ADD SLOAD PUSH1 0x4 SLOAD SWAP3 SWAP4 POP PUSH2 0xE97 SWAP3 DUP3 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x1399 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP7 MSTORE SWAP3 MSTORE DUP4 KECCAK256 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP6 SWAP3 SWAP1 SWAP2 DUP2 PUSH2 0xEE0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 SWAP1 PUSH1 0x6 DUP2 PUSH2 0xF18 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 PUSH2 0xF49 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0xF95 PUSH1 0x2 PUSH2 0x1343 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP3 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD PUSH32 0x8562EB94748E30BB0071E932744CE902B460C683474FCB3BFD567FFA16B1AFB2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH2 0x101E PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x102A PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x1033 PUSH0 PUSH2 0x1426 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x103D PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP5 SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479204C697374656420496E204D61726B6574706C616365210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x10F5 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1103 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1141 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP1 DUP7 MSTORE DUP7 DUP3 KECCAK256 DUP14 DUP4 MSTORE DUP7 MSTORE DUP7 DUP3 KECCAK256 DUP9 MLOAD DUP2 SSTORE DUP9 DUP8 ADD MLOAD SWAP6 DUP2 ADD DUP1 SLOAD SWAP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND OR SWAP1 SSTORE DUP9 DUP9 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP8 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP9 ADD MLOAD SWAP1 DUP5 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x6 SWAP3 DUP4 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE SWAP2 DUP4 ADD DUP10 SWAP1 MSTORE SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x125D SWAP1 DUP11 SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x20 DUP3 ADD MSTORE ADDRESS DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x62AF98DBC3627E85C5EB929B032D3CE3D6C376652D71B4CCA6162A16EF099114 SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP2 POP LOG1 PUSH2 0x12E2 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x13F3 DUP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1477 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1033 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x14DD JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x14AF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14AD SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14EA DUP4 DUP4 PUSH0 PUSH2 0x14F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1531 SWAP2 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x156B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1580 DUP7 DUP4 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x159F JUMPI PUSH2 0x159A DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x14EA JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x15B6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x15DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9C8 JUMP JUMPDEST POP DUP1 PUSH2 0x14EA JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x15F6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1679 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x169B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14EA DUP3 PUSH2 0x1685 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BB JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH1 0x60 DUP5 MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x16FB DUP2 PUSH1 0x80 DUP8 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x40 SWAP4 DUP5 ADD MLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x17DF JUMPI DUP6 DUP4 SUB PUSH1 0x1F NOT ADD DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 MSTORE DUP6 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND DUP2 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 DUP3 ADD MLOAD PUSH2 0x120 PUSH1 0xE0 DUP8 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH2 0x17BE DUP4 DUP9 ADD DUP4 PUSH2 0x16DB JUMP JUMPDEST SWAP4 ADD MLOAD PUSH2 0x100 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x173D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x17FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1722 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1810 DUP2 DUP6 PUSH2 0x1722 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x184A DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x188B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1894 DUP6 PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A2 PUSH1 0x20 DUP7 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x18DC JUMPI PUSH2 0x18DC PUSH2 0x18B7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x191A JUMPI PUSH2 0x191A PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1949 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1979 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x199E JUMPI PUSH2 0x199E PUSH2 0x18E3 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x19AD DUP6 DUP3 ADD PUSH2 0x1920 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP6 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x19C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x1A9F JUMPI DUP3 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x19E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F NOT PUSH1 0x80 DUP3 DUP14 SUB DUP3 ADD SLT ISZERO PUSH2 0x19F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A00 PUSH2 0x18F7 JUMP JUMPDEST DUP10 DUP4 ADD MLOAD DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0x1A18 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x3F DUP2 ADD DUP16 SGT PUSH2 0x1A28 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP12 DUP2 ADD MLOAD DUP11 DUP2 GT ISZERO PUSH2 0x1A3C JUMPI PUSH2 0x1A3C PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A4C DUP14 DUP7 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x1920 JUMP JUMPDEST SWAP5 POP DUP1 DUP6 MSTORE DUP16 DUP4 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1A61 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A70 DUP2 DUP15 DUP8 ADD DUP6 DUP6 ADD PUSH2 0x16B9 JUMP JUMPDEST POP POP DUP2 DUP12 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 DUP2 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP3 MSTORE SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x19CC JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x943 JUMPI PUSH2 0x943 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1B27 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16B9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x169395800E3092048F4B7742B8273A290092420D3F43AF PUSH21 0xD3B5BD42344F5864736F6C63430008160033000000 ",
							"sourceMap": "834:8437:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7027:2074;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1247:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3621:25:19;;;3609:2;3594:18;1247:44:18;3475:177:19;1100:88:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1100:88:18;;;;;;;;;;;;;;;;;;;;4225:25:19;;;-1:-1:-1;;;;;4324:15:19;;;4319:2;4304:18;;4297:43;4376:15;;;;4356:18;;;4349:43;;;;4423:2;4408:18;;4401:34;;;;4466:3;4451:19;;4444:35;4277:3;4495:19;;4488:35;4567:14;4560:22;4554:3;4539:19;;4532:51;4212:3;4197:19;1100:88:18;3916:673:19;9106:162:18;;;;;;:::i;:::-;;:::i;:::-;;;4759:14:19;;4752:22;4734:41;;4722:2;4707:18;9106:162:18;4594:187:19;5816:1027:18;;;;;;:::i;:::-;;:::i;:::-;;3670:1977;;;;;;:::i;:::-;;:::i;1001:39::-;;;;;;;2293:101:0;;;:::i;1194:47:18:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1194:47:18;;;;;;;;;;-1:-1:-1;;;;;5231:32:19;;;5213:51;;5295:2;5280:18;;5273:34;;;;5186:18;1194:47:18;5039:274:19;1638:85:0;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;5464:51:19;;5452:2;5437:18;1638:85:0;5318:203:19;962:33:18;;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;2903:576:18:-;;;;;;:::i;:::-;;:::i;7027:2074::-;7084:25;;7147:18;7193:1;7179:276;7201:9;918:14:12;7196:1:18;:24;7179:276;;7247:38;7256:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;7256:28:18;;;7247:38;;:8;:38;;;;;7256:28;7286:20;;;;7247:60;;;;;;;:67;;;;;;:74;;;;7246:149;;;;-1:-1:-1;7327:38:18;7336:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;7336:28:18;7327:38;;:8;:38;;;;;7336:28;7366:20;;;;7327:60;;;;;;;;:67;;;;7246:149;7242:203;;;7415:15;;;;:::i;:::-;;;;7242:203;7223:3;;;;:::i;:::-;;;;7179:276;;;;7464:37;7527:13;7504:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;7464:77:18;-1:-1:-1;7554:18:18;;7551:719;;7587:18;7637:1;7623:637;7645:9;918:14:12;7640:1:18;:24;7623:637;;7695:38;7704:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;7704:28:18;;;7695:38;;:8;:38;;;;;7704:28;7734:20;;;;7695:60;;;;;;;:67;;;;;;:74;;;;7694:149;;;;-1:-1:-1;7775:38:18;7784:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;7784:28:18;7775:38;;:8;:38;;;;;7784:28;7814:20;;;;7775:60;;;;;;;;:67;;;;7694:149;7690:556;;;7867:38;7919:12;;;:9;:12;;;;;;:28;;;7962:20;;;;7908:75;;-1:-1:-1;;;7908:75:18;;-1:-1:-1;;;;;5231:32:19;;;7908:75:18;;;5213:51:19;5280:18;;;5273:34;;;;7919:28:18;;;7908:49;;5186:18:19;;7908:75:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7908:75:18;;;;;;;;;;;;:::i;:::-;8034:156;;;-1:-1:-1;8060:12:18;;;:9;:12;;;;;;;:28;;-1:-1:-1;;;;;8060:28:18;;;8051:38;;:8;:38;;;;;;8060:28;8090:20;;;;8051:60;;;;;;;8034:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8060:28;8034:156;;;;;;;;;;;;;;;;;;8112:75;;;;;;;;8118:15;;7867:116;;-1:-1:-1;8034:156:18;;;;;;8112:75;;7867:116;;8118:15;;;;:::i;:::-;;;;;;;:19;;;8112:75;;;;8138:12;8151:1;8138:15;;;;;;;;:::i;:::-;;;;;;;:25;;;8112:75;;;;8164:12;8177:1;8164:15;;;;;;;;:::i;:::-;;;;;;;:22;;;8112:75;;;8034:156;;;;8188:1;8034:156;;;8005:11;8017:13;8005:26;;;;;;;;:::i;:::-;;;;;;:185;;;;8212:15;;;;;:::i;:::-;;;;7845:401;7690:556;7667:3;;;;:::i;:::-;;;;7623:637;;;;7573:697;7551:719;8279:12;8315:13;8295:19;:9;918:14:12;;827:112;8295:19:18;:33;;;;:::i;:::-;8279:50;;8339:35;8400:7;8377:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;8339:69:18;-1:-1:-1;8418:16:18;8462:1;8448:607;8470:9;918:14:12;8465:1:18;:24;8448:607;;8516:38;8525:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;8525:28:18;;;8516:38;;:8;:38;;;;;8525:28;8555:20;;;;8516:60;;;;;;;:67;;;;;;:74;;;;;;;8515:149;;-1:-1:-1;8596:38:18;8605:12;;;:9;:12;;;;;;;;:28;;-1:-1:-1;;;;;8605:28:18;8596:38;;:8;:38;;;;;8605:28;8635:20;;;;8596:60;;;;;;;;:67;;;;8515:149;8511:534;;;8684:38;8736:12;;;:9;:12;;;;;;:28;;;8779:20;;;;8725:75;;-1:-1:-1;;;8725:75:18;;-1:-1:-1;;;;;5231:32:19;;;8725:75:18;;;5213:51:19;5280:18;;;5273:34;;;;8736:28:18;;;8725:49;;5186:18:19;;8725:75:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8725:75:18;;;;;;;;;;;;:::i;:::-;8843:156;;;-1:-1:-1;8869:12:18;;;:9;:12;;;;;;;:28;;-1:-1:-1;;;;;8869:28:18;;;8860:38;;:8;:38;;;;;;8869:28;8899:20;;;;8860:60;;;;;;;8843:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8869:28;8843:156;;;;;;;;;;;;;;;;;;8921:75;;;;;;;;8927:15;;8684:116;;-1:-1:-1;8843:156:18;;;;;;8921:75;;8684:116;;8927:15;;;;:::i;:::-;;;;;;;:19;;;8921:75;;;;8947:12;8960:1;8947:15;;;;;;;;:::i;:::-;;;;;;;:25;;;8921:75;;;;8973:12;8986:1;8973:15;;;;;;;;:::i;:::-;;;;;;;:22;;;8921:75;;;8843:156;;;;8997:1;8843:156;;;8818:9;8828:11;8818:22;;;;;;;;:::i;:::-;;;;;;:181;;;;9017:13;;;;;:::i;:::-;;;;8666:379;8511:534;8492:3;;;;:::i;:::-;;;;8448:607;;;-1:-1:-1;9072:11:18;;9084:9;;-1:-1:-1;7027:2074:18;-1:-1:-1;;;;;7027:2074:18:o;9106:162::-;-1:-1:-1;;;;;9216:29:18;;9187:11;9216:29;;;:8;:29;;;;;;;;:38;;;;;;;;:45;;;;;9106:162;;;;;:::o;5816:1027::-;2261:21:2;:19;:21::i;:::-;5891:46:18::1;5900:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;5900:36:18::1;5891:46:::0;;:8:::1;:46:::0;;;;;5900:36;5938:28;;::::1;::::0;5891:76;;;;;;;;:83:::1;::::0;::::1;;5883:116;;;::::0;-1:-1:-1;;;5883:116:18;;9381:2:19;5883:116:18::1;::::0;::::1;9363:21:19::0;9420:2;9400:18;;;9393:30;-1:-1:-1;;;9439:18:19;;;9432:51;9500:18;;5883:116:18::1;;;;;;;;;6009:46;6018:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;6018:36:18;;::::1;6009:46:::0;;:8:::1;:46:::0;;;;;6018:36;6056:28;::::1;::::0;;6009:76;;;;;;;;:82:::1;;:95:::0;;-1:-1:-1;;;;;;6009:95:18::1;6094:10;6009:95:::0;;::::1;::::0;;;6121:20;;;;;;;;:36;6199:28;;6114:114;;-1:-1:-1;;;6114:114:18;;6121:36;;;::::1;::::0;6114:57:::1;::::0;:114:::1;::::0;6180:4:::1;::::0;6094:10;6114:114:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;6322:5:18::1;6247:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;6247:36:18::1;6238:46:::0;;:8:::1;:46:::0;;;;;;6247:36;6285:28;;::::1;::::0;6238:76;;;;;;:83;::::1;:89:::0;;-1:-1:-1;;6238:89:18::1;::::0;;6257:9;;-1:-1:-1;6238:8:18;6322:5;;6356:19:::1;:9;918:14:12::0;;827:112;6356:19:18::1;6346:30:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;6346:30:18;;;:46;-1:-1:-1;;;;;6346:46:18::1;6337:56:::0;;;;::::1;::::0;;;;;;;;;6394:9:::1;-1:-1:-1::0;6404:19:18::1;:9;918:14:12::0;;827:112;6404:19:18::1;6394:30;;;;;;;;;;;:38;;;6337:96;;;;;;;;;;;:102;;:114;;;;6484:9;:30;6494:19;:9;918:14:12::0;;827:112;6494:19:18::1;6484:30:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;6484:30:18;;;6461:20;;;:9:::1;:20:::0;;;;:53;;;;-1:-1:-1;;;;;;6461:53:18::1;-1:-1:-1::0;;;;;6461:53:18;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;6524:21:::1;:9;:19;:21::i;:::-;6570:46;6579:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;6579:36:18;;::::1;6570:46:::0;;:8:::1;:46:::0;;;;;6579:36;6617:28;;::::1;::::0;6570:76;;;;;;;;:84;;6656:83;;::::1;::::0;6753:82:::1;::::0;;::::1;::::0;6560:276;;10140:25:19;;;6656:83:18;::::1;10219:18:19::0;;;10212:43;;;;6741:10:18::1;10271:18:19::0;;;10264:43;10338:2;10323:18;;10316:34;;;;6560:276:18::1;::::0;10127:3:19;10112:19;6560:276:18::1;;;;;;;2303:20:2::0;1716:1;2809:7;:22;2629:209;2303:20;5816:1027:18;:::o;3670:1977::-;2261:21:2;:19;:21::i;:::-;3755:46:18::1;3764:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;3764:36:18;;::::1;3755:46:::0;;:8:::1;:46:::0;;;;;3764:36;3802:28;;::::1;::::0;3755:76;;;;;;;:83;;::::1;::::0;3842:10:::1;3755:83:::0;::::1;:97:::0;3747:145:::1;;;::::0;-1:-1:-1;;;3747:145:18;;10563:2:19;3747:145:18::1;::::0;::::1;10545:21:19::0;10602:2;10582:18;;;10575:30;10641:34;10621:18;;;10614:62;-1:-1:-1;;;10692:18:19;;;10685:33;10735:19;;3747:145:18::1;10361:399:19::0;3747:145:18::1;3919:46;3928:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;3928:36:18::1;3919:46:::0;;:8:::1;:46:::0;;;;;3928:36;3966:28;;::::1;::::0;3919:76;;;;;;;:82:::1;;::::0;3910:91;::::1;3902:147;;;::::0;-1:-1:-1;;;3902:147:18;;10967:2:19;3902:147:18::1;::::0;::::1;10949:21:19::0;11006:2;10986:18;;;10979:30;11045:34;11025:18;;;11018:62;-1:-1:-1;;;11096:18:19;;;11089:40;11146:19;;3902:147:18::1;10765:406:19::0;3902:147:18::1;4066:20;::::0;;;:9:::1;:20;::::0;;;;;;:36;;;4144:28;;::::1;::::0;4059:114;;-1:-1:-1;;;4059:114:18;;-1:-1:-1;;;;;4066:36:18;;::::1;::::0;4059:57:::1;::::0;:114:::1;::::0;4125:4:::1;::::0;4132:10:::1;::::0;4144:28;4059:114:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;4194:20:18::1;::::0;;;:9:::1;:20;::::0;;;;;;;:36;;;4257:28;;::::1;::::0;-1:-1:-1;;;;;4194:36:18;;::::1;4286:46:::0;;;:8:::1;:46:::0;;;;;:76;;;;;;;;;;:83;;::::1;::::0;4183:201;;-1:-1:-1;;;4183:201:18;;4246:10:::1;4183:201;::::0;::::1;11445:34:19::0;11495:18;;;11488:34;;;;4286:83:18::1;11538:18:19::0;;;11531:43;4378:4:18::1;11590:18:19::0;;;11583:43;4194:36:18;-1:-1:-1;4183:62:18::1;::::0;11379:19:19;;4183:201:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;4394:14:18::1;4420:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;4420:36:18;;::::1;4411:46:::0;;:8:::1;:46:::0;;;;;4420:36;4458:28;;::::1;::::0;4411:76;;;;;;;:82:::1;::::0;::::1;::::0;5020:83;::::1;::::0;4978:12:::1;::::0;4411:82;;-1:-1:-1;4971:140:18::1;::::0;4978:12;::::1;::::0;5009:10:::1;::::0;5020:83:::1;4411:82:::0;4971:37:::1;:140::i;:::-;5205:5;5130:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;5130:36:18::1;5121:46:::0;;:8:::1;:46:::0;;;;;;5130:36;5168:28;;::::1;::::0;5121:76;;;;;;:83;::::1;:89:::0;;-1:-1:-1;;5121:89:18::1;::::0;;5140:9;;5121:8;;5205:5;5239:19:::1;:9;918:14:12::0;;827:112;5239:19:18::1;5229:30:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5229:30:18;;;:46;-1:-1:-1;;;;;5229:46:18::1;5220:56:::0;;;;::::1;::::0;;;;;;;;;5277:9:::1;-1:-1:-1::0;5287:19:18::1;:9;918:14:12::0;;827:112;5287:19:18::1;5277:30;;;;;;;;;;;:38;;;5220:96;;;;;;;;;;;:102;;:114;;;;5367:9;:30;5377:19;:9;918:14:12::0;;827:112;5377:19:18::1;5367:30:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5367:30:18;;;5344:20;;;:9:::1;:20:::0;;;;:53;;;;-1:-1:-1;;;;;;5344:53:18::1;-1:-1:-1::0;;;;;5344:53:18;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;5407:21:::1;:9;:19;:21::i;:::-;5451:46;5460:20:::0;;;:9:::1;:20;::::0;;;;;;;:36;;-1:-1:-1;;;;;5460:36:18;;::::1;5451:46:::0;;:8:::1;:46:::0;;;;;5460:36;5498:28;;::::1;::::0;5451:76;;;;;;;;:84;;5537:83;::::1;::::0;5443:197;;10140:25:19;;;5537:83:18;;::::1;10219:18:19::0;;;10212:43;;;;5622:10:18::1;10271:18:19::0;;;10264:43;10338:2;10323:18;;10316:34;;;5443:197:18;::::1;::::0;;;;10127:3:19;5443:197:18;;::::1;3736:1911;2303:20:2::0;1716:1;2809:7;:22;2629:209;2303:20;3670:1977:18;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;5464:51:19::0;5437:18;;2672:31:0::1;5318:203:19::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2903:576:18:-:0;-1:-1:-1;;;;;2125:26:18;;;;;;:8;:26;;;;;;;;:35;;;;;;;;:42;;;3021:13;;3035:11;;3047:8;;3056:6;;2125:42;;2124:43;2116:85;;;;-1:-1:-1;;;2116:85:18;;11839:2:19;2116:85:18;;;11821:21:19;11878:2;11858:18;;;11851:30;11917:32;11897:18;;;11890:60;11967:18;;2116:85:18;11637:354:19;2116:85:18;2261:21:2::1;:19;:21::i;:::-;3086::18::2;:9;1032:19:12::0;;1050:1;1032:19;;;945:123;3086:21:18::2;3153:87;;;;;;;;3157:8;3153:87;;;;3166:11;-1:-1:-1::0;;;;;3153:87:18::2;;;;;3186:4;-1:-1:-1::0;;;;;3153:87:18::2;;;;;3192:6;3153:87;;;;3199:19;:9;918:14:12::0;;827:112;3199:19:18::2;3153:87:::0;;3219:15:::2;3153:87;::::0;;::::2;::::0;;;;3235:4:::2;3153:87:::0;;;;;;;-1:-1:-1;;;;;3117:23:18;;::::2;-1:-1:-1::0;3117:23:18;;;:8:::2;:23:::0;;;;;;:33;;;;;;;;:123;;;;;;::::2;::::0;;;::::2;::::0;;;;::::2;-1:-1:-1::0;;;;;;3117:123:18;;::::2;;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;;;::::2;;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;::::2;;-1:-1:-1::0;;3117:123:18;;::::2;::::0;;;::::2;::::0;;3283:36;;;;::::2;::::0;;;;;;;::::2;::::0;;;918:14:12;3283:36:18;;3117:123;;3250:30;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;3250:30:18;:69;;;;-1:-1:-1;;;;;;3250:69:18::2;-1:-1:-1::0;;;;;3250:69:18;;::::2;;::::0;;;;;::::2;::::0;-1:-1:-1;3250:69:18;;::::2;::::0;;;;3329:72;-1:-1:-1;;;3329:72:18;;:34;;::::2;::::0;::::2;::::0;:72:::2;::::0;3364:11;;3385:4:::2;::::0;3392:8;;3329:72:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;3417:55:18::2;::::0;;10140:25:19;;;-1:-1:-1;;;;;10239:15:19;;10234:2;10219:18;;10212:43;3458:4:18::2;10271:18:19::0;;;10264:43;10338:2;10323:18;;10316:34;;;3417:55:18;;::::2;::::0;-1:-1:-1;3417:55:18;;;;10127:3:19;3417:55:18;;-1:-1:-1;3417:55:18::2;2303:20:2::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;2903:576:18::0;;;;;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;12555:2:19;2460:63:2;;;12537:21:19;12594:2;12574:18;;;12567:30;12633:33;12613:18;;;12606:61;12684:18;;2460:63:2;12353:355:19;2460:63:2;1759:1;2598:7;:18;2336:287::o;1074:229:12:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:12;;12915:2:19;1177:49:12;;;12897:21:19;12954:2;12934:18;;;12927:30;12993:29;12973:18;;;12966:57;13040:18;;1177:49:12;12713:351:19;1177:49:12;-1:-1:-1;;1277:9:12;1260:26;;1074:229::o;1702:188:5:-;1802:81;1822:5;1844;-1:-1:-1;;;;;1844:18:5;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:5;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:11;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:11;1901:40:0;;;5464:51:19;5437:18;;1901:40:0;5318:203:19;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;4059:629:5:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:5;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:5;;-1:-1:-1;;;;;5482:32:19;;4631:40:5;;;5464:51:19;5437:18;;4631:40:5;5318:203:19;4547:135:5;4129:559;4059:629;;:::o;2705:151:10:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;2705:151;-1:-1:-1;;;2705:151:10:o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:10;;3394:4;3359:41;;;5464:51:19;5437:18;;3359:41:10;5318:203:19;3303:108:10;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:10;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:10:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:10;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:10;;-1:-1:-1;;;;;5482:32:19;;5121:24:10;;;5464:51:19;5437:18;;5121:24:10;5318:203:19;5041:119:10;-1:-1:-1;5180:10:10;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:10;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:19:-;82:20;;-1:-1:-1;;;;;131:31:19;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:250::-;468:1;478:113;492:6;489:1;486:13;478:113;;;568:11;;;562:18;549:11;;;542:39;514:2;507:10;478:113;;;-1:-1:-1;;625:1:19;607:16;;600:27;383:250::o;638:479::-;686:3;730:5;724:12;757:4;752:3;745:17;791:12;785:19;836:6;829:4;824:3;820:14;813:30;852:82;927:6;921:3;916;912:13;905:4;891:12;887:23;852:82;:::i;:::-;983:4;972:16;;;966:23;950:14;;;943:47;1039:4;1028:16;;;1022:23;1006:14;;;999:47;;;;-1:-1:-1;;1100:2:19;1079:15;-1:-1:-1;;1075:29:19;1066:39;1107:3;1062:49;;638:479::o;1122:1525::-;1191:3;1222;1254:5;1248:12;1281:6;1276:3;1269:19;1307:4;1336:2;1331:3;1327:12;1320:19;;1392:2;1382:6;1379:1;1375:14;1368:5;1364:26;1360:35;1429:2;1422:5;1418:14;1450:1;1460:1161;1474:6;1471:1;1468:13;1460:1161;;;1539:16;;;-1:-1:-1;;1535:30:19;1523:43;;1589:13;;1654:9;;1689;;1676:23;;1738:11;;;1732:18;-1:-1:-1;;;;;1827:21:19;;;1812:13;;;1805:44;1872:4;1921:11;;;1915:18;1911:27;;;1896:13;;;1889:50;1962:4;2007:11;;;2001:18;1986:13;;;1979:41;2043:4;2088:11;;;2082:18;2067:13;;;2060:41;1781:3;2169:11;;;2163:18;2148:13;;;2141:41;2206:4;2266:12;;;2260:19;2253:27;2246:35;2230:14;;;2223:59;;;;2323:11;;;2317:18;1625:6;2365:4;2355:15;;2348:27;;;1625:6;2402:54;2442:13;;;2317:18;2402:54;:::i;:::-;2501:11;;2495:18;2486:6;2476:17;;;;2469:45;;;;-1:-1:-1;2599:12:19;;;;2388:68;-1:-1:-1;2564:15:19;;;;1496:1;1489:9;1460:1161;;;-1:-1:-1;2637:4:19;;1122:1525;-1:-1:-1;;;;;;;1122:1525:19:o;2652:633::-;3045:2;3034:9;3027:21;3008:4;3071:72;3139:2;3128:9;3124:18;3116:6;3071:72;:::i;:::-;3191:9;3183:6;3179:22;3174:2;3163:9;3159:18;3152:50;3219:60;3272:6;3264;3219:60;:::i;:::-;3211:68;2652:633;-1:-1:-1;;;;;2652:633:19:o;3290:180::-;3349:6;3402:2;3390:9;3381:7;3377:23;3373:32;3370:52;;;3418:1;3415;3408:12;3370:52;-1:-1:-1;3441:23:19;;3290:180;-1:-1:-1;3290:180:19:o;3657:254::-;3725:6;3733;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;3825:29;3844:9;3825:29;:::i;:::-;3815:39;3901:2;3886:18;;;;3873:32;;-1:-1:-1;;;3657:254:19:o;4786:248::-;4854:6;4862;4915:2;4903:9;4894:7;4890:23;4886:32;4883:52;;;4931:1;4928;4921:12;4883:52;-1:-1:-1;;4954:23:19;;;5024:2;5009:18;;;4996:32;;-1:-1:-1;4786:248:19:o;5526:397::-;5612:6;5620;5628;5636;5689:3;5677:9;5668:7;5664:23;5660:33;5657:53;;;5706:1;5703;5696:12;5657:53;5729:29;5748:9;5729:29;:::i;:::-;5719:39;;5777:38;5811:2;5800:9;5796:18;5777:38;:::i;:::-;5526:397;;5767:48;;-1:-1:-1;;;;5862:2:19;5847:18;;5834:32;;5913:2;5898:18;5885:32;;5526:397::o;5928:127::-;5989:10;5984:3;5980:20;5977:1;5970:31;6020:4;6017:1;6010:15;6044:4;6041:1;6034:15;6060:135;6099:3;6120:17;;;6117:43;;6140:18;;:::i;:::-;-1:-1:-1;6187:1:19;6176:13;;6060:135::o;6200:127::-;6261:10;6256:3;6252:20;6249:1;6242:31;6292:4;6289:1;6282:15;6316:4;6313:1;6306:15;6332:253;6404:2;6398:9;6446:4;6434:17;;6481:18;6466:34;;6502:22;;;6463:62;6460:88;;;6528:18;;:::i;:::-;6564:2;6557:22;6332:253;:::o;6590:275::-;6661:2;6655:9;6726:2;6707:13;;-1:-1:-1;;6703:27:19;6691:40;;6761:18;6746:34;;6782:22;;;6743:62;6740:88;;;6808:18;;:::i;:::-;6844:2;6837:22;6590:275;;-1:-1:-1;6590:275:19:o;6870:2039::-;6988:6;7019:2;7062;7050:9;7041:7;7037:23;7033:32;7030:52;;;7078:1;7075;7068:12;7030:52;7111:9;7105:16;7140:18;7181:2;7173:6;7170:14;7167:34;;;7197:1;7194;7187:12;7167:34;7235:6;7224:9;7220:22;7210:32;;7280:7;7273:4;7269:2;7265:13;7261:27;7251:55;;7302:1;7299;7292:12;7251:55;7331:2;7325:9;7353:2;7349;7346:10;7343:36;;;7359:18;;:::i;:::-;7405:2;7402:1;7398:10;7428:28;7452:2;7448;7444:11;7428:28;:::i;:::-;7490:15;;;7560:11;;;7556:20;;;7521:12;;;;7588:19;;;7585:39;;;7620:1;7617;7610:12;7585:39;7652:2;7648;7644:11;7633:22;;7664:1215;7680:6;7675:3;7672:15;7664:1215;;;7759:3;7753:10;7795:2;7782:11;7779:19;7776:39;;;7811:1;7808;7801:12;7776:39;7838:20;;-1:-1:-1;;7935:4:19;7912:16;;;7908:25;;7904:36;7901:56;;;7953:1;7950;7943:12;7901:56;7983:22;;:::i;:::-;8046:2;8042;8038:11;8032:18;8025:5;8018:33;8074:2;8119;8115;8111:11;8105:18;8152:2;8142:8;8139:16;8136:36;;;8168:1;8165;8158:12;8136:36;8195:17;;8247:2;8239:11;;8235:25;-1:-1:-1;8225:53:19;;8274:1;8271;8264:12;8225:53;8316:2;8312;8308:11;8302:18;8344:2;8339:3;8336:11;8333:37;;;8350:18;;:::i;:::-;8396:49;8441:2;8436;8429:4;8424:3;8420:14;8416:23;8412:32;8396:49;:::i;:::-;8383:62;;8472:3;8465:5;8458:18;8518:7;8513:2;8507:3;8503:2;8499:12;8495:21;8492:34;8489:54;;;8539:1;8536;8529:12;8489:54;8556:68;8620:3;8615:2;8608:5;8604:14;8599:2;8595;8591:11;8556:68;:::i;:::-;-1:-1:-1;;8644:14:19;;;8637:29;;;;8690:2;8734:12;;;8728:19;8712:14;;;8705:43;;;;8799:4;8791:13;;;8785:20;8768:15;;;8761:45;8819:18;;7697:12;;;;8857;;;;7664:1215;;;8898:5;6870:2039;-1:-1:-1;;;;;;;;;6870:2039:19:o;8914:127::-;8975:10;8970:3;8966:20;8963:1;8956:31;9006:4;9003:1;8996:15;9030:4;9027:1;9020:15;9046:128;9113:9;;;9134:11;;;9131:37;;;9148:18;;:::i;9529:375::-;-1:-1:-1;;;;;9787:15:19;;;9769:34;;9839:15;;;;9834:2;9819:18;;9812:43;9886:2;9871:18;;9864:34;;;;9719:2;9704:18;;9529:375::o;13069:277::-;13136:6;13189:2;13177:9;13168:7;13164:23;13160:32;13157:52;;;13205:1;13202;13195:12;13157:52;13237:9;13231:16;13290:5;13283:13;13276:21;13269:5;13266:32;13256:60;;13312:1;13309;13302:12;13351:287;13480:3;13518:6;13512:13;13534:66;13593:6;13588:3;13581:4;13573:6;13569:17;13534:66;:::i;:::-;13616:16;;;;;13351:287;-1:-1:-1;;13351:287:19:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1403000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CancelOffer(uint256)": "infinite",
								"ListNft(address,address,uint256,uint256)": "infinite",
								"_idToNFT(address,uint256)": "15530",
								"_nftCount()": "2341",
								"buyNft(uint256,uint256)": "infinite",
								"getListedNfts(address)": "infinite",
								"listCount(uint256)": "4689",
								"nftAuctionCount()": "2320",
								"nftDetail(address,uint256)": "2735",
								"owner()": "2322",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28399",
								"userListCount(uint256)": "2458"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 2557,
									"end": 2679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 2557,
									"end": 2679,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2620,
									"end": 2632,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2656,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2644,
									"end": 2672,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 834,
									"end": 9271,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076169395800e3092048f4b7742b8273a290092420d3f43af74d3b5bd42344f5864736f6c63430008160033",
									".code": [
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "6617B35D"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "D6CBB202"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "F33C4061"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "6617B35D"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "8D02F792"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "D909886"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "1E903868"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "2791A4D0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "293C6AE1"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "4E455DBE"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "556F8084"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 834,
											"end": 9271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 7027,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 7027,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1247,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 3475,
											"end": 3652,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1100,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4225,
											"end": 4250,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 4225,
											"end": 4250,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4225,
											"end": 4250,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4339,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 4324,
											"end": 4339,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4324,
											"end": 4339,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4319,
											"end": 4321,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4297,
											"end": 4340,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4391,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4391,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4391,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4391,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4349,
											"end": 4392,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4349,
											"end": 4392,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4349,
											"end": 4392,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4349,
											"end": 4392,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 4451,
											"end": 4470,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4470,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4444,
											"end": 4479,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4277,
											"end": 4280,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 4495,
											"end": 4514,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4495,
											"end": 4514,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4488,
											"end": 4523,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4554,
											"end": 4557,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 4539,
											"end": 4558,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4539,
											"end": 4558,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4532,
											"end": 4583,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4212,
											"end": 4215,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 4197,
											"end": 4216,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 3916,
											"end": 4589,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 9106,
											"end": 9268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "tag",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 9106,
											"end": 9268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4773,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4759,
											"end": 4773,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4774,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4734,
											"end": 4775,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4734,
											"end": 4775,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 4594,
											"end": 4781,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 5816,
											"end": 6843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 5816,
											"end": 6843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 3670,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 3670,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1001,
											"end": 1040,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1194,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5213,
											"end": 5264,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5213,
											"end": 5264,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5295,
											"end": 5297,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 5039,
											"end": 5313,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5318,
											"end": 5521,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 995,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 962,
											"end": 995,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 962,
											"end": 995,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2903,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 2903,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7084,
											"end": 7109,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7084,
											"end": 7109,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7201,
											"end": 7210,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7197,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7196,
											"end": 7220,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7265,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7268,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7284,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7284,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7256,
											"end": 7284,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7284,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7284,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7255,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7285,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7284,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7286,
											"end": 7306,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7306,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7306,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7306,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7307,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7314,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7314,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7314,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7314,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7314,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7314,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7321,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7321,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7321,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7321,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7395,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7395,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 7246,
											"end": 7395,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7345,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7364,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7364,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7336,
											"end": 7364,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7335,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7365,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7336,
											"end": 7364,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7366,
											"end": 7386,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7366,
											"end": 7386,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7366,
											"end": 7386,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7366,
											"end": 7386,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7387,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7395,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 7246,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7242,
											"end": 7445,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7242,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 7242,
											"end": 7445,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 7415,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7242,
											"end": 7445,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 7242,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 7223,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7455,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7464,
											"end": 7501,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7527,
											"end": 7540,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 7504,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "tag",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 7504,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7464,
											"end": 7541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7551,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 7551,
											"end": 8270,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7640,
											"end": 7664,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7732,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7732,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7704,
											"end": 7732,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7732,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7732,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7703,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7733,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7732,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7755,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7762,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7762,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7762,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7762,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7762,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7762,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7769,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7769,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7695,
											"end": 7769,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 7694,
											"end": 7843,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7694,
											"end": 7843,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7694,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 7694,
											"end": 7843,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7793,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7812,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7812,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7812,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7783,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7813,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7812,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7835,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7694,
											"end": 7843,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 7694,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7690,
											"end": 8246,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7690,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 7690,
											"end": 8246,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7867,
											"end": 7905,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7928,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7947,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7947,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7947,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7962,
											"end": 7982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7962,
											"end": 7982,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7962,
											"end": 7982,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7962,
											"end": 7982,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21EBE673"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5213,
											"end": 5264,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7919,
											"end": 7947,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7947,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7919,
											"end": 7947,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7957,
											"name": "PUSH",
											"source": 18,
											"value": "43D7CCE6"
										},
										{
											"begin": 7908,
											"end": 7957,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 7908,
											"end": 7983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 7908,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8069,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8072,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8059,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8089,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8111,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7867,
											"end": 7983,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 7867,
											"end": 7983,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7867,
											"end": 7983,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7867,
											"end": 7983,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8118,
											"end": 8133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8137,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8137,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8118,
											"end": 8137,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8150,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8138,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8153,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8176,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8164,
											"end": 8179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8186,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8164,
											"end": 8186,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8186,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8112,
											"end": 8187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8034,
											"end": 8190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8016,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8005,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8190,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 8212,
											"end": 8227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7845,
											"end": 8246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7690,
											"end": 8246,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 7690,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 7667,
											"end": 7670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7623,
											"end": 8260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7573,
											"end": 8270,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7551,
											"end": 8270,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 7551,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8279,
											"end": 8291,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8328,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8295,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8314,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 8295,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8295,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 8295,
											"end": 8328,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8295,
											"end": 8328,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8295,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 8295,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8295,
											"end": 8328,
											"name": "tag",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 8295,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8279,
											"end": 8329,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8279,
											"end": 8329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8407,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 8377,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "tag",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "tag",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 8377,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "tag",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "tag",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 8377,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8408,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8418,
											"end": 8434,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8463,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8470,
											"end": 8479,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8465,
											"end": 8489,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8534,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8553,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8553,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8525,
											"end": 8553,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8553,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8553,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8524,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8554,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8553,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8576,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8590,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8515,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 8515,
											"end": 8664,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8614,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8633,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8633,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8605,
											"end": 8633,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8604,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8634,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8633,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8656,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8663,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8663,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8596,
											"end": 8663,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 8596,
											"end": 8663,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8515,
											"end": 8664,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 8515,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 9045,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 8511,
											"end": 9045,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8745,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8764,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8764,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8764,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8779,
											"end": 8799,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8779,
											"end": 8799,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8779,
											"end": 8799,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8779,
											"end": 8799,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21EBE673"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5213,
											"end": 5264,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8736,
											"end": 8764,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8764,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8736,
											"end": 8764,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8774,
											"name": "PUSH",
											"source": 18,
											"value": "43D7CCE6"
										},
										{
											"begin": 8725,
											"end": 8774,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "tag",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 8725,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "tag",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 8725,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8868,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8898,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8899,
											"end": 8919,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8899,
											"end": 8919,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8899,
											"end": 8919,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8899,
											"end": 8919,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8920,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8869,
											"end": 8897,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8684,
											"end": 8800,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 8684,
											"end": 8800,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8684,
											"end": 8800,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8684,
											"end": 8800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8927,
											"end": 8942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8946,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8927,
											"end": 8946,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8946,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8959,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8947,
											"end": 8962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8962,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8972,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8947,
											"end": 8972,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8947,
											"end": 8972,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8986,
											"end": 8987,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8973,
											"end": 8988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8988,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8995,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8973,
											"end": 8995,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8995,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8921,
											"end": 8996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8997,
											"end": 8998,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8999,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8828,
											"end": 8839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8818,
											"end": 8840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8840,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8999,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8818,
											"end": 8999,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 9017,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8666,
											"end": 9045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 9045,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 8511,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 8492,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8492,
											"end": 8495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 8448,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9072,
											"end": 9083,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9072,
											"end": 9083,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7027,
											"end": 9101,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7027,
											"end": 9101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9187,
											"end": 9198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9224,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9245,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9254,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9261,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 9216,
											"end": 9261,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9261,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9261,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 9216,
											"end": 9261,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5900,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5936,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5936,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5900,
											"end": 5936,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5938,
											"end": 5966,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5938,
											"end": 5966,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5938,
											"end": 5966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5938,
											"end": 5966,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5967,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5974,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5891,
											"end": 5974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 5891,
											"end": 5974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5883,
											"end": 5999,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5883,
											"end": 5999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9383,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5883,
											"end": 5999,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9363,
											"end": 9384,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9420,
											"end": 9422,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9393,
											"end": 9423,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506C65617365204C69737420466972737420212121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9432,
											"end": 9483,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 5883,
											"end": 5999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6018,
											"end": 6038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6054,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6054,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6054,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6054,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6055,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6018,
											"end": 6054,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6056,
											"end": 6084,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6056,
											"end": 6084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6056,
											"end": 6084,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6056,
											"end": 6084,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 6009,
											"end": 6091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 6104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6094,
											"end": 6104,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6104,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6141,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6199,
											"end": 6227,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6199,
											"end": 6227,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 6114,
											"end": 6171,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6180,
											"end": 6184,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6094,
											"end": 6104,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 6114,
											"end": 6228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6228,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 6114,
											"end": 6228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6322,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6247,
											"end": 6267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6267,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6283,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6283,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6247,
											"end": 6283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6284,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6283,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6285,
											"end": 6313,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6285,
											"end": 6313,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6285,
											"end": 6313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6285,
											"end": 6313,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6314,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6314,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6314,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6314,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6314,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6314,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6321,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6327,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6327,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6327,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6327,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6257,
											"end": 6266,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6257,
											"end": 6266,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6246,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6356,
											"end": 6375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 6356,
											"end": 6365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 6356,
											"end": 6375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6376,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6346,
											"end": 6392,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6392,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6404,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 6404,
											"end": 6413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6404,
											"end": 6423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 6404,
											"end": 6423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6424,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6394,
											"end": 6432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6394,
											"end": 6432,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6433,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6337,
											"end": 6439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6451,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6451,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6451,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6451,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6484,
											"end": 6514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 6494,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 6494,
											"end": 6513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6484,
											"end": 6514,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6461,
											"end": 6514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6461,
											"end": 6514,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 6524,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 6524,
											"end": 6533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 6524,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 6524,
											"end": 6545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6524,
											"end": 6545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 6524,
											"end": 6545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 6579,
											"end": 6599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6615,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6615,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6615,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6615,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6616,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6615,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6617,
											"end": 6645,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6617,
											"end": 6645,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6617,
											"end": 6645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6617,
											"end": 6645,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6646,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6654,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6654,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6656,
											"end": 6739,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6656,
											"end": 6739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6656,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6656,
											"end": 6739,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 6753,
											"end": 6835,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6835,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6835,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6656,
											"end": 6739,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 6656,
											"end": 6739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6741,
											"end": 6751,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10338,
											"end": 10340,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "FB0451E2371B977DB14CE8DB0BD62262E6FF8FE4B5960280928BA94E02443603"
										},
										{
											"begin": 6560,
											"end": 6836,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10127,
											"end": 10130,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10112,
											"end": 10131,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6836,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 18
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5816,
											"end": 6843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 6843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3764,
											"end": 3784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3801,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3802,
											"end": 3830,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3802,
											"end": 3830,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3802,
											"end": 3830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3802,
											"end": 3830,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3831,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3838,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3838,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3838,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3842,
											"end": 3852,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3838,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3755,
											"end": 3852,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3892,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3747,
											"end": 3892,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3747,
											"end": 3892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3892,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10545,
											"end": 10566,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10602,
											"end": 10604,
											"name": "PUSH",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10575,
											"end": 10605,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10675,
											"name": "PUSH",
											"source": 19,
											"value": "416E206F666665722063616E6E6F742062757920746869732053656C6C657220"
										},
										{
											"begin": 10621,
											"end": 10639,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 10621,
											"end": 10639,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10621,
											"end": 10639,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10614,
											"end": 10676,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "212121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10685,
											"end": 10718,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 10361,
											"end": 10760,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 3747,
											"end": 3892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3928,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3965,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3966,
											"end": 3994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3995,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3919,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4001,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3910,
											"end": 4001,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3910,
											"end": 4001,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4049,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 4049,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3902,
											"end": 4049,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4049,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10949,
											"end": 10970,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11006,
											"end": 11008,
											"name": "PUSH",
											"source": 19,
											"value": "2A"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10979,
											"end": 11009,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11045,
											"end": 11079,
											"name": "PUSH",
											"source": 19,
											"value": "4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11018,
											"end": 11080,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20707269636520212121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11089,
											"end": 11129,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11146,
											"end": 11165,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 11146,
											"end": 11165,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 10765,
											"end": 11171,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 3902,
											"end": 4049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4102,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4102,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4102,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4144,
											"end": 4172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4102,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4102,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4102,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 4059,
											"end": 4116,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4125,
											"end": 4129,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4132,
											"end": 4142,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 4132,
											"end": 4142,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4144,
											"end": 4172,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 4059,
											"end": 4173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4173,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 4059,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 4194,
											"end": 4214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4230,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4230,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4230,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4257,
											"end": 4285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4257,
											"end": 4285,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4230,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4230,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4369,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4369,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4286,
											"end": 4369,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AE38D93"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4246,
											"end": 4256,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11445,
											"end": 11479,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11488,
											"end": 11522,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11488,
											"end": 11522,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11488,
											"end": 11522,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11488,
											"end": 11522,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4286,
											"end": 4369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11538,
											"end": 11556,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 11538,
											"end": 11556,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11538,
											"end": 11556,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11531,
											"end": 11574,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4378,
											"end": 4382,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11583,
											"end": 11626,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4194,
											"end": 4230,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4183,
											"end": 4245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "9AE38D93"
										},
										{
											"begin": 4183,
											"end": 4245,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11379,
											"end": 11398,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 11379,
											"end": 11398,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4384,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 4183,
											"end": 4384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 4420,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4456,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4456,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4420,
											"end": 4456,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4456,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4457,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4456,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4458,
											"end": 4486,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4486,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4486,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4487,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 4411,
											"end": 4493,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4493,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5020,
											"end": 5103,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5020,
											"end": 5103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5020,
											"end": 5103,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4978,
											"end": 4990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4978,
											"end": 4990,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4493,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4493,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 5111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 4971,
											"end": 5111,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4978,
											"end": 4990,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4978,
											"end": 4990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4978,
											"end": 4990,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5020,
											"end": 5103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4493,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4971,
											"end": 5008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 4971,
											"end": 5111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4971,
											"end": 5111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 4971,
											"end": 5111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5205,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5130,
											"end": 5150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5166,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5166,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5130,
											"end": 5166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5166,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5168,
											"end": 5196,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5196,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5196,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5197,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5197,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5197,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5197,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5197,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5197,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5204,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5210,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5210,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5210,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5210,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5129,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5205,
											"end": 5210,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5239,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 5239,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5239,
											"end": 5258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 5239,
											"end": 5258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5275,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5229,
											"end": 5275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5276,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 5306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 5287,
											"end": 5296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5287,
											"end": 5306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 5287,
											"end": 5306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5307,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5277,
											"end": 5315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5316,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5220,
											"end": 5322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5334,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5334,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5367,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 5377,
											"end": 5386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5396,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 5377,
											"end": 5396,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5397,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 5397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"modifierDepth": 1,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5397,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5407,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 5407,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 5407,
											"end": 5426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 5407,
											"end": 5428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5407,
											"end": 5428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 5407,
											"end": 5428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5460,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5497,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5498,
											"end": 5526,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5498,
											"end": 5526,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5498,
											"end": 5526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5498,
											"end": 5526,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5527,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5535,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5620,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5620,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5537,
											"end": 5620,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5620,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5632,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10338,
											"end": 10340,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "8562EB94748E30BB0071E932744CE902B460C683474FCB3BFD567FFA16B1AFB2"
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10127,
											"end": 10130,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5640,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 18
										},
										{
											"begin": 3736,
											"end": 5647,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3670,
											"end": 5647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5318,
											"end": 5521,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2151,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2160,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3034,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3034,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3035,
											"end": 3046,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3035,
											"end": 3046,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3047,
											"end": 3055,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3047,
											"end": 3055,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2125,
											"end": 2167,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2167,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11839,
											"end": 11841,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11821,
											"end": 11842,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11878,
											"end": 11880,
											"name": "PUSH",
											"source": 19,
											"value": "1E"
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11851,
											"end": 11881,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11917,
											"end": 11949,
											"name": "PUSH",
											"source": 19,
											"value": "416C7265616479204C697374656420496E204D61726B6574706C616365210000"
										},
										{
											"begin": 11897,
											"end": 11915,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 11897,
											"end": 11915,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11897,
											"end": 11915,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11890,
											"end": 11950,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 11637,
											"end": 11991,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "tag",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 2116,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 3086,
											"end": 3095,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 3086,
											"end": 3107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3157,
											"end": 3165,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3186,
											"end": 3190,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3192,
											"end": 3198,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3199,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 3199,
											"end": 3208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3199,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 3199,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3219,
											"end": 3234,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3235,
											"end": 3239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3240,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP13",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3125,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "DUP14",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3150,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"modifierDepth": 2,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3283,
											"end": 3319,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3280,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3250,
											"end": 3319,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"modifierDepth": 2,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 3401,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3363,
											"modifierDepth": 2,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 3329,
											"end": 3401,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3364,
											"end": 3375,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3364,
											"end": 3375,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3385,
											"end": 3389,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 3385,
											"end": 3389,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3392,
											"end": 3400,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3392,
											"end": 3400,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 3329,
											"end": 3401,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "tag",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3401,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "tag",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3401,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "tag",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 3329,
											"end": 3401,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3417,
											"end": 3472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10140,
											"end": 10165,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10239,
											"end": 10254,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 10239,
											"end": 10254,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10219,
											"end": 10237,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10212,
											"end": 10255,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3458,
											"end": 3462,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10338,
											"end": 10340,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10350,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 18,
											"value": "62AF98DBC3627E85C5EB929B032D3CE3D6C376652D71B4CCA6162A16EF099114"
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10127,
											"end": 10130,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3472,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3417,
											"end": 3472,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 18
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2903,
											"end": 3479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12555,
											"end": 12557,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12537,
											"end": 12558,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12594,
											"end": 12596,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 12574,
											"end": 12592,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12574,
											"end": 12592,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12574,
											"end": 12592,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12567,
											"end": 12597,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12633,
											"end": 12666,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12606,
											"end": 12667,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 12353,
											"end": 12708,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12915,
											"end": 12917,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12897,
											"end": 12918,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12954,
											"end": 12956,
											"name": "PUSH",
											"source": 19,
											"value": "1B"
										},
										{
											"begin": 12934,
											"end": 12952,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12934,
											"end": 12952,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12934,
											"end": 12952,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12927,
											"end": 12957,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12993,
											"end": 13022,
											"name": "PUSH",
											"source": 19,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 12973,
											"end": 12991,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 12973,
											"end": 12991,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12973,
											"end": 12991,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12966,
											"end": 13023,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 12713,
											"end": 13064,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5318,
											"end": 5521,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5514,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5482,
											"end": 5514,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5318,
											"end": 5521,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5318,
											"end": 5521,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5514,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5482,
											"end": 5514,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5437,
											"end": 5455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5318,
											"end": 5521,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 383,
											"end": 633,
											"name": "tag",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 383,
											"end": 633,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 468,
											"end": 469,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 591,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 478,
											"end": 591,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 486,
											"end": 499,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 478,
											"end": 591,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 478,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 478,
											"end": 591,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 568,
											"end": 579,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 568,
											"end": 579,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 568,
											"end": 579,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 562,
											"end": 580,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 549,
											"end": 560,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 549,
											"end": 560,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 549,
											"end": 560,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 542,
											"end": 581,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 478,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 478,
											"end": 591,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 478,
											"end": 591,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 478,
											"end": 591,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 623,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 607,
											"end": 623,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 600,
											"end": 627,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 383,
											"end": 633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 638,
											"end": 1117,
											"name": "tag",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 638,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 686,
											"end": 689,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 735,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 736,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 752,
											"end": 755,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 745,
											"end": 762,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 791,
											"end": 803,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 785,
											"end": 804,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 824,
											"end": 827,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 820,
											"end": 834,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 813,
											"end": 843,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 852,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 921,
											"end": 924,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 916,
											"end": 919,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 912,
											"end": 925,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 905,
											"end": 909,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 903,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 887,
											"end": 910,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 852,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 852,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 852,
											"end": 934,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 852,
											"end": 934,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 988,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 972,
											"end": 988,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 972,
											"end": 988,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 966,
											"end": 989,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 950,
											"end": 964,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 950,
											"end": 964,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 950,
											"end": 964,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 943,
											"end": 990,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1044,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1028,
											"end": 1044,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1028,
											"end": 1044,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1022,
											"end": 1045,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1020,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1020,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 999,
											"end": 1046,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 999,
											"end": 1046,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 999,
											"end": 1046,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 999,
											"end": 1046,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 638,
											"end": 1117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1122,
											"end": 2647,
											"name": "tag",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 1122,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1191,
											"end": 1194,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1225,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1279,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1288,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1311,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1331,
											"end": 1334,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1320,
											"end": 1339,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 1320,
											"end": 1339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 1375,
											"end": 1389,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1364,
											"end": 1390,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1360,
											"end": 1395,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1418,
											"end": 1432,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1481,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1565,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1589,
											"end": 1602,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1589,
											"end": 1602,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1676,
											"end": 1699,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1676,
											"end": 1699,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1738,
											"end": 1749,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1738,
											"end": 1749,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1738,
											"end": 1749,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1827,
											"end": 1848,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1827,
											"end": 1848,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1827,
											"end": 1848,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1805,
											"end": 1849,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1932,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1921,
											"end": 1932,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1921,
											"end": 1932,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1911,
											"end": 1938,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1911,
											"end": 1938,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1911,
											"end": 1938,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1896,
											"end": 1909,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1896,
											"end": 1909,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1896,
											"end": 1909,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 1939,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2007,
											"end": 2018,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2007,
											"end": 2018,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2007,
											"end": 2018,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1986,
											"end": 1999,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1979,
											"end": 2020,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2088,
											"end": 2099,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2088,
											"end": 2099,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2088,
											"end": 2099,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2067,
											"end": 2080,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2067,
											"end": 2080,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2067,
											"end": 2080,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2060,
											"end": 2101,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2141,
											"end": 2182,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 2266,
											"end": 2278,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2266,
											"end": 2278,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2266,
											"end": 2278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2253,
											"end": 2280,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2246,
											"end": 2281,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2323,
											"end": 2334,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2323,
											"end": 2334,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2323,
											"end": 2334,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 2355,
											"end": 2370,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2355,
											"end": 2370,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2375,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2375,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2348,
											"end": 2375,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2402,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 2442,
											"end": 2455,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2442,
											"end": 2455,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2442,
											"end": 2455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2402,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 2402,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2402,
											"end": 2456,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 2402,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2501,
											"end": 2512,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2501,
											"end": 2512,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2469,
											"end": 2514,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 2469,
											"end": 2514,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2469,
											"end": 2514,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 2469,
											"end": 2514,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": 2388,
											"end": 2456,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1489,
											"end": 1498,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 1460,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2641,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 2641,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 1122,
											"end": 2647,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2652,
											"end": 3285,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 2652,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 3139,
											"end": 3141,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3137,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 3071,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "tag",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 3071,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3183,
											"end": 3189,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3179,
											"end": 3201,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3174,
											"end": 3176,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3152,
											"end": 3202,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3219,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3219,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 3219,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3219,
											"end": 3279,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 3219,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3211,
											"end": 3279,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 2652,
											"end": 3285,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3470,
											"name": "tag",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 3290,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3377,
											"end": 3400,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 3370,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3464,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3441,
											"end": 3464,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3470,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3761,
											"end": 3784,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3757,
											"end": 3789,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 3844,
											"end": 3853,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 3825,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 3825,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3815,
											"end": 3854,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4786,
											"end": 5034,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 4786,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4915,
											"end": 4917,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 4913,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4883,
											"end": 4935,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4883,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 4883,
											"end": 4935,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4883,
											"end": 4935,
											"name": "tag",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 4883,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4954,
											"end": 4977,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4954,
											"end": 4977,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4954,
											"end": 4977,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4996,
											"end": 5028,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4996,
											"end": 5028,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4786,
											"end": 5034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5526,
											"end": 5923,
											"name": "tag",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 5526,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5689,
											"end": 5692,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5668,
											"end": 5675,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5664,
											"end": 5687,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5660,
											"end": 5693,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5657,
											"end": 5710,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5657,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 5657,
											"end": 5710,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5657,
											"end": 5710,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 5657,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5729,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 5748,
											"end": 5757,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5729,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 5729,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5729,
											"end": 5758,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 5729,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5719,
											"end": 5758,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5719,
											"end": 5758,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5777,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5777,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 5777,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5777,
											"end": 5815,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 5777,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5526,
											"end": 5923,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5526,
											"end": 5923,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 5767,
											"end": 5815,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5767,
											"end": 5815,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5862,
											"end": 5864,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5834,
											"end": 5866,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5834,
											"end": 5866,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5913,
											"end": 5915,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5898,
											"end": 5916,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5885,
											"end": 5917,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5885,
											"end": 5917,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5526,
											"end": 5923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5928,
											"end": 6055,
											"name": "tag",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 5928,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5989,
											"end": 5999,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 5984,
											"end": 5987,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 5980,
											"end": 6000,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 6001,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6020,
											"end": 6024,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6025,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6041,
											"end": 6042,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6060,
											"end": 6195,
											"name": "tag",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 6060,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6099,
											"end": 6102,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6137,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 6120,
											"end": 6137,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6120,
											"end": 6137,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 6176,
											"end": 6189,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6176,
											"end": 6189,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6060,
											"end": 6195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6200,
											"end": 6327,
											"name": "tag",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 6200,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6261,
											"end": 6271,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 6256,
											"end": 6259,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 6252,
											"end": 6272,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 6249,
											"end": 6250,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6242,
											"end": 6273,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6292,
											"end": 6296,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 6289,
											"end": 6290,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6282,
											"end": 6297,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6321,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6332,
											"end": 6585,
											"name": "tag",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 6332,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6404,
											"end": 6406,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6407,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 6434,
											"end": 6451,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6434,
											"end": 6451,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6525,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 6460,
											"end": 6548,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6460,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 6460,
											"end": 6548,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 6528,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6579,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6332,
											"end": 6585,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6332,
											"end": 6585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6590,
											"end": 6865,
											"name": "tag",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 6590,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6661,
											"end": 6663,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6664,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 6707,
											"end": 6720,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6707,
											"end": 6720,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6703,
											"end": 6730,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6691,
											"end": 6731,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6691,
											"end": 6731,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6746,
											"end": 6780,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6746,
											"end": 6780,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 6804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 6804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6782,
											"end": 6804,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6743,
											"end": 6805,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 6740,
											"end": 6828,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6740,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 6740,
											"end": 6828,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 6808,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6844,
											"end": 6846,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6859,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6590,
											"end": 6865,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6590,
											"end": 6865,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6590,
											"end": 6865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6870,
											"end": 8909,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 6870,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6988,
											"end": 6994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7021,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7037,
											"end": 7060,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7033,
											"end": 7065,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7030,
											"end": 7082,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7030,
											"end": 7082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 7030,
											"end": 7082,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7078,
											"end": 7079,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7068,
											"end": 7080,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7030,
											"end": 7082,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 7030,
											"end": 7082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7111,
											"end": 7120,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7140,
											"end": 7158,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7183,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7170,
											"end": 7184,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7167,
											"end": 7201,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7167,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 7167,
											"end": 7201,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7194,
											"end": 7195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7187,
											"end": 7199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7167,
											"end": 7201,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 7167,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7235,
											"end": 7241,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7220,
											"end": 7242,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7210,
											"end": 7242,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7210,
											"end": 7242,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7280,
											"end": 7287,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 7269,
											"end": 7271,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7265,
											"end": 7278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7261,
											"end": 7288,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7251,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 7251,
											"end": 7306,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7292,
											"end": 7304,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7251,
											"end": 7306,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 7251,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7325,
											"end": 7334,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7353,
											"end": 7355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7349,
											"end": 7351,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7346,
											"end": 7356,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7343,
											"end": 7379,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7343,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 7343,
											"end": 7379,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7359,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 7359,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 7359,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7359,
											"end": 7377,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 7359,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7405,
											"end": 7407,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 7398,
											"end": 7408,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 7428,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 7452,
											"end": 7454,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7444,
											"end": 7455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7428,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 7428,
											"end": 7456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7428,
											"end": 7456,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 7428,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7505,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7505,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7505,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7560,
											"end": 7571,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7560,
											"end": 7571,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7560,
											"end": 7571,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 7533,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 7533,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 7533,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7521,
											"end": 7533,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7607,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7607,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7607,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7610,
											"end": 7622,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 7585,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7648,
											"end": 7650,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7644,
											"end": 7655,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7633,
											"end": 7655,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7633,
											"end": 7655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7675,
											"end": 7678,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7672,
											"end": 7687,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7759,
											"end": 7762,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7795,
											"end": 7797,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7782,
											"end": 7793,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7779,
											"end": 7798,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7801,
											"end": 7813,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 7776,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7838,
											"end": 7858,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7838,
											"end": 7858,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7935,
											"end": 7939,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7908,
											"end": 7933,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7908,
											"end": 7933,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7904,
											"end": 7940,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7901,
											"end": 7957,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7901,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 7901,
											"end": 7957,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7951,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7943,
											"end": 7955,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7901,
											"end": 7957,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 7901,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7983,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 7983,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 7983,
											"end": 8005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7983,
											"end": 8005,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 7983,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8042,
											"end": 8044,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8038,
											"end": 8049,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8030,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8018,
											"end": 8051,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8119,
											"end": 8121,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8111,
											"end": 8122,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8142,
											"end": 8150,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8139,
											"end": 8155,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8136,
											"end": 8172,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8136,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 8136,
											"end": 8172,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8168,
											"end": 8169,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8158,
											"end": 8170,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8136,
											"end": 8172,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 8136,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8195,
											"end": 8212,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8195,
											"end": 8212,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8247,
											"end": 8249,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 8239,
											"end": 8250,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8239,
											"end": 8250,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8235,
											"end": 8260,
											"name": "DUP16",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 8225,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 8225,
											"end": 8278,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8272,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8225,
											"end": 8278,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 8225,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8316,
											"end": 8318,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8308,
											"end": 8319,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8344,
											"end": 8346,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 8339,
											"end": 8342,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8336,
											"end": 8347,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8333,
											"end": 8370,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8333,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 8333,
											"end": 8370,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 8350,
											"end": 8368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 8436,
											"end": 8438,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8429,
											"end": 8433,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8424,
											"end": 8427,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8420,
											"end": 8434,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8416,
											"end": 8439,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 8412,
											"end": 8444,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 8396,
											"end": 8445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8445,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 8396,
											"end": 8445,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8383,
											"end": 8445,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 8383,
											"end": 8445,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8475,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8465,
											"end": 8470,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8458,
											"end": 8476,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8518,
											"end": 8525,
											"name": "DUP16",
											"source": 19
										},
										{
											"begin": 8513,
											"end": 8515,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8507,
											"end": 8510,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8499,
											"end": 8511,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8495,
											"end": 8516,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8492,
											"end": 8526,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8489,
											"end": 8543,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8489,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 8489,
											"end": 8543,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8529,
											"end": 8541,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8489,
											"end": 8543,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 8489,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8556,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 8620,
											"end": 8623,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8615,
											"end": 8617,
											"name": "DUP15",
											"source": 19
										},
										{
											"begin": 8608,
											"end": 8613,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8604,
											"end": 8618,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8599,
											"end": 8601,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8595,
											"end": 8597,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8591,
											"end": 8602,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8556,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 8556,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8556,
											"end": 8624,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 8556,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8644,
											"end": 8658,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8644,
											"end": 8658,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 8644,
											"end": 8658,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8637,
											"end": 8666,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8637,
											"end": 8666,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8637,
											"end": 8666,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8637,
											"end": 8666,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8690,
											"end": 8692,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8734,
											"end": 8746,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8734,
											"end": 8746,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8734,
											"end": 8746,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8728,
											"end": 8747,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8712,
											"end": 8726,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8712,
											"end": 8726,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8712,
											"end": 8726,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8705,
											"end": 8748,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8705,
											"end": 8748,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8705,
											"end": 8748,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8705,
											"end": 8748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 8791,
											"end": 8804,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8791,
											"end": 8804,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8791,
											"end": 8804,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8785,
											"end": 8805,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8761,
											"end": 8806,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7697,
											"end": 7709,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7697,
											"end": 7709,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7697,
											"end": 7709,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7697,
											"end": 7709,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8857,
											"end": 8869,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8857,
											"end": 8869,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8857,
											"end": 8869,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8857,
											"end": 8869,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 7664,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8898,
											"end": 8903,
											"name": "SWAP10",
											"source": 19
										},
										{
											"begin": 6870,
											"end": 8909,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6870,
											"end": 8909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8914,
											"end": 9041,
											"name": "tag",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 8914,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8975,
											"end": 8985,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 8970,
											"end": 8973,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 8966,
											"end": 8986,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 8963,
											"end": 8964,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8987,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 9003,
											"end": 9004,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 8996,
											"end": 9011,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9030,
											"end": 9034,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9035,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9046,
											"end": 9174,
											"name": "tag",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 9046,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9113,
											"end": 9122,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9113,
											"end": 9122,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9113,
											"end": 9122,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9134,
											"end": 9145,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9134,
											"end": 9145,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9134,
											"end": 9145,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9131,
											"end": 9168,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9131,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 9131,
											"end": 9168,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 9148,
											"end": 9166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9904,
											"name": "tag",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 9529,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9787,
											"end": 9802,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9787,
											"end": 9802,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9787,
											"end": 9802,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9769,
											"end": 9803,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9769,
											"end": 9803,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9839,
											"end": 9854,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9839,
											"end": 9854,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9839,
											"end": 9854,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9839,
											"end": 9854,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9834,
											"end": 9836,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9812,
											"end": 9855,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9864,
											"end": 9898,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9864,
											"end": 9898,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9864,
											"end": 9898,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9864,
											"end": 9898,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13069,
											"end": 13346,
											"name": "tag",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 13069,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13136,
											"end": 13142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13189,
											"end": 13191,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13168,
											"end": 13175,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13164,
											"end": 13187,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13160,
											"end": 13192,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 13157,
											"end": 13209,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13157,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 13157,
											"end": 13209,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13205,
											"end": 13206,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13202,
											"end": 13203,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13195,
											"end": 13207,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 13157,
											"end": 13209,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 13157,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13237,
											"end": 13246,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13231,
											"end": 13247,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 13290,
											"end": 13295,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13283,
											"end": 13296,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13276,
											"end": 13297,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13274,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13266,
											"end": 13298,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 13256,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 13256,
											"end": 13316,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13312,
											"end": 13313,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13310,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13302,
											"end": 13314,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 13351,
											"end": 13638,
											"name": "tag",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 13351,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13518,
											"end": 13524,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13512,
											"end": 13525,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 13534,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13588,
											"end": 13591,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13581,
											"end": 13585,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13573,
											"end": 13579,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13534,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 13534,
											"end": 13600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13534,
											"end": 13600,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 13534,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13616,
											"end": 13632,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13616,
											"end": 13632,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13616,
											"end": 13632,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13616,
											"end": 13632,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13616,
											"end": 13632,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13351,
											"end": 13638,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13351,
											"end": 13638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/MarketplaceFinal.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CancelOffer(uint256)": "4e455dbe",
							"ListNft(address,address,uint256,uint256)": "f33c4061",
							"_idToNFT(address,uint256)": "2791a4d0",
							"_nftCount()": "d6cbb202",
							"buyNft(uint256,uint256)": "556f8084",
							"getListedNfts(address)": "0d909886",
							"listCount(uint256)": "8d02f792",
							"nftAuctionCount()": "6617b35d",
							"nftDetail(address,uint256)": "293c6ae1",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"userListCount(uint256)": "1e903868"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTCancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIndex\",\"type\":\"uint256\"}],\"name\":\"CancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mintContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ListNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_idToNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"buyNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"getListedNfts\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.NFT\",\"name\":\"listedData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.Token\",\"name\":\"tokenDetail\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"listCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.ListedNftTokenId[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.NFT\",\"name\":\"listedData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.Token\",\"name\":\"tokenDetail\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"listCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.ListedNftTokenId[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listCount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAuctionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"nftDetail\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"onList\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userListCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MarketPlace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dispatch_AI/MarketplaceFinal.sol\":\"Marketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x44cee4d4c4cf77ea4da3fa6fefe80b1ac0eb29e6d0930ba56ba392dce4c959f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda84cf5780abd86e477ff164656b12e3a79be7bec2979e05048291d107c34c8\",\"dweb:/ipfs/QmPSdqJShPAAPqwLw1dT3SCYhHKWn5w9ThzfGpVkCVDkfh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Dispatch_AI/MarketplaceFinal.sol\":{\"keccak256\":\"0x42f5dcf6894acc0e589d4f9d3f01fdbd42e0a142efed8c5b4d7eedbcd3c907c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8013f13a329a9a88ed3ae65b28c0ae36ae0d877bce27c81b28f0d8de00ee4f89\",\"dweb:/ipfs/QmcStNqsqm7iX8cocaKBbH695PDvGwxCaGvwDQ49ZKFshD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 3781,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "_nftCount",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)2206_storage"
							},
							{
								"astId": 3784,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "nftAuctionCount",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)2206_storage"
							},
							{
								"astId": 3786,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 3793,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "_idToNFT",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFT)3817_storage))"
							},
							{
								"astId": 3798,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "listCount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(addressToken)3829_storage)"
							},
							{
								"astId": 3802,
								"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
								"label": "userListCount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(NFT)3817_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct Marketplace.NFT))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(NFT)3817_storage)"
							},
							"t_mapping(t_uint256,t_struct(NFT)3817_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)3817_storage"
							},
							"t_mapping(t_uint256,t_struct(addressToken)3829_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.addressToken)",
								"numberOfBytes": "32",
								"value": "t_struct(addressToken)3829_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)2206_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2205,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFT)3817_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.NFT",
								"members": [
									{
										"astId": 3804,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3806,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3808,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "owner",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 3810,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3812,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "count",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3814,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "listTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3816,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "listed",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(addressToken)3829_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.addressToken",
								"members": [
									{
										"astId": 3826,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3828,
										"contract": "contracts/Dispatch_AI/MarketplaceFinal.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2200
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 2201,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2200,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2200,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								2200
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							427
						]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 427,
							"linearizedBaseContracts": [
								427
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 361,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 370,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 427,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 427,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 427,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 427,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 427,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 427,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 428,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								361,
								370
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							463
						]
					},
					"id": 464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 463,
							"linearizedBaseContracts": [
								463
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 440,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 463,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 463,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 463,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 464,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2178
						],
						"IERC20": [
							427
						],
						"IERC20Permit": [
							463
						],
						"SafeERC20": [
							753
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 465,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 428,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 427,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 464,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 463,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 2179,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 470,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2178,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 475,
									"libraryName": {
										"id": 473,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2178,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 480,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 489,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 504,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 394,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 506,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 502,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 500,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 491,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 427,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 753,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 530,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 532,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 533,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 534,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 526,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 515,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 427,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 753,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 557,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 564,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 566,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 427,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 753,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 612,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 612,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 592,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 588,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 586,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 590,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 594,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 602,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 597,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 577,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 598,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 599,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 596,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 601,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 605,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 606,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 607,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 608,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 604,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 611,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 573,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 427,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 753,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 625,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 629,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 631,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 632,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 633,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 627,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 637,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 638,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 636,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 642,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$427",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 414,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 647,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 620,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 649,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 643,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 641,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 652,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 654,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 655,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 653,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 427,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 753,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 670,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1999,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 680,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 686,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 696,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$427",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$427",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 694,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 693,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 427,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 753,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													715,
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 714,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 716,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 727,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 733,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 734,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 736,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 731,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$427",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$427",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 713,
												"id": 750,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 427,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 753,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "751:5018:5",
							"usedErrors": [
								480,
								489
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2200
						],
						"ERC165": [
							2553
						],
						"ERC721": [
							1762
						],
						"IERC165": [
							2565
						],
						"IERC721": [
							1879
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1925
						],
						"IERC721Receiver": [
							1897
						],
						"Strings": [
							2529
						]
					},
					"id": 1763,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1880,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 756,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1898,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 758,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1897,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1926,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 760,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1925,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2201,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 762,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2200,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2530,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2529,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2554,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 766,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 767,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2553,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 285,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2200,
										"src": "804:7:6"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2553,
										"src": "813:6:6"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "821:7:6"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1925,
										"src": "830:15:6"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:6"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1762,
							"linearizedBaseContracts": [
								1762,
								237,
								1925,
								1879,
								2553,
								2565,
								2200
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 784,
									"libraryName": {
										"id": 782,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2529,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 786,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 785,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 787,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 791,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 789,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 790,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 795,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 794,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 799,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 806,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 805,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 804,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 802,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 803,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 815,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 819,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 823,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1762,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2552,
										2564
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1879_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1879_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 835,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1879",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 842,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1925_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1925_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 841,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1925",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 849,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 847,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1762_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2552,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 833,
												"id": 852,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 830,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 828,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2553,
												"src": "1637:6:6"
											},
											{
												"id": 829,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2565,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 825,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1762,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1804
									],
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 868,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 877,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 879,
													"indexExpression": {
														"id": 878,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 861,
												"id": 880,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1762,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1812
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 889,
												"id": 893,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1762,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1910
									],
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 901,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 900,
												"id": 902,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1762,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 910,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 909,
												"id": 911,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1762,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1924
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 921,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 925,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 927,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 932,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 940,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 941,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2342,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 937,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 920,
												"id": 947,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1762,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 954,
												"id": 956,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1762,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1852
									],
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 969,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 966,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1631
														],
														"referencedDeclaration": 1565,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1762,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1868
									],
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 981,
												"id": 989,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1762,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1860
									],
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1000,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 999,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1762,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1878
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1017,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1019,
														"indexExpression": {
															"id": 1018,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1021,
													"indexExpression": {
														"id": 1020,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1022,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1762,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1844
									],
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1034,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1035,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1041,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1040,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1046,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1049,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [
														{
															"id": 1052,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1054,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1051,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1059,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1062,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1063,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1064,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1061,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1762,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1080,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1088,
															1114
														],
														"referencedDeclaration": 1114,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1762,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1824
									],
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1110,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1106,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1762,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1122,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1124,
													"indexExpression": {
														"id": 1123,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1125,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1762,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1135,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1137,
													"indexExpression": {
														"id": 1136,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1138,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1762,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1158,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1159,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1162,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1163,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1161,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1167,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1166,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1169,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1172,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1174,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1762,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1187,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1188,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1189,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1186,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1193,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1208,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1204,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1205,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1203,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1207,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 1209,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 1202,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1199,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1198,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1201,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1762,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1221,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1223,
																"indexExpression": {
																	"id": 1222,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1224,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1226,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1217,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1762,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1241,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": {
													"arguments": [
														{
															"id": 1244,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1247,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1248,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1256,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1253,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 1287,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1268,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1273,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1267,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1565,
																		1631
																	],
																	"referencedDeclaration": 1631,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 1286,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1280,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1282,
																			"indexExpression": {
																				"id": 1281,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1285,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1290,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 1301,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1295,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1297,
																			"indexExpression": {
																				"id": 1296,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1304,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1306,
														"indexExpression": {
															"id": 1305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 1316,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1242,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1317,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1762,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "10025:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "10039:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10053:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10045:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10045:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10045:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10039:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "10035:87:6",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "10057:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10108:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10100:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10100:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10100:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1333,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10078:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10078:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1339,
															"nodeType": "RevertStatement",
															"src": "10071:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10139:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "10131:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10131:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"id": 1345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "10163:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "10167:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10184:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10176:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10176:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10176:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1344,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "10155:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10155:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10131:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1353,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "10201:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10226:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10218:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1354,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10218:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10218:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10201:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "10197:96:6",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "10230:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10279:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10271:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1360,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10271:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10271:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1359,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10251:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10251:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1365,
															"nodeType": "RevertStatement",
															"src": "10244:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "9639:328:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\nsetApprovalForAll\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9981:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9995:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "9987:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9987:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10007:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "9999:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9986:29:6"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10025:0:6"
									},
									"scope": 1762,
									"src": "9972:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "10707:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "10727:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "10731:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10740:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1377,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1410
														],
														"referencedDeclaration": 1410,
														"src": "10717:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10717:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "10717:26:6"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "10305:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10659:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10677:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10669:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10689:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10681:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10681:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10668:29:6"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10707:0:6"
									},
									"scope": 1762,
									"src": "10650:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "11055:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "11071:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11075:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "11065:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11065:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "11065:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11124:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11116:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11116:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11116:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "11128:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11132:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11141:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1399,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "11093:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11093:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "11093:53:6"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "10756:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10980:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10998:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "10990:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11010:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11002:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11032:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11019:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11019:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10989:48:6"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11055:0:6"
									},
									"scope": 1762,
									"src": "10971:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "11520:186:6",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11538:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "11530:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11530:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11570:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11562:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11562:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11562:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "11574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11591:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11583:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11583:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11583:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1418,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11554:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11554:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11530:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1430,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "11608:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11625:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11625:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11625:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11608:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "11604:96:6",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "11637:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1437,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "11681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1436,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11658:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11658:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1439,
															"nodeType": "RevertStatement",
															"src": "11651:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "11159:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11488:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11502:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "11494:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11493:17:6"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11520:0:6"
									},
									"scope": 1762,
									"src": "11479:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "12101:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "12115:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12129:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1454,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12121:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12121:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12115:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "12111:87:6",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "12133:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12184:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12176:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1460,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12176:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12176:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1459,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12154:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12154:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1465,
															"nodeType": "RevertStatement",
															"src": "12147:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12215:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "12207:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12207:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1471,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "12239:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "12243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12260:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12252:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12252:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12252:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1470,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "12231:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12231:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12207:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1479,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "12277:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12302:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12294:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12294:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12277:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1490,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "12379:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "12396:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12379:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1500,
													"nodeType": "IfStatement",
													"src": "12375:109:6",
													"trueBody": {
														"id": 1499,
														"nodeType": "Block",
														"src": "12402:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1494,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "12444:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1495,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "12450:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1496,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "12459:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1493,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12423:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12423:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1498,
																"nodeType": "RevertStatement",
																"src": "12416:57:6"
															}
														]
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "12273:211:6",
												"trueBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "12306:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1486,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "12350:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1485,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12327:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12327:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1488,
															"nodeType": "RevertStatement",
															"src": "12320:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "11712:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12039:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12057:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12049:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12049:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12071:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12063:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12063:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12083:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12075:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12048:43:6"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12101:0:6"
									},
									"scope": 1762,
									"src": "12030:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "13498:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1514,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "13522:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "13528:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1516,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "13532:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13541:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1513,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1521,
															1547
														],
														"referencedDeclaration": 1547,
														"src": "13508:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13508:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "13508:36:6"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "12496:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13432:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13454:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13446:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13446:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13468:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13460:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13480:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13472:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13445:43:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13498:0:6"
									},
									"scope": 1762,
									"src": "13423:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "13890:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "13910:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13916:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1536,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13920:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "13900:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13900:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "13900:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "13961:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13967:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13971:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13980:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1539,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "13938:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13938:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "13938:47:6"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "13557:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13797:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13819:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13811:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13811:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13833:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13825:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13845:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13837:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13837:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13867:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13854:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13854:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13810:62:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13890:0:6"
									},
									"scope": 1762,
									"src": "13788:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "14505:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "14524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "14528:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1560,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "14537:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14543:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1557,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1631
														],
														"referencedDeclaration": 1631,
														"src": "14515:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14515:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "14515:33:6"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "13998:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14444:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14461:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14453:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14473:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14465:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14490:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14482:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14452:43:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14505:0:6"
									},
									"scope": 1762,
									"src": "14435:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "14831:567:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "14897:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1578,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "14910:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14926:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14918:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14918:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14918:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14910:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14897:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "14893:460:6",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "14930:423:6",
													"statements": [
														{
															"assignments": [
																1586
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1586,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14952:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1622,
																	"src": "14944:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14944:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1590,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1588,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "14974:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1587,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14960:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14960:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14944:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "15110:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15126:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15118:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1592,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15118:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15118:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15110:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1597,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "15132:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1598,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "15141:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15132:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15110:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15149:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1602,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1586,
																				"src": "15167:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1603,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "15174:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1601,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "15150:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15150:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15110:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1612,
															"nodeType": "IfStatement",
															"src": "15106:142:6",
															"trueBody": {
																"id": 1611,
																"nodeType": "Block",
																"src": "15181:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1608,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "15228:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1607,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15206:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15206:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1610,
																		"nodeType": "RevertStatement",
																		"src": "15199:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1613,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "15266:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1621,
															"nodeType": "IfStatement",
															"src": "15262:81:6",
															"trueBody": {
																"id": 1620,
																"nodeType": "Block",
																"src": "15277:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1615,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "15309:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1616,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "15316:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1617,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "15320:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1614,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "15300:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15300:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1619,
																		"nodeType": "EmitStatement",
																		"src": "15295:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1624,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "15362:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "15378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15362:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1627,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "15389:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15362:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "15362:29:6"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "14561:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14746:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14763:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14755:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14755:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14775:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14767:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14792:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14784:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14803:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14798:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14798:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14754:59:6"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14831:0:6"
									},
									"scope": 1762,
									"src": "14737:661:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "15700:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "15714:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15726:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1642,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15726:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15726:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15714:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "15710:91:6",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "15738:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "15781:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1647,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15759:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15759:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "15752:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1653,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "15810:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1656,
															"indexExpression": {
																"id": 1654,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "15829:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15810:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1657,
														"indexExpression": {
															"id": 1655,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15810:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1658,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "15848:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15810:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "15810:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1662,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "15886:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15893:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15903:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1661,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "15871:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15871:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "EmitStatement",
												"src": "15866:46:6"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "15404:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15616:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15643:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15635:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15658:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15650:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15650:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15673:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15668:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15668:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15634:48:6"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15700:0:6"
									},
									"scope": 1762,
									"src": "15607:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "16226:169:6",
										"statements": [
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16244:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "16236:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1676,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16236:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "16261:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "16252:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16252:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16236:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "16283:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16300:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16292:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16292:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16292:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16283:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1693,
												"nodeType": "IfStatement",
												"src": "16279:88:6",
												"trueBody": {
													"id": 1692,
													"nodeType": "Block",
													"src": "16304:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1689,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "16348:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1688,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16325:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16325:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1691,
															"nodeType": "RevertStatement",
															"src": "16318:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1694,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1677,
													"src": "16383:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1695,
												"nodeType": "Return",
												"src": "16376:12:6"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "15925:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16163:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16185:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "16177:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16176:17:6"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "16217:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16216:9:6"
									},
									"scope": 1762,
									"src": "16154:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "17036:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1709,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "17050:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17053:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17050:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17058:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17050:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17067:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17050:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1759,
												"nodeType": "IfStatement",
												"src": "17046:664:6",
												"trueBody": {
													"id": 1758,
													"nodeType": "Block",
													"src": "17070:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1738,
																		"nodeType": "Block",
																		"src": "17184:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1727,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1725,
																						"src": "17206:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1728,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1897,
																								"src": "17216:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1897_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1729,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17232:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1896,
																							"src": "17216:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17249:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17216:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17206:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1737,
																				"nodeType": "IfStatement",
																				"src": "17202:130:6",
																				"trueBody": {
																					"id": 1736,
																					"nodeType": "Block",
																					"src": "17259:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1733,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1702,
																										"src": "17310:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1732,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17288:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1734,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17288:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1735,
																							"nodeType": "RevertStatement",
																							"src": "17281:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1739,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1726,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1725,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17176:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1739,
																				"src": "17169:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1724,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17169:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17168:15:6"
																	},
																	"src": "17160:186:6"
																},
																{
																	"block": {
																		"id": 1755,
																		"nodeType": "Block",
																		"src": "17375:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1743,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1741,
																							"src": "17397:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17404:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17397:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17414:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17397:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1753,
																					"nodeType": "Block",
																					"src": "17496:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17582:86:6",
																								"nodeType": "YulBlock",
																								"src": "17582:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17619:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17619:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17623:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17623:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17615:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17615:3:6"
																													},
																													"nativeSrc": "17615:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17615:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17638:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17638:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17632:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17632:5:6"
																													},
																													"nativeSrc": "17632:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17632:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17608:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17608:6:6"
																											},
																											"nativeSrc": "17608:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17608:38:6"
																										},
																										"nativeSrc": "17608:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17608:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1741,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17623:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1741,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17638:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1752,
																							"nodeType": "InlineAssembly",
																							"src": "17573:95:6"
																						}
																					]
																				},
																				"id": 1754,
																				"nodeType": "IfStatement",
																				"src": "17393:293:6",
																				"trueBody": {
																					"id": 1751,
																					"nodeType": "Block",
																					"src": "17417:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1748,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1702,
																										"src": "17468:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1747,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17446:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1749,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17446:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1750,
																							"nodeType": "RevertStatement",
																							"src": "17439:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1756,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1742,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1741,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17367:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1756,
																				"src": "17354:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1740,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17354:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17353:21:6"
																	},
																	"src": "17347:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1718,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "17125:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17125:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "17139:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "17145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1722,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "17154:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1715,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "17104:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1714,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "17088:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1897_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17088:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1897",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17108:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1896,
																	"src": "17088:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17088:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1757,
															"nodeType": "TryStatement",
															"src": "17084:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "16401:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16943:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16974:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16966:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16988:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16980:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16980:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17000:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16992:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16992:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17022:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "17009:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17009:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16965:62:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17036:0:6"
									},
									"scope": 1762,
									"src": "16934:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1763,
							"src": "776:16942:6",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "107:17612:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2565
						],
						"IERC721": [
							1879
						]
					},
					"id": 1880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1764,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2566,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1765,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1768,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2565,
										"src": "287:7:7"
									},
									"id": 1769,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1767,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1879,
							"linearizedBaseContracts": [
								1879,
								2565
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1778,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1787,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1796,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1879,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1879,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1879,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1879,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1879,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1879,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1879,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1879,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1879,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1880,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1897
						]
					},
					"id": 1898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1882,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1897,
							"linearizedBaseContracts": [
								1897
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1897,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1898,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1879
						],
						"IERC721Metadata": [
							1925
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 1880,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1900,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1903,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "357:7:9"
									},
									"id": 1904,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1902,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1925,
							"linearizedBaseContracts": [
								1925,
								1879,
								2565
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1925,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1925,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1925,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1926,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2178
						]
					},
					"id": 2179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1928,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2178,
							"linearizedBaseContracts": [
								2178
							],
							"name": "Address",
							"nameLocation": "203:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1933,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "349:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:10"
									},
									"src": "316:50:10"
								},
								{
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1938,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "475:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:10"
									},
									"src": "452:39:10"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1941,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:10"
									},
									"src": "591:24:10"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "1602:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1951,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																],
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1954,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "1640:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1964,
												"nodeType": "IfStatement",
												"src": "1612:109:10",
												"trueBody": {
													"id": 1963,
													"nodeType": "Block",
													"src": "1648:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1959,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1957,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1956,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "1669:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1962,
															"nodeType": "RevertStatement",
															"src": "1662:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1966,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "1732:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1965,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1973,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1967,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "1750:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1969,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "1772:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:10"
											},
											{
												"condition": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:10",
													"subExpression": {
														"id": 1974,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "1798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "IfStatement",
												"src": "1793:63:10",
												"trueBody": {
													"id": 1979,
													"nodeType": "Block",
													"src": "1807:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1976,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "1828:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1978,
															"nodeType": "RevertStatement",
															"src": "1821:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1550:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1577:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:10"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:10"
									},
									"scope": 2178,
									"src": "1531:331:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "2794:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1993,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "2833:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "2841:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1992,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "2811:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1991,
												"id": 1997,
												"nodeType": "Return",
												"src": "2804:45:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2727:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2743:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2780:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:10"
									},
									"scope": 2178,
									"src": "2705:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3293:279:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2013,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																],
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2016,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "3331:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "3303:108:10",
												"trueBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "3338:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2021,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2019,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2018,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "3359:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2024,
															"nodeType": "RevertStatement",
															"src": "3352:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													2028,
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3421:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2027,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3435:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2029,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "3488:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2031,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "3462:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2033,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "3481:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2039,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "3537:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2040,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "3545:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2041,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "3554:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2038,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "3510:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2043,
												"nodeType": "Return",
												"src": "3503:62:10"
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3211:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3227:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:10"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3279:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:10"
									},
									"scope": 2178,
									"src": "3180:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "3811:154:10",
										"statements": [
											{
												"assignments": [
													2056,
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3822:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2055,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3836:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2057,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"arguments": [
														{
															"id": 2061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3881:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2059,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "3863:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "3930:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "3938:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2067,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "3947:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2064,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "3903:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2069,
												"nodeType": "Return",
												"src": "3896:62:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3755:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:10"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3797:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:10"
									},
									"scope": 2178,
									"src": "3711:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "4203:156:10",
										"statements": [
											{
												"assignments": [
													2082,
													2084
												],
												"declarations": [
													{
														"constant": false,
														"id": 2082,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2096,
														"src": "4214:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2081,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2096,
														"src": "4228:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2083,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"initialValue": {
													"arguments": [
														{
															"id": 2087,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "4275:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2085,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "4255:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "4324:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2092,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "4332:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2093,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "4341:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2090,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "4297:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2080,
												"id": 2095,
												"nodeType": "Return",
												"src": "4290:62:10"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4136:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4152:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:10"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4189:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:10"
									},
									"scope": 2178,
									"src": "4106:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "4783:424:10",
										"statements": [
											{
												"condition": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:10",
													"subExpression": {
														"id": 2109,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "4798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "4857:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2116,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "5045:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2120,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2100,
																				"src": "5071:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2131,
															"nodeType": "IfStatement",
															"src": "5041:119:10",
															"trueBody": {
																"id": 2130,
																"nodeType": "Block",
																"src": "5096:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2127,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2100,
																					"src": "5138:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2126,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1938,
																				"src": "5121:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2129,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2132,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "5180:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2133,
															"nodeType": "Return",
															"src": "5173:17:10"
														}
													]
												},
												"id": 2135,
												"nodeType": "IfStatement",
												"src": "4793:408:10",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "4807:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2112,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "4829:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2111,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "4821:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4670:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4694:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4716:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:10"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4769:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:10"
									},
									"scope": 2178,
									"src": "4625:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "5509:122:10",
										"statements": [
											{
												"condition": {
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:10",
													"subExpression": {
														"id": 2147,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "5524:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "5583:42:10",
													"statements": [
														{
															"expression": {
																"id": 2154,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5604:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2146,
															"id": 2155,
															"nodeType": "Return",
															"src": "5597:17:10"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "5519:106:10",
												"trueBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "5533:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2150,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "5555:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2149,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "5547:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5433:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5447:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:10"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5495:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:10"
									},
									"scope": 2178,
									"src": "5407:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "5798:461:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2165,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "5874:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "6204:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2171,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "6225:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2173,
															"nodeType": "RevertStatement",
															"src": "6218:24:10"
														}
													]
												},
												"id": 2175,
												"nodeType": "IfStatement",
												"src": "5870:383:10",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "5897:301:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:10",
																"nodeType": "YulBlock",
																"src": "6055:133:10",
																"statements": [
																	{
																		"nativeSrc": "6073:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:10"
																			},
																			"nativeSrc": "6096:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:10",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:10",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:10"
																					},
																					"nativeSrc": "6137:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:10"
																			},
																			"nativeSrc": "6130:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:10"
																		},
																		"nativeSrc": "6130:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:10"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 2162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:10",
																	"valueSize": 1
																}
															],
															"id": 2169,
															"nodeType": "InlineAssembly",
															"src": "6046:142:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "5760:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:10"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:10"
									},
									"scope": 2178,
									"src": "5743:516:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2179,
							"src": "195:6066:10",
							"usedErrors": [
								1933,
								1938,
								1941
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2200
						]
					},
					"id": 2201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2181,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2200,
							"linearizedBaseContracts": [
								2200
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2186,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2188,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 2200,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2195,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2197,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 2200,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2201,
							"src": "624:235:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2274
						]
					},
					"id": 2275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2203,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2274,
							"linearizedBaseContracts": [
								2274
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2206,
									"members": [
										{
											"constant": false,
											"id": 2205,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2206,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 2274,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2214,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2205,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2216,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2207,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "844:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 2274,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 2230,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2224,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2205,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2229,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2219,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "964:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 2274,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													2239
												],
												"declarations": [
													{
														"constant": false,
														"id": 2239,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2259,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"expression": {
														"id": 2240,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2205,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2244,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 2258,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2250,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2205,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2257,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2233,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 2274,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2266,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2205,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2261,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 2274,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2275,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3619
						],
						"SignedMath": [
							3724
						],
						"Strings": [
							2529
						]
					},
					"id": 2530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 3620,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2277,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3619,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 3725,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2279,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3724,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2281,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2529,
							"linearizedBaseContracts": [
								2529
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2284,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2529,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2282,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2283,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2287,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2529,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2285,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2294,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 2340,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															2303
														],
														"declarations": [
															{
																"constant": false,
																"id": 2303,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2302,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2310,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2306,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2304,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3619,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3619_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3439,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															2312
														],
														"declarations": [
															{
																"constant": false,
																"id": 2312,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2311,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2317,
														"initialValue": {
															"arguments": [
																{
																	"id": 2315,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2313,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															2319
														],
														"declarations": [
															{
																"constant": false,
																"id": 2319,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2318,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2320,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2303,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2319,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 2321,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 2336,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 2323,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2319,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2284,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2319,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2297,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 2326,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2327,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2330,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2335,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 2334,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2337,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 2338,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2301,
														"id": 2339,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2529,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2362,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2345,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2360,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3724,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3724_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3723,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2359,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2350,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2349,
												"id": 2366,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2344,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2529,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 2386,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2380,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2371,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2378,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3619,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3619_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3561,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2376,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2388,
																	2471,
																	2491
																],
																"referencedDeclaration": 2471,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2375,
														"id": 2385,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2529,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2470,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2401,
												"initialValue": {
													"id": 2400,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2391,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													2403
												],
												"declarations": [
													{
														"constant": false,
														"id": 2403,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2470,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2402,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2412,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2407,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2404,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2413,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2415,
														"indexExpression": {
															"hexValue": "30",
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2418,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2419,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2421,
														"indexExpression": {
															"hexValue": "31",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2424,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 2453,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2439,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2403,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2441,
																	"indexExpression": {
																		"id": 2440,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2442,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2446,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2443,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2448,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2449,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2452,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2433,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"initializationExpression": {
													"assignments": [
														2426
													],
													"declarations": [
														{
															"constant": false,
															"id": 2426,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2454,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2425,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2432,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2428,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 2436,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2426,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2438,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2455,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2464,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 2463,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2459,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2460,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2393,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2458,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2462,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2467,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2465,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2397,
												"id": 2469,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2529,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2484,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2474,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2482,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2480,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2487,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2479,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2388,
															2471,
															2491
														],
														"referencedDeclaration": 2471,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2478,
												"id": 2489,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2529,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2527,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2503,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2494,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2501,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2508,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2506,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2515,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2494,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2513,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2512,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2521,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2496,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2519,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2518,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2526,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2529,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2530,
							"src": "251:2847:13",
							"usedErrors": [
								2294
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2553
						],
						"IERC165": [
							2565
						]
					},
					"id": 2554,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2554,
							"sourceUnit": 2566,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2532,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2535,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2565,
										"src": "687:7:14"
									},
									"id": 2536,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2534,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2553,
							"linearizedBaseContracts": [
								2553,
								2565
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2564
									],
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2544,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2539,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2546,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2565_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2565_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2545,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2565",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2543,
												"id": 2550,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2538,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2553,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2554,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2565
						]
					},
					"id": 2566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2555,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2556,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2565,
							"linearizedBaseContracts": [
								2565
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2558,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2565,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2566,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3619
						]
					},
					"id": 3620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2568,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3619,
							"linearizedBaseContracts": [
								3619
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2571,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2576,
									"members": [
										{
											"id": 2572,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2573,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2574,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2575,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2607,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2606,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2589
														],
														"declarations": [
															{
																"constant": false,
																"id": 2589,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2606,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2593,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2590,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2581,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2595,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2599,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2587,
															"id": 2600,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2603,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2604,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2587,
														"id": 2605,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3619,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2634,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2620,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2613,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2621,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2627,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2619,
															"id": 2626,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2629,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2630,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2632,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2619,
														"id": 2633,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2609,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3619,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2676,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2648,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2653,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2647,
															"id": 2654,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2657
														],
														"declarations": [
															{
																"constant": false,
																"id": 2657,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2676,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2661,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2658,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2659,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2662,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2663,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2671,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2669,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2647,
															"id": 2670,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2673,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2674,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2647,
														"id": 2675,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3619,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2704,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2690,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2697,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2689,
															"id": 2696,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2699,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2681,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2700,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2683,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2702,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2689,
														"id": 2703,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3619,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2732,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2718,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2711,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2725,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2723,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2717,
															"id": 2724,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2727,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2709,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2728,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2711,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2730,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2717,
														"id": 2731,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3619,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2744,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2745,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2748,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2739,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2747,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2743,
												"id": 2750,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3619,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2762,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2763,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2761,
												"id": 2768,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2753,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3619,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2792,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2780,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2781,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2775,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2783,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2784,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2785,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2787,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2779,
												"id": 2791,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3619,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2811,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2810,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2806,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2796,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2807,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2802,
															"id": 2809,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2812,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2816,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2796,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2802,
												"id": 2825,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2794,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3619,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2951,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2840
														],
														"declarations": [
															{
																"constant": false,
																"id": 2840,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2839,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2844,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2841,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2830,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2842,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2832,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2846
														],
														"declarations": [
															{
																"constant": false,
																"id": 2846,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2845,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2847,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2830,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2832,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2848,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2849,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2857,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2856,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2852,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2840,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2853,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2838,
																	"id": 2855,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2858,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2859,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2865,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2864,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2861,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2571,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2863,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2867
														],
														"declarations": [
															{
																"constant": false,
																"id": 2867,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2866,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2868,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2834,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2830,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2832,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2869,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2871
														],
														"declarations": [
															{
																"constant": false,
																"id": 2871,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2870,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2878,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2872,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2874,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2834,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2834,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2879,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2880,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2881,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2882,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2885,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2887
														],
														"declarations": [
															{
																"constant": false,
																"id": 2887,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2886,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2894,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2889,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2895,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2897,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2898,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2902,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2903,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2905,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2906,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2910,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2911,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2913,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2914,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2918,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2919,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2921,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2922,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2926,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2927,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2929,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2930,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2934,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2935,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2937,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2938,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2942,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2943,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2837,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2944,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2945,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2887,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2948,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2949,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2838,
														"id": 2950,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2828,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3619,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2969
												],
												"declarations": [
													{
														"constant": false,
														"id": 2969,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2995,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2975,
												"initialValue": {
													"arguments": [
														{
															"id": 2971,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2972,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2958,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2973,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2960,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2970,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2953,
															2996
														],
														"referencedDeclaration": 2953,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2977,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2576",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2576",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2976,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3618,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2980,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2956,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2981,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2958,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2982,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2960,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2979,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2992,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2991,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2987,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2990,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2993,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2969,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2967,
												"id": 2994,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2961,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3619,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3004,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3010,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 3009,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3003,
															"id": 3008,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													3012
												],
												"declarations": [
													{
														"constant": false,
														"id": 3012,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3107,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3021,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3015,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3014,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3275,
																			3310
																		],
																		"referencedDeclaration": 3275,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 3106,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3022,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3023,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3024,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3025,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3028,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3032,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3033,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3034,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3035,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3036,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3039,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3043,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3044,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3045,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3046,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3047,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3050,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3054,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3055,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3056,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3057,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3058,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3065,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3066,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3067,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3068,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3069,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3072,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3076,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3078,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3079,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3080,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3083,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3087,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3089,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3090,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3091,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3098,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3100,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3012,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3101,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2999,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3102,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3012,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3099,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3003,
														"id": 3105,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3619,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 3141,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															3120
														],
														"declarations": [
															{
																"constant": false,
																"id": 3120,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3141,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3119,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3124,
														"initialValue": {
															"arguments": [
																{
																	"id": 3122,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3111,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3121,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3108,
																	3143
																],
																"referencedDeclaration": 3108,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3125,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3127,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3114,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3126,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3129,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3120,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3130,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3120,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3132,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3111,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3138,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3118,
														"id": 3140,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3112,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3619,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													3152
												],
												"declarations": [
													{
														"constant": false,
														"id": 3152,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3274,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3154,
												"initialValue": {
													"hexValue": "30",
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 3271,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3169,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 3168,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3163,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3167,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3184,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 3183,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3178,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3182,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3199,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 3198,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3193,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3214,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 3213,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3208,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3212,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3229,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 3228,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3223,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 3226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3224,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3227,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3230,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3244,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 3243,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3238,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 3241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3242,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3245,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3259,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 3258,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3253,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 3256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3254,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3257,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3260,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3270,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 3269,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3265,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3268,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3272,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3152,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3150,
												"id": 3273,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 3144,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3619,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3309,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3308,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															3287
														],
														"declarations": [
															{
																"constant": false,
																"id": 3287,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3308,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3291,
														"initialValue": {
															"arguments": [
																{
																	"id": 3289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3278,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3288,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3275,
																	3310
																],
																"referencedDeclaration": 3275,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3292,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3287,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3294,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3281,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3293,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3297,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3287,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3299,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3278,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3285,
														"id": 3307,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3276,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3279,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 3285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3619,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3438,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3319
												],
												"declarations": [
													{
														"constant": false,
														"id": 3319,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3438,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3321,
												"initialValue": {
													"hexValue": "30",
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3435,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3322,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3338,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3337,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3327,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3332,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3336,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3339,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3355,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3354,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3349,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3353,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3356,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3372,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3371,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3361,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3366,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3367,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3370,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3373,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3389,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3388,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3378,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3383,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3387,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3406,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3405,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3400,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3404,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3407,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3423,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3422,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3417,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3418,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3421,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3424,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3434,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3433,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3429,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3432,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3436,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3319,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3317,
												"id": 3437,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3311,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3619,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3473,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3472,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3451
														],
														"declarations": [
															{
																"constant": false,
																"id": 3451,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3472,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3450,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3455,
														"initialValue": {
															"arguments": [
																{
																	"id": 3453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3452,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3439,
																	3474
																],
																"referencedDeclaration": 3439,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3456,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3451,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3458,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3445,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3457,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3460,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3461,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3451,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3463,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3442,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3469,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3449,
														"id": 3471,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3440,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3443,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3619,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3560,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3483
												],
												"declarations": [
													{
														"constant": false,
														"id": 3483,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3560,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3485,
												"initialValue": {
													"hexValue": "30",
													"id": 3484,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3557,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3500,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3499,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3494,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3498,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3515,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3514,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3506,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3509,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3513,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3516,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3530,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3529,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3524,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3528,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3531,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3545,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3544,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3539,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3540,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3543,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3556,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3555,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3551,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3554,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3558,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3483,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3481,
												"id": 3559,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3475,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3619,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3598,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3597,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3573
														],
														"declarations": [
															{
																"constant": false,
																"id": 3573,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3597,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3577,
														"initialValue": {
															"arguments": [
																{
																	"id": 3575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3564,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3574,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3561,
																	3599
																],
																"referencedDeclaration": 3561,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3573,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3580,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3567,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3579,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3585,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3583,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3573,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3584,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3586,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3588,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3564,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3571,
														"id": 3596,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3562,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3565,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3619,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3617,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3610,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3603,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2576",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2576",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3608,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3607,
												"id": 3616,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3600,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3602,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3601,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3619,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3620,
							"src": "203:14914:16",
							"usedErrors": [
								2571
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3724
						]
					},
					"id": 3725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3622,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3724,
							"linearizedBaseContracts": [
								3724
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3639,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3632,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3625,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3633,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3627,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3636,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3627,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3635,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3631,
												"id": 3638,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3623,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3625,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3624,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3627,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3629,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3724,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3657,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3650,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3643,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3651,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3645,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3654,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3645,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3653,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3649,
												"id": 3656,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3641,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3642,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3644,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3647,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3724,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3701,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3669
												],
												"declarations": [
													{
														"constant": false,
														"id": 3669,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3701,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3668,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3682,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3670,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3661,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3671,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3663,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3673,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3674,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3661,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3675,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3663,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3677,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3680,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3683,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3688,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3669,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3686,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3684,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3693,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3661,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3694,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3663,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3696,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3698,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3667,
												"id": 3700,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3659,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3660,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3662,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3724,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3722,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3721,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3712,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3705,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3716,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3705,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3715,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3705,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3710,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3709,
														"id": 3720,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3703,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3705,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3704,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3724,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3725,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/Dispatch_AI/MarketplaceFinal.sol": {
				"ast": {
					"absolutePath": "contracts/Dispatch_AI/MarketplaceFinal.sol",
					"exportedSymbols": {
						"Address": [
							2178
						],
						"Context": [
							2200
						],
						"Counters": [
							2274
						],
						"ERC165": [
							2553
						],
						"ERC721": [
							1762
						],
						"IConnected": [
							3765
						],
						"IERC165": [
							2565
						],
						"IERC20": [
							427
						],
						"IERC20Permit": [
							463
						],
						"IERC721": [
							1879
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1925
						],
						"IERC721Receiver": [
							1897
						],
						"Marketplace": [
							4690
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"SafeERC20": [
							753
						],
						"Strings": [
							2529
						]
					},
					"id": 4691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4691,
							"sourceUnit": 2275,
							"src": "57:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4691,
							"sourceUnit": 1763,
							"src": "110:57:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4691,
							"sourceUnit": 148,
							"src": "168:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 3730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4691,
							"sourceUnit": 350,
							"src": "221:62:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4691,
							"sourceUnit": 428,
							"src": "284:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4691,
							"sourceUnit": 754,
							"src": "341:65:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IConnected",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3733,
								"nodeType": "StructuredDocumentation",
								"src": "407:67:18",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 3765,
							"linearizedBaseContracts": [
								3765
							],
							"name": "IConnected",
							"nameLocation": "485:10:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IConnected.Token",
									"id": 3742,
									"members": [
										{
											"constant": false,
											"id": 3735,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "530:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3742,
											"src": "525:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3734,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "525:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3737,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "554:3:18",
											"nodeType": "VariableDeclaration",
											"scope": 3742,
											"src": "547:10:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3736,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "547:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3739,
											"mutability": "mutable",
											"name": "capAmount",
											"nameLocation": "572:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3742,
											"src": "567:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3738,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "567:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3741,
											"mutability": "mutable",
											"name": "points",
											"nameLocation": "596:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3742,
											"src": "591:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3740,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "591:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "509:5:18",
									"nodeType": "StructDefinition",
									"scope": 3765,
									"src": "502:107:18",
									"visibility": "public"
								},
								{
									"functionSelector": "9ae38d93",
									"id": 3753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenId",
									"nameLocation": "623:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "645:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3753,
												"src": "637:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "654:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3753,
												"src": "649:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "649:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3748,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "671:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3753,
												"src": "663:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3750,
												"mutability": "mutable",
												"name": "marketPlace",
												"nameLocation": "686:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3753,
												"src": "678:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:62:18"
									},
									"returnParameters": {
										"id": 3752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:18"
									},
									"scope": 3765,
									"src": "614:94:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43d7cce6",
									"id": 3764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "722:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3755,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "739:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "731:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3757,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "748:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "743:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:27:18"
									},
									"returnParameters": {
										"id": 3763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "795:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3764,
												"src": "780:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IConnected.Token[]"
												},
												"typeName": {
													"baseType": {
														"id": 3760,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3759,
															"name": "Token",
															"nameLocations": [
																"780:5:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3742,
															"src": "780:5:18"
														},
														"referencedDeclaration": 3742,
														"src": "780:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$3742_storage_ptr",
															"typeString": "struct IConnected.Token"
														}
													},
													"id": 3761,
													"nodeType": "ArrayTypeName",
													"src": "780:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Token_$3742_storage_$dyn_storage_ptr",
														"typeString": "struct IConnected.Token[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:22:18"
									},
									"scope": 3765,
									"src": "713:89:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4691,
							"src": "475:329:18",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3767,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"858:15:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "858:15:18"
									},
									"id": 3768,
									"nodeType": "InheritanceSpecifier",
									"src": "858:15:18"
								},
								{
									"baseName": {
										"id": 3769,
										"name": "Ownable",
										"nameLocations": [
											"876:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "876:7:18"
									},
									"id": 3770,
									"nodeType": "InheritanceSpecifier",
									"src": "876:7:18"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3766,
								"nodeType": "StructuredDocumentation",
								"src": "805:28:18",
								"text": " @title MarketPlace"
							},
							"fullyImplemented": true,
							"id": 4690,
							"linearizedBaseContracts": [
								4690,
								147,
								2200,
								349
							],
							"name": "Marketplace",
							"nameLocation": "843:11:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3774,
									"libraryName": {
										"id": 3771,
										"name": "SafeERC20",
										"nameLocations": [
											"895:9:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "895:9:18"
									},
									"nodeType": "UsingForDirective",
									"src": "889:27:18",
									"typeName": {
										"id": 3773,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3772,
											"name": "IERC20",
											"nameLocations": [
												"909:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 427,
											"src": "909:6:18"
										},
										"referencedDeclaration": 427,
										"src": "909:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$427",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 3778,
									"libraryName": {
										"id": 3775,
										"name": "Counters",
										"nameLocations": [
											"927:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2274,
										"src": "927:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "921:36:18",
									"typeName": {
										"id": 3777,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3776,
											"name": "Counters.Counter",
											"nameLocations": [
												"940:8:18",
												"949:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2206,
											"src": "940:16:18"
										},
										"referencedDeclaration": 2206,
										"src": "940:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d6cbb202",
									"id": 3781,
									"mutability": "mutable",
									"name": "_nftCount",
									"nameLocation": "986:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4690,
									"src": "962:33:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2206_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3780,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3779,
											"name": "Counters.Counter",
											"nameLocations": [
												"962:8:18",
												"971:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2206,
											"src": "962:16:18"
										},
										"referencedDeclaration": 2206,
										"src": "962:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6617b35d",
									"id": 3784,
									"mutability": "mutable",
									"name": "nftAuctionCount",
									"nameLocation": "1025:15:18",
									"nodeType": "VariableDeclaration",
									"scope": 4690,
									"src": "1001:39:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2206_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3783,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3782,
											"name": "Counters.Counter",
											"nameLocations": [
												"1001:8:18",
												"1010:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2206,
											"src": "1001:16:18"
										},
										"referencedDeclaration": 2206,
										"src": "1001:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3786,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "1068:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 4690,
									"src": "1060:20:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3785,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1060:7:18",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2791a4d0",
									"id": 3793,
									"mutability": "mutable",
									"name": "_idToNFT",
									"nameLocation": "1180:8:18",
									"nodeType": "VariableDeclaration",
									"scope": 4690,
									"src": "1100:88:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT))"
									},
									"typeName": {
										"id": 3792,
										"keyName": "mintContractAddress",
										"keyNameLocation": "1117:19:18",
										"keyType": {
											"id": 3787,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1109:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1100:72:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3791,
											"keyName": "tokenId",
											"keyNameLocation": "1156:7:18",
											"keyType": {
												"id": 3788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1148:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1139:32:18",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
												"typeString": "mapping(uint256 => struct Marketplace.NFT)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3790,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3789,
													"name": "NFT",
													"nameLocations": [
														"1167:3:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3817,
													"src": "1167:3:18"
												},
												"referencedDeclaration": 3817,
												"src": "1167:3:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NFT_$3817_storage_ptr",
													"typeString": "struct Marketplace.NFT"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8d02f792",
									"id": 3798,
									"mutability": "mutable",
									"name": "listCount",
									"nameLocation": "1232:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4690,
									"src": "1194:47:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.addressToken)"
									},
									"typeName": {
										"id": 3797,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3794,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1203:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1194:30:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.addressToken)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3796,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3795,
												"name": "addressToken",
												"nameLocations": [
													"1211:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3829,
												"src": "1211:12:18"
											},
											"referencedDeclaration": 3829,
											"src": "1211:12:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_addressToken_$3829_storage_ptr",
												"typeString": "struct Marketplace.addressToken"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e903868",
									"id": 3802,
									"mutability": "mutable",
									"name": "userListCount",
									"nameLocation": "1278:13:18",
									"nodeType": "VariableDeclaration",
									"scope": 4690,
									"src": "1247:44:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3799,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1256:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1247:23:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3800,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1264:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.NFT",
									"id": 3817,
									"members": [
										{
											"constant": false,
											"id": 3804,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1339:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1331:15:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3803,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3806,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "1364:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1356:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3805,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1356:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3808,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "1388:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1380:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3807,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1380:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3810,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1411:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1403:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3809,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1403:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3812,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "1434:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1426:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3811,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1426:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3814,
											"mutability": "mutable",
											"name": "listTime",
											"nameLocation": "1454:8:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1449:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3813,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1449:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3816,
											"mutability": "mutable",
											"name": "listed",
											"nameLocation": "1477:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3817,
											"src": "1472:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3815,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1472:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "1317:3:18",
									"nodeType": "StructDefinition",
									"scope": 4690,
									"src": "1310:180:18",
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.Token",
									"id": 3824,
									"members": [
										{
											"constant": false,
											"id": 3819,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "1525:3:18",
											"nodeType": "VariableDeclaration",
											"scope": 3824,
											"src": "1518:10:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3818,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1518:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3821,
											"mutability": "mutable",
											"name": "capAmount",
											"nameLocation": "1543:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3824,
											"src": "1538:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3820,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1538:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3823,
											"mutability": "mutable",
											"name": "points",
											"nameLocation": "1567:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3824,
											"src": "1562:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3822,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1562:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "1502:5:18",
									"nodeType": "StructDefinition",
									"scope": 4690,
									"src": "1495:85:18",
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.addressToken",
									"id": 3829,
									"members": [
										{
											"constant": false,
											"id": 3826,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "1622:15:18",
											"nodeType": "VariableDeclaration",
											"scope": 3829,
											"src": "1614:23:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3825,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1614:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3828,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1652:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3829,
											"src": "1647:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3827,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1647:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "addressToken",
									"nameLocation": "1592:12:18",
									"nodeType": "StructDefinition",
									"scope": 4690,
									"src": "1585:81:18",
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.ListedNftTokenId",
									"id": 3838,
									"members": [
										{
											"constant": false,
											"id": 3832,
											"mutability": "mutable",
											"name": "listedData",
											"nameLocation": "1708:10:18",
											"nodeType": "VariableDeclaration",
											"scope": 3838,
											"src": "1704:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$3817_storage_ptr",
												"typeString": "struct Marketplace.NFT"
											},
											"typeName": {
												"id": 3831,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3830,
													"name": "NFT",
													"nameLocations": [
														"1704:3:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3817,
													"src": "1704:3:18"
												},
												"referencedDeclaration": 3817,
												"src": "1704:3:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NFT_$3817_storage_ptr",
													"typeString": "struct Marketplace.NFT"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3835,
											"mutability": "mutable",
											"name": "tokenDetail",
											"nameLocation": "1734:11:18",
											"nodeType": "VariableDeclaration",
											"scope": 3838,
											"src": "1728:17:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Token_$3824_storage_ptr",
												"typeString": "struct Marketplace.Token"
											},
											"typeName": {
												"id": 3834,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3833,
													"name": "Token",
													"nameLocations": [
														"1728:5:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3824,
													"src": "1728:5:18"
												},
												"referencedDeclaration": 3824,
												"src": "1728:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Token_$3824_storage_ptr",
													"typeString": "struct Marketplace.Token"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3837,
											"mutability": "mutable",
											"name": "listCount",
											"nameLocation": "1760:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3838,
											"src": "1755:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3836,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1755:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ListedNftTokenId",
									"nameLocation": "1678:16:18",
									"nodeType": "StructDefinition",
									"scope": 4690,
									"src": "1671:106:18",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3867,
										"nodeType": "Block",
										"src": "1897:384:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2124:43:18",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3849,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3793,
																			"src": "2125:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																			}
																		},
																		"id": 3851,
																		"indexExpression": {
																			"id": 3850,
																			"name": "mintStoneAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3840,
																			"src": "2134:16:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2125:26:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																		}
																	},
																	"id": 3853,
																	"indexExpression": {
																		"id": 3852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3844,
																		"src": "2152:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2125:35:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$3817_storage",
																		"typeString": "struct Marketplace.NFT storage ref"
																	}
																},
																"id": 3854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2161:6:18",
																"memberName": "listed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3816,
																"src": "2125:42:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479204c697374656420496e204d61726b6574706c61636521",
															"id": 3856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:32:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0",
																"typeString": "literal_string \"Already Listed In Marketplace!\""
															},
															"value": "Already Listed In Marketplace!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d35e455355d640ecd6f87fffd98a96ba48c4b7451e8bef085e3ae019359c3a0",
																"typeString": "literal_string \"Already Listed In Marketplace!\""
															}
														],
														"id": 3848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2116:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:85:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3858,
												"nodeType": "ExpressionStatement",
												"src": "2116:85:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3860,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3846,
																"src": "2219:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2229:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2219:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365204d757374204265204174204c65617374203020576569",
															"id": 3863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2232:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a",
																"typeString": "literal_string \"Price Must Be At Least 0 Wei\""
															},
															"value": "Price Must Be At Least 0 Wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea33a63e45e209cdd0e177076fb0667cec5836ce63797a8e1d9cc48a9e4d480a",
																"typeString": "literal_string \"Price Must Be At Least 0 Wei\""
															}
														],
														"id": 3859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2211:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2211:52:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3865,
												"nodeType": "ExpressionStatement",
												"src": "2211:52:18"
											},
											{
												"id": 3866,
												"nodeType": "PlaceholderStatement",
												"src": "2273:1:18"
											}
										]
									},
									"id": 3868,
									"name": "listedRequirements",
									"nameLocation": "1807:18:18",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3840,
												"mutability": "mutable",
												"name": "mintStoneAddress",
												"nameLocation": "1834:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "1826:24:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3842,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1859:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "1851:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3844,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1876:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "1871:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1871:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3846,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1889:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "1884:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3845,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1884:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:71:18"
									},
									"src": "1798:483:18",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "62af98dbc3627e85c5eb929b032d3ce3d6c376652d71b4cca6162a16ef099114",
									"id": 3878,
									"name": "NFTListed",
									"nameLocation": "2304:9:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3870,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2322:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "2314:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3872,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "2338:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "2330:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3874,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2353:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "2345:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3876,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2367:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "2359:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:60:18"
									},
									"src": "2298:76:18"
								},
								{
									"anonymous": false,
									"eventSelector": "8562eb94748e30bb0071e932744ce902b460c683474fcb3bfd567ffa16b1afb2",
									"id": 3888,
									"name": "NFTSold",
									"nameLocation": "2385:7:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3880,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2401:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2393:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3882,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "2417:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2409:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3884,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2432:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2424:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3886,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2446:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2438:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:60:18"
									},
									"src": "2379:74:18"
								},
								{
									"anonymous": false,
									"eventSelector": "fb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e02443603",
									"id": 3898,
									"name": "NFTCancel",
									"nameLocation": "2464:9:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3890,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2482:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3898,
												"src": "2474:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3892,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "2498:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3898,
												"src": "2490:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3894,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2513:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3898,
												"src": "2505:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3896,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2527:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3898,
												"src": "2519:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:60:18"
									},
									"src": "2458:76:18"
								},
								{
									"body": {
										"id": 3912,
										"nodeType": "Block",
										"src": "2634:45:18",
										"statements": [
											{
												"expression": {
													"id": 3910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3908,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3786,
														"src": "2644:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3909,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3902,
														"src": "2659:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:28:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3911,
												"nodeType": "ExpressionStatement",
												"src": "2644:28:18"
											}
										]
									},
									"id": 3913,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3905,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3900,
													"src": "2620:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3906,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3904,
												"name": "Ownable",
												"nameLocations": [
													"2612:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2612:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "2612:21:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3900,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2577:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3913,
												"src": "2569:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3902,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "2598:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3913,
												"src": "2590:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2590:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2568:44:18"
									},
									"returnParameters": {
										"id": 3907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:18"
									},
									"scope": 4690,
									"src": "2557:122:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3992,
										"nodeType": "Block",
										"src": "3076:403:18",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3932,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3781,
															"src": "3086:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3934,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3096:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2232,
														"src": "3086:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2206_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3086:21:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3936,
												"nodeType": "ExpressionStatement",
												"src": "3086:21:18"
											},
											{
												"expression": {
													"id": 3957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3937,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3793,
																"src": "3117:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																}
															},
															"id": 3940,
															"indexExpression": {
																"id": 3938,
																"name": "_mintContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3915,
																"src": "3126:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3117:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
															}
														},
														"id": 3941,
														"indexExpression": {
															"id": 3939,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3921,
															"src": "3141:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3117:33:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3817_storage",
															"typeString": "struct Marketplace.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3943,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3921,
																"src": "3157:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3944,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3917,
																"src": "3166:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3947,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3186:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Marketplace_$4690",
																			"typeString": "contract Marketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Marketplace_$4690",
																			"typeString": "contract Marketplace"
																		}
																	],
																	"id": 3946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3178:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3945,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3178:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 3948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3178:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3949,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3919,
																"src": "3192:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3950,
																		"name": "_nftCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3781,
																		"src": "3199:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$2206_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 3951,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3209:7:18",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2218,
																	"src": "3199:17:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 3952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:19:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3953,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3219:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3225:9:18",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3219:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3235:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3942,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3817,
															"src": "3153:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$3817_storage_ptr_$",
																"typeString": "type(struct Marketplace.NFT storage pointer)"
															}
														},
														"id": 3956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3153:87:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3817_memory_ptr",
															"typeString": "struct Marketplace.NFT memory"
														}
													},
													"src": "3117:123:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$3817_storage",
														"typeString": "struct Marketplace.NFT storage ref"
													}
												},
												"id": 3958,
												"nodeType": "ExpressionStatement",
												"src": "3117:123:18"
											},
											{
												"expression": {
													"id": 3968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3959,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3798,
															"src": "3250:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
															}
														},
														"id": 3963,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3960,
																	"name": "_nftCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3781,
																	"src": "3260:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3961,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3270:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2218,
																"src": "3260:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:19:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3250:30:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_addressToken_$3829_storage",
															"typeString": "struct Marketplace.addressToken storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3965,
																"name": "_mintContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3915,
																"src": "3296:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3966,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3921,
																"src": "3310:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3964,
															"name": "addressToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3829,
															"src": "3283:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_addressToken_$3829_storage_ptr_$",
																"typeString": "type(struct Marketplace.addressToken storage pointer)"
															}
														},
														"id": 3967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3283:36:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_addressToken_$3829_memory_ptr",
															"typeString": "struct Marketplace.addressToken memory"
														}
													},
													"src": "3250:69:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_addressToken_$3829_storage",
														"typeString": "struct Marketplace.addressToken storage ref"
													}
												},
												"id": 3969,
												"nodeType": "ExpressionStatement",
												"src": "3250:69:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3974,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "3364:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3977,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3385:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3377:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3377:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3377:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3979,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3921,
															"src": "3392:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3971,
																	"name": "_mintContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3915,
																	"src": "3336:13:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3970,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "3329:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 3972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3329:21:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 3973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3351:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "3329:34:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3329:72:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3981,
												"nodeType": "ExpressionStatement",
												"src": "3329:72:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3983,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3921,
															"src": "3427:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3984,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "3437:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3987,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3458:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3450:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3450:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3450:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3989,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3919,
															"src": "3465:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3982,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3878,
														"src": "3417:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256)"
														}
													},
													"id": 3990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:55:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3991,
												"nodeType": "EmitStatement",
												"src": "3412:60:18"
											}
										]
									},
									"functionSelector": "f33c4061",
									"id": 3993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3924,
													"name": "_mintContract",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3915,
													"src": "3021:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 3925,
													"name": "userAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3917,
													"src": "3035:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 3926,
													"name": "_tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3921,
													"src": "3047:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 3927,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3919,
													"src": "3056:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 3928,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3923,
												"name": "listedRequirements",
												"nameLocations": [
													"3002:18:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3868,
												"src": "3002:18:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "3002:61:18"
										},
										{
											"id": 3930,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3929,
												"name": "nonReentrant",
												"nameLocations": [
													"3064:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3064:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "3064:12:18"
										}
									],
									"name": "ListNft",
									"nameLocation": "2912:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3915,
												"mutability": "mutable",
												"name": "_mintContract",
												"nameLocation": "2928:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "2920:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3917,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2950:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "2942:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3919,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2970:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "2962:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3921,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2985:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "2977:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2919:75:18"
									},
									"returnParameters": {
										"id": 3931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3076:0:18"
									},
									"scope": 4690,
									"src": "2903:576:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4204,
										"nodeType": "Block",
										"src": "3736:1911:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4003,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3793,
																			"src": "3755:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																			}
																		},
																		"id": 4008,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4004,
																					"name": "listCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3798,
																					"src": "3764:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																					}
																				},
																				"id": 4006,
																				"indexExpression": {
																					"id": 4005,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3995,
																					"src": "3774:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3764:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																					"typeString": "struct Marketplace.addressToken storage ref"
																				}
																			},
																			"id": 4007,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3785:15:18",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3826,
																			"src": "3764:36:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3755:46:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																		}
																	},
																	"id": 4013,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4009,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "3802:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4011,
																			"indexExpression": {
																				"id": 4010,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "3812:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3802:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4012,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3823:7:18",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3828,
																		"src": "3802:28:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3755:76:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$3817_storage",
																		"typeString": "struct Marketplace.NFT storage ref"
																	}
																},
																"id": 4014,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3832:6:18",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3806,
																"src": "3755:83:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 4015,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3842:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3846:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3842:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3755:97:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416e206f666665722063616e6e6f742062757920746869732053656c6c657220212121",
															"id": 4018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:37:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e74a7153f5af84cae9b57a96215644a7c5de60057770127769748e3c599d5d76",
																"typeString": "literal_string \"An offer cannot buy this Seller !!!\""
															},
															"value": "An offer cannot buy this Seller !!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e74a7153f5af84cae9b57a96215644a7c5de60057770127769748e3c599d5d76",
																"typeString": "literal_string \"An offer cannot buy this Seller !!!\""
															}
														],
														"id": 4002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3747:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3747:145:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4020,
												"nodeType": "ExpressionStatement",
												"src": "3747:145:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4022,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3997,
																"src": "3910:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4023,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3793,
																			"src": "3919:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																			}
																		},
																		"id": 4028,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4024,
																					"name": "listCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3798,
																					"src": "3928:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																					}
																				},
																				"id": 4026,
																				"indexExpression": {
																					"id": 4025,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3995,
																					"src": "3938:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3928:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																					"typeString": "struct Marketplace.addressToken storage ref"
																				}
																			},
																			"id": 4027,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3949:15:18",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3826,
																			"src": "3928:36:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3919:46:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																		}
																	},
																	"id": 4033,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4029,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "3966:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4031,
																			"indexExpression": {
																				"id": 4030,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "3976:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3966:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4032,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3987:7:18",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3828,
																		"src": "3966:28:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3919:76:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$3817_storage",
																		"typeString": "struct Marketplace.NFT storage ref"
																	}
																},
																"id": 4034,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3996:5:18",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3810,
																"src": "3919:82:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3910:91:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6720707269636520212121",
															"id": 4036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4004:44:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebd79ccf5ff56656016c69bd918540ff187a66241fdadbd2a4920e6dedce66a4",
																"typeString": "literal_string \"Not enough ether to cover asking price !!!\""
															},
															"value": "Not enough ether to cover asking price !!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebd79ccf5ff56656016c69bd918540ff187a66241fdadbd2a4920e6dedce66a4",
																"typeString": "literal_string \"Not enough ether to cover asking price !!!\""
															}
														],
														"id": 4021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3902:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3902:147:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4038,
												"nodeType": "ExpressionStatement",
												"src": "3902:147:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4048,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4125:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 4047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4117:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4117:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4117:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4132:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4136:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4132:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4052,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3798,
																	"src": "4144:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																	}
																},
																"id": 4054,
																"indexExpression": {
																	"id": 4053,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3995,
																	"src": "4154:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4144:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																	"typeString": "struct Marketplace.addressToken storage ref"
																}
															},
															"id": 4055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4165:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3828,
															"src": "4144:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 4040,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "4066:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4042,
																		"indexExpression": {
																			"id": 4041,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "4076:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4066:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4043,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4087:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "4066:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4039,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "4059:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4059:44:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4104:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "4059:57:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4059:114:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4057,
												"nodeType": "ExpressionStatement",
												"src": "4059:114:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4246:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4250:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4246:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4067,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3798,
																	"src": "4257:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																	}
																},
																"id": 4069,
																"indexExpression": {
																	"id": 4068,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3995,
																	"src": "4267:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4257:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																	"typeString": "struct Marketplace.addressToken storage ref"
																}
															},
															"id": 4070,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4278:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3828,
															"src": "4257:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4071,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "4286:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4076,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4072,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "4295:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4074,
																			"indexExpression": {
																				"id": 4073,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "4305:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4295:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4075,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4316:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "4295:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4286:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4081,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4077,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "4333:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4079,
																		"indexExpression": {
																			"id": 4078,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "4343:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4333:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4080,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4354:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "4333:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4286:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4082,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4363:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3806,
															"src": "4286:83:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4085,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4378:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 4084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4370:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4370:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4370:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 4059,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "4194:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4061,
																		"indexExpression": {
																			"id": 4060,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "4204:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4194:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4062,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4215:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "4194:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4058,
																"name": "IConnected",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3765,
																"src": "4183:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IConnected_$3765_$",
																	"typeString": "type(contract IConnected)"
																}
															},
															"id": 4063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4183:48:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConnected_$3765",
																"typeString": "contract IConnected"
															}
														},
														"id": 4064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4232:13:18",
														"memberName": "updateTokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3753,
														"src": "4183:62:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address,address) external"
														}
													},
													"id": 4087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4183:201:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4088,
												"nodeType": "ExpressionStatement",
												"src": "4183:201:18"
											},
											{
												"assignments": [
													4090
												],
												"declarations": [
													{
														"constant": false,
														"id": 4090,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4402:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 4204,
														"src": "4394:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4394:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4103,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 4091,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3793,
																"src": "4411:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																}
															},
															"id": 4096,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4092,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "4420:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																		}
																	},
																	"id": 4094,
																	"indexExpression": {
																		"id": 4093,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3995,
																		"src": "4430:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4420:20:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																		"typeString": "struct Marketplace.addressToken storage ref"
																	}
																},
																"id": 4095,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4441:15:18",
																"memberName": "contractAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3826,
																"src": "4420:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4411:46:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
															}
														},
														"id": 4101,
														"indexExpression": {
															"expression": {
																"baseExpression": {
																	"id": 4097,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3798,
																	"src": "4458:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																	}
																},
																"id": 4099,
																"indexExpression": {
																	"id": 4098,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3995,
																	"src": "4468:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4458:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																	"typeString": "struct Marketplace.addressToken storage ref"
																}
															},
															"id": 4100,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4479:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3828,
															"src": "4458:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4411:76:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3817_storage",
															"typeString": "struct Marketplace.NFT storage ref"
														}
													},
													"id": 4102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4488:5:18",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3810,
													"src": "4411:82:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4394:99:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5009:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5013:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5009:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4110,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "5020:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4115,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4111,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "5029:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4113,
																			"indexExpression": {
																				"id": 4112,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "5039:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5029:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4114,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5050:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "5029:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5020:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4120,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4116,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "5067:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4118,
																		"indexExpression": {
																			"id": 4117,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "5077:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5067:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4119,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5088:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "5067:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5020:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5097:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3806,
															"src": "5020:83:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4122,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4090,
															"src": "5104:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4105,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3786,
																	"src": "4978:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4104,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "4971:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$427_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4971:20:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														"id": 4107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4992:16:18",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "4971:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$427_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:140:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4124,
												"nodeType": "ExpressionStatement",
												"src": "4971:140:18"
											},
											{
												"expression": {
													"id": 4138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4125,
																	"name": "_idToNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3793,
																	"src": "5121:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																	}
																},
																"id": 4134,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4126,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "5130:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4128,
																		"indexExpression": {
																			"id": 4127,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "5140:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5130:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4129,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5151:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "5130:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5121:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																}
															},
															"id": 4135,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4130,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "5168:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																		}
																	},
																	"id": 4132,
																	"indexExpression": {
																		"id": 4131,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3995,
																		"src": "5178:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5168:20:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																		"typeString": "struct Marketplace.addressToken storage ref"
																	}
																},
																"id": 4133,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5189:7:18",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3828,
																"src": "5168:28:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5121:76:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$3817_storage",
																"typeString": "struct Marketplace.NFT storage ref"
															}
														},
														"id": 4136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5198:6:18",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3816,
														"src": "5121:83:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5205:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5121:89:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4139,
												"nodeType": "ExpressionStatement",
												"src": "5121:89:18"
											},
											{
												"expression": {
													"id": 4157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4140,
																	"name": "_idToNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3793,
																	"src": "5220:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																	}
																},
																"id": 4153,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4141,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "5229:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4145,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 4142,
																					"name": "_nftCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3781,
																					"src": "5239:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$2206_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 4143,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5249:7:18",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2218,
																				"src": "5239:17:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 4144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5239:19:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5229:30:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4146,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5260:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "5229:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5220:56:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																}
															},
															"id": 4154,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4147,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "5277:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																		}
																	},
																	"id": 4151,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 4148,
																				"name": "_nftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3781,
																				"src": "5287:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Counter_$2206_storage",
																					"typeString": "struct Counters.Counter storage ref"
																				}
																			},
																			"id": 4149,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5297:7:18",
																			"memberName": "current",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2218,
																			"src": "5287:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																				"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																			}
																		},
																		"id": 4150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5287:19:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5277:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																		"typeString": "struct Marketplace.addressToken storage ref"
																	}
																},
																"id": 4152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5308:7:18",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3828,
																"src": "5277:38:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5220:96:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$3817_storage",
																"typeString": "struct Marketplace.NFT storage ref"
															}
														},
														"id": 4155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5317:5:18",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3812,
														"src": "5220:102:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4156,
														"name": "listIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3995,
														"src": "5325:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5220:114:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4158,
												"nodeType": "ExpressionStatement",
												"src": "5220:114:18"
											},
											{
												"expression": {
													"id": 4167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4159,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3798,
															"src": "5344:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
															}
														},
														"id": 4161,
														"indexExpression": {
															"id": 4160,
															"name": "listIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3995,
															"src": "5354:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5344:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_addressToken_$3829_storage",
															"typeString": "struct Marketplace.addressToken storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 4162,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3798,
															"src": "5367:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
															}
														},
														"id": 4166,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4163,
																	"name": "_nftCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3781,
																	"src": "5377:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4164,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2218,
																"src": "5377:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5377:19:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5367:30:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_addressToken_$3829_storage",
															"typeString": "struct Marketplace.addressToken storage ref"
														}
													},
													"src": "5344:53:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_addressToken_$3829_storage",
														"typeString": "struct Marketplace.addressToken storage ref"
													}
												},
												"id": 4168,
												"nodeType": "ExpressionStatement",
												"src": "5344:53:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4169,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3781,
															"src": "5407:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5417:9:18",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2260,
														"src": "5407:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2206_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:21:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4173,
												"nodeType": "ExpressionStatement",
												"src": "5407:21:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4175,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "5451:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4180,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4176,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "5460:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4178,
																			"indexExpression": {
																				"id": 4177,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "5470:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5460:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4179,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5481:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "5460:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5451:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4185,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4181,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "5498:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4183,
																		"indexExpression": {
																			"id": 4182,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "5508:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5498:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4184,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5519:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "5498:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5451:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4186,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5528:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3804,
															"src": "5451:84:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4187,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "5537:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4192,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4188,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "5546:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4190,
																			"indexExpression": {
																				"id": 4189,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "5556:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5546:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4191,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5567:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "5546:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5537:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4197,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4193,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "5584:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4195,
																		"indexExpression": {
																			"id": 4194,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3995,
																			"src": "5594:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5584:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4196,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5605:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "5584:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5537:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4198,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5614:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3806,
															"src": "5537:83:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5622:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5626:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5622:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4201,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3997,
															"src": "5634:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4174,
														"name": "NFTSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3888,
														"src": "5443:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256)"
														}
													},
													"id": 4202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5443:197:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4203,
												"nodeType": "EmitStatement",
												"src": "5438:202:18"
											}
										]
									},
									"functionSelector": "556f8084",
									"id": 4205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3999,
												"name": "nonReentrant",
												"nameLocations": [
													"3723:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3723:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "3723:12:18"
										}
									],
									"name": "buyNft",
									"nameLocation": "3679:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3995,
												"mutability": "mutable",
												"name": "listIndex",
												"nameLocation": "3691:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3686:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3686:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3997,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3709:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3701:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3701:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:30:18"
									},
									"returnParameters": {
										"id": 4001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3736:0:18"
									},
									"scope": 4690,
									"src": "3670:1977:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4353,
										"nodeType": "Block",
										"src": "5873:970:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4213,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "5891:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4218,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4214,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "5900:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4216,
																			"indexExpression": {
																				"id": 4215,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4207,
																				"src": "5910:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5900:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4217,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5921:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "5900:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5891:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4223,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4219,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "5938:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4221,
																		"indexExpression": {
																			"id": 4220,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "5948:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5938:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4222,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5959:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "5938:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5891:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5968:6:18",
															"memberName": "listed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3816,
															"src": "5891:83:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204c69737420466972737420212121",
															"id": 4225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5975:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f75c08e287e700392b7ff67e1f3d4c88865d2714af5be39fa99255b28de970c5",
																"typeString": "literal_string \"Please List First !!!\""
															},
															"value": "Please List First !!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f75c08e287e700392b7ff67e1f3d4c88865d2714af5be39fa99255b28de970c5",
																"typeString": "literal_string \"Please List First !!!\""
															}
														],
														"id": 4212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5883:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5883:116:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4227,
												"nodeType": "ExpressionStatement",
												"src": "5883:116:18"
											},
											{
												"expression": {
													"id": 4242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4228,
																	"name": "_idToNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3793,
																	"src": "6009:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																	}
																},
																"id": 4237,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4229,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6018:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4231,
																		"indexExpression": {
																			"id": 4230,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "6028:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6018:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4232,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6039:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "6018:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6009:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																}
															},
															"id": 4238,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4233,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "6056:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																		}
																	},
																	"id": 4235,
																	"indexExpression": {
																		"id": 4234,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4207,
																		"src": "6066:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6056:20:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																		"typeString": "struct Marketplace.addressToken storage ref"
																	}
																},
																"id": 4236,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6077:7:18",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3828,
																"src": "6056:28:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6009:76:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$3817_storage",
																"typeString": "struct Marketplace.NFT storage ref"
															}
														},
														"id": 4239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6086:5:18",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3808,
														"src": "6009:82:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4240,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6094:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6098:6:18",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6094:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6009:95:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4243,
												"nodeType": "ExpressionStatement",
												"src": "6009:95:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4253,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6180:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4690",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 4252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6172:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4251,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6172:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6172:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6187:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6191:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6187:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4257,
																	"name": "listCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3798,
																	"src": "6199:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																	}
																},
																"id": 4259,
																"indexExpression": {
																	"id": 4258,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4207,
																	"src": "6209:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6199:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																	"typeString": "struct Marketplace.addressToken storage ref"
																}
															},
															"id": 4260,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6220:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3828,
															"src": "6199:28:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 4245,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6121:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4247,
																		"indexExpression": {
																			"id": 4246,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "6131:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6121:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4248,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6142:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "6121:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4244,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "6114:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6114:44:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6159:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "6114:57:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6114:114:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4262,
												"nodeType": "ExpressionStatement",
												"src": "6114:114:18"
											},
											{
												"expression": {
													"id": 4276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4263,
																	"name": "_idToNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3793,
																	"src": "6238:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																	}
																},
																"id": 4272,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4264,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6247:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4266,
																		"indexExpression": {
																			"id": 4265,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "6257:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6247:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4267,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6268:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "6247:36:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6238:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																}
															},
															"id": 4273,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4268,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "6285:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																		}
																	},
																	"id": 4270,
																	"indexExpression": {
																		"id": 4269,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4207,
																		"src": "6295:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6285:20:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																		"typeString": "struct Marketplace.addressToken storage ref"
																	}
																},
																"id": 4271,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6306:7:18",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3828,
																"src": "6285:28:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6238:76:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$3817_storage",
																"typeString": "struct Marketplace.NFT storage ref"
															}
														},
														"id": 4274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6315:6:18",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3816,
														"src": "6238:83:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6322:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6238:89:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4277,
												"nodeType": "ExpressionStatement",
												"src": "6238:89:18"
											},
											{
												"expression": {
													"id": 4295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4278,
																	"name": "_idToNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3793,
																	"src": "6337:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																	}
																},
																"id": 4291,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4279,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6346:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4283,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 4280,
																					"name": "_nftCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3781,
																					"src": "6356:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$2206_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 4281,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6366:7:18",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2218,
																				"src": "6356:17:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 4282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6356:19:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6346:30:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4284,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6377:15:18",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3826,
																	"src": "6346:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6337:56:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																}
															},
															"id": 4292,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4285,
																		"name": "listCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "6394:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																		}
																	},
																	"id": 4289,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 4286,
																				"name": "_nftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3781,
																				"src": "6404:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Counter_$2206_storage",
																					"typeString": "struct Counters.Counter storage ref"
																				}
																			},
																			"id": 4287,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6414:7:18",
																			"memberName": "current",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2218,
																			"src": "6404:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																				"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																			}
																		},
																		"id": 4288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6404:19:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6394:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																		"typeString": "struct Marketplace.addressToken storage ref"
																	}
																},
																"id": 4290,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6425:7:18",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3828,
																"src": "6394:38:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6337:96:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$3817_storage",
																"typeString": "struct Marketplace.NFT storage ref"
															}
														},
														"id": 4293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6434:5:18",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3812,
														"src": "6337:102:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4294,
														"name": "listIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4207,
														"src": "6442:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6337:114:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4296,
												"nodeType": "ExpressionStatement",
												"src": "6337:114:18"
											},
											{
												"expression": {
													"id": 4305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4297,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3798,
															"src": "6461:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
															}
														},
														"id": 4299,
														"indexExpression": {
															"id": 4298,
															"name": "listIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4207,
															"src": "6471:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6461:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_addressToken_$3829_storage",
															"typeString": "struct Marketplace.addressToken storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 4300,
															"name": "listCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3798,
															"src": "6484:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
															}
														},
														"id": 4304,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4301,
																	"name": "_nftCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3781,
																	"src": "6494:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6504:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2218,
																"src": "6494:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6494:19:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6484:30:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_addressToken_$3829_storage",
															"typeString": "struct Marketplace.addressToken storage ref"
														}
													},
													"src": "6461:53:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_addressToken_$3829_storage",
														"typeString": "struct Marketplace.addressToken storage ref"
													}
												},
												"id": 4306,
												"nodeType": "ExpressionStatement",
												"src": "6461:53:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4307,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3781,
															"src": "6524:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6534:9:18",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2260,
														"src": "6524:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2206_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6524:21:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4311,
												"nodeType": "ExpressionStatement",
												"src": "6524:21:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4313,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "6570:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4318,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4314,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "6579:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4316,
																			"indexExpression": {
																				"id": 4315,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4207,
																				"src": "6589:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6579:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4317,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6600:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "6579:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6570:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4323,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4319,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6617:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4321,
																		"indexExpression": {
																			"id": 4320,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "6627:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6617:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4322,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6638:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "6617:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6647:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3804,
															"src": "6570:84:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4325,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "6656:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4330,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4326,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "6665:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4328,
																			"indexExpression": {
																				"id": 4327,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4207,
																				"src": "6675:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6665:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4329,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6686:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "6665:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6656:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4335,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4331,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6703:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4333,
																		"indexExpression": {
																			"id": 4332,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "6713:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6703:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4334,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6724:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "6703:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6656:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4336,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6733:6:18",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3806,
															"src": "6656:83:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6741:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6745:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6741:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4339,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3793,
																		"src": "6753:8:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																		}
																	},
																	"id": 4344,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4340,
																				"name": "listCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3798,
																				"src": "6762:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																				}
																			},
																			"id": 4342,
																			"indexExpression": {
																				"id": 4341,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4207,
																				"src": "6772:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6762:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																				"typeString": "struct Marketplace.addressToken storage ref"
																			}
																		},
																		"id": 4343,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6783:15:18",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3826,
																		"src": "6762:36:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6753:46:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																	}
																},
																"id": 4349,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4345,
																			"name": "listCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3798,
																			"src": "6800:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																				"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																			}
																		},
																		"id": 4347,
																		"indexExpression": {
																			"id": 4346,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4207,
																			"src": "6810:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6800:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																			"typeString": "struct Marketplace.addressToken storage ref"
																		}
																	},
																	"id": 4348,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6821:7:18",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3828,
																	"src": "6800:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6753:76:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3817_storage",
																	"typeString": "struct Marketplace.NFT storage ref"
																}
															},
															"id": 4350,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6830:5:18",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3810,
															"src": "6753:82:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4312,
														"name": "NFTCancel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3898,
														"src": "6560:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256)"
														}
													},
													"id": 4351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6560:276:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4352,
												"nodeType": "EmitStatement",
												"src": "6555:281:18"
											}
										]
									},
									"functionSelector": "4e455dbe",
									"id": 4354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4209,
												"name": "nonReentrant",
												"nameLocations": [
													"5860:12:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "5860:12:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "5860:12:18"
										}
									],
									"name": "CancelOffer",
									"nameLocation": "5825:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4207,
												"mutability": "mutable",
												"name": "listIndex",
												"nameLocation": "5842:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 4354,
												"src": "5837:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5837:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:16:18"
									},
									"returnParameters": {
										"id": 4211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5873:0:18"
									},
									"scope": 4690,
									"src": "5816:1027:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4671,
										"nodeType": "Block",
										"src": "7137:1964:18",
										"statements": [
											{
												"assignments": [
													4368
												],
												"declarations": [
													{
														"constant": false,
														"id": 4368,
														"mutability": "mutable",
														"name": "myListedCount",
														"nameLocation": "7152:13:18",
														"nodeType": "VariableDeclaration",
														"scope": 4671,
														"src": "7147:18:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4367,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7147:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4370,
												"initialValue": {
													"hexValue": "30",
													"id": 4369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7168:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7147:22:18"
											},
											{
												"body": {
													"id": 4417,
													"nodeType": "Block",
													"src": "7228:227:18",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 4411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 4396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 4383,
																							"name": "_idToNFT",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3793,
																							"src": "7247:8:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																								"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																							}
																						},
																						"id": 4388,
																						"indexExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 4384,
																									"name": "listCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3798,
																									"src": "7256:9:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																										"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																									}
																								},
																								"id": 4386,
																								"indexExpression": {
																									"id": 4385,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4372,
																									"src": "7266:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7256:12:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																									"typeString": "struct Marketplace.addressToken storage ref"
																								}
																							},
																							"id": 4387,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7269:15:18",
																							"memberName": "contractAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3826,
																							"src": "7256:28:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7247:38:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																							"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																						}
																					},
																					"id": 4393,
																					"indexExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 4389,
																								"name": "listCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3798,
																								"src": "7286:9:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																									"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																								}
																							},
																							"id": 4391,
																							"indexExpression": {
																								"id": 4390,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4372,
																								"src": "7296:1:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7286:12:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																								"typeString": "struct Marketplace.addressToken storage ref"
																							}
																						},
																						"id": 4392,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7299:7:18",
																						"memberName": "tokenId",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3828,
																						"src": "7286:20:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7247:60:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_NFT_$3817_storage",
																						"typeString": "struct Marketplace.NFT storage ref"
																					}
																				},
																				"id": 4394,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7308:6:18",
																				"memberName": "seller",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3806,
																				"src": "7247:67:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 4395,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4356,
																				"src": "7318:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7247:74:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 4397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7246:76:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 4398,
																						"name": "_idToNFT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3793,
																						"src": "7327:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																							"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																						}
																					},
																					"id": 4403,
																					"indexExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 4399,
																								"name": "listCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3798,
																								"src": "7336:9:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																									"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																								}
																							},
																							"id": 4401,
																							"indexExpression": {
																								"id": 4400,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4372,
																								"src": "7346:1:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7336:12:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																								"typeString": "struct Marketplace.addressToken storage ref"
																							}
																						},
																						"id": 4402,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7349:15:18",
																						"memberName": "contractAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3826,
																						"src": "7336:28:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7327:38:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 4408,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 4404,
																							"name": "listCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3798,
																							"src": "7366:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																							}
																						},
																						"id": 4406,
																						"indexExpression": {
																							"id": 4405,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4372,
																							"src": "7376:1:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7366:12:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																							"typeString": "struct Marketplace.addressToken storage ref"
																						}
																					},
																					"id": 4407,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7379:7:18",
																					"memberName": "tokenId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3828,
																					"src": "7366:20:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7327:60:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$3817_storage",
																					"typeString": "struct Marketplace.NFT storage ref"
																				}
																			},
																			"id": 4409,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7388:6:18",
																			"memberName": "listed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3816,
																			"src": "7327:67:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 4410,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7326:69:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7246:149:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4416,
															"nodeType": "IfStatement",
															"src": "7242:203:18",
															"trueBody": {
																"id": 4415,
																"nodeType": "Block",
																"src": "7397:48:18",
																"statements": [
																	{
																		"expression": {
																			"id": 4413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7415:15:18",
																			"subExpression": {
																				"id": 4412,
																				"name": "myListedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4368,
																				"src": "7415:13:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4414,
																		"nodeType": "ExpressionStatement",
																		"src": "7415:15:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4375,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4372,
														"src": "7196:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4376,
																"name": "_nftCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3781,
																"src": "7201:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$2206_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4377,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7211:7:18",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2218,
															"src": "7201:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7201:19:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7196:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4418,
												"initializationExpression": {
													"assignments": [
														4372
													],
													"declarations": [
														{
															"constant": false,
															"id": 4372,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7189:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 4418,
															"src": "7184:6:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4371,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7184:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4374,
													"initialValue": {
														"hexValue": "31",
														"id": 4373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7193:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7184:10:18"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7223:3:18",
														"subExpression": {
															"id": 4380,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4372,
															"src": "7223:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4382,
													"nodeType": "ExpressionStatement",
													"src": "7223:3:18"
												},
												"nodeType": "ForStatement",
												"src": "7179:276:18"
											},
											{
												"assignments": [
													4423
												],
												"declarations": [
													{
														"constant": false,
														"id": 4423,
														"mutability": "mutable",
														"name": "myListedNFT",
														"nameLocation": "7490:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 4671,
														"src": "7464:37:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.ListedNftTokenId[]"
														},
														"typeName": {
															"baseType": {
																"id": 4421,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4420,
																	"name": "ListedNftTokenId",
																	"nameLocations": [
																		"7464:16:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3838,
																	"src": "7464:16:18"
																},
																"referencedDeclaration": 3838,
																"src": "7464:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_storage_ptr",
																	"typeString": "struct Marketplace.ListedNftTokenId"
																}
															},
															"id": 4422,
															"nodeType": "ArrayTypeName",
															"src": "7464:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.ListedNftTokenId[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4430,
												"initialValue": {
													"arguments": [
														{
															"id": 4428,
															"name": "myListedCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4368,
															"src": "7527:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7504:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.ListedNftTokenId memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 4425,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4424,
																	"name": "ListedNftTokenId",
																	"nameLocations": [
																		"7508:16:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3838,
																	"src": "7508:16:18"
																},
																"referencedDeclaration": 3838,
																"src": "7508:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_storage_ptr",
																	"typeString": "struct Marketplace.ListedNftTokenId"
																}
															},
															"id": 4426,
															"nodeType": "ArrayTypeName",
															"src": "7508:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.ListedNftTokenId[]"
															}
														}
													},
													"id": 4429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7504:37:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.ListedNftTokenId memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7464:77:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4431,
														"name": "myListedCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4368,
														"src": "7554:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7571:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7554:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4540,
												"nodeType": "IfStatement",
												"src": "7551:719:18",
												"trueBody": {
													"id": 4539,
													"nodeType": "Block",
													"src": "7573:697:18",
													"statements": [
														{
															"assignments": [
																4435
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4435,
																	"mutability": "mutable",
																	"name": "myListedIndex",
																	"nameLocation": "7592:13:18",
																	"nodeType": "VariableDeclaration",
																	"scope": 4539,
																	"src": "7587:18:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4434,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7587:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4437,
															"initialValue": {
																"hexValue": "30",
																"id": 4436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7608:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7587:22:18"
														},
														{
															"body": {
																"id": 4537,
																"nodeType": "Block",
																"src": "7672:588:18",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 4478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 4463,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 4450,
																										"name": "_idToNFT",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3793,
																										"src": "7695:8:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																											"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																										}
																									},
																									"id": 4455,
																									"indexExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 4451,
																												"name": "listCount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3798,
																												"src": "7704:9:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																													"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																												}
																											},
																											"id": 4453,
																											"indexExpression": {
																												"id": 4452,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4439,
																												"src": "7714:1:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7704:12:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																												"typeString": "struct Marketplace.addressToken storage ref"
																											}
																										},
																										"id": 4454,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7717:15:18",
																										"memberName": "contractAddress",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3826,
																										"src": "7704:28:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7695:38:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																										"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																									}
																								},
																								"id": 4460,
																								"indexExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 4456,
																											"name": "listCount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3798,
																											"src": "7734:9:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																												"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																											}
																										},
																										"id": 4458,
																										"indexExpression": {
																											"id": 4457,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4439,
																											"src": "7744:1:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7734:12:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																											"typeString": "struct Marketplace.addressToken storage ref"
																										}
																									},
																									"id": 4459,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7747:7:18",
																									"memberName": "tokenId",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3828,
																									"src": "7734:20:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7695:60:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_NFT_$3817_storage",
																									"typeString": "struct Marketplace.NFT storage ref"
																								}
																							},
																							"id": 4461,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7756:6:18",
																							"memberName": "seller",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3806,
																							"src": "7695:67:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 4462,
																							"name": "_to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4356,
																							"src": "7766:3:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "7695:74:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 4464,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7694:76:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"expression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 4465,
																									"name": "_idToNFT",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3793,
																									"src": "7775:8:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																										"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																									}
																								},
																								"id": 4470,
																								"indexExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 4466,
																											"name": "listCount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3798,
																											"src": "7784:9:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																												"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																											}
																										},
																										"id": 4468,
																										"indexExpression": {
																											"id": 4467,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4439,
																											"src": "7794:1:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7784:12:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																											"typeString": "struct Marketplace.addressToken storage ref"
																										}
																									},
																									"id": 4469,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7797:15:18",
																									"memberName": "contractAddress",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 3826,
																									"src": "7784:28:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7775:38:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																									"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																								}
																							},
																							"id": 4475,
																							"indexExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 4471,
																										"name": "listCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3798,
																										"src": "7814:9:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																											"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																										}
																									},
																									"id": 4473,
																									"indexExpression": {
																										"id": 4472,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4439,
																										"src": "7824:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7814:12:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																										"typeString": "struct Marketplace.addressToken storage ref"
																									}
																								},
																								"id": 4474,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7827:7:18",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3828,
																								"src": "7814:20:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7775:60:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_NFT_$3817_storage",
																								"typeString": "struct Marketplace.NFT storage ref"
																							}
																						},
																						"id": 4476,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7836:6:18",
																						"memberName": "listed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3816,
																						"src": "7775:67:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 4477,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7774:69:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "7694:149:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 4536,
																		"nodeType": "IfStatement",
																		"src": "7690:556:18",
																		"trueBody": {
																			"id": 4535,
																			"nodeType": "Block",
																			"src": "7845:401:18",
																			"statements": [
																				{
																					"assignments": [
																						4484
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 4484,
																							"mutability": "mutable",
																							"name": "connectedNft",
																							"nameLocation": "7893:12:18",
																							"nodeType": "VariableDeclaration",
																							"scope": 4535,
																							"src": "7867:38:18",
																							"stateVariable": false,
																							"storageLocation": "memory",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IConnected.Token[]"
																							},
																							"typeName": {
																								"baseType": {
																									"id": 4482,
																									"nodeType": "UserDefinedTypeName",
																									"pathNode": {
																										"id": 4481,
																										"name": "IConnected.Token",
																										"nameLocations": [
																											"7867:10:18",
																											"7878:5:18"
																										],
																										"nodeType": "IdentifierPath",
																										"referencedDeclaration": 3742,
																										"src": "7867:16:18"
																									},
																									"referencedDeclaration": 3742,
																									"src": "7867:16:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Token_$3742_storage_ptr",
																										"typeString": "struct IConnected.Token"
																									}
																								},
																								"id": 4483,
																								"nodeType": "ArrayTypeName",
																								"src": "7867:18:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Token_$3742_storage_$dyn_storage_ptr",
																									"typeString": "struct IConnected.Token[]"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 4498,
																					"initialValue": {
																						"arguments": [
																							{
																								"id": 4492,
																								"name": "_to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4356,
																								"src": "7958:3:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 4493,
																										"name": "listCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3798,
																										"src": "7962:9:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																											"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																										}
																									},
																									"id": 4495,
																									"indexExpression": {
																										"id": 4494,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4439,
																										"src": "7972:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7962:12:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																										"typeString": "struct Marketplace.addressToken storage ref"
																									}
																								},
																								"id": 4496,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7975:7:18",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3828,
																								"src": "7962:20:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"baseExpression": {
																												"id": 4486,
																												"name": "listCount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3798,
																												"src": "7919:9:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																													"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																												}
																											},
																											"id": 4488,
																											"indexExpression": {
																												"id": 4487,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4439,
																												"src": "7929:1:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7919:12:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																												"typeString": "struct Marketplace.addressToken storage ref"
																											}
																										},
																										"id": 4489,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7932:15:18",
																										"memberName": "contractAddress",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3826,
																										"src": "7919:28:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 4485,
																									"name": "IConnected",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3765,
																									"src": "7908:10:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IConnected_$3765_$",
																										"typeString": "type(contract IConnected)"
																									}
																								},
																								"id": 4490,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7908:40:18",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IConnected_$3765",
																									"typeString": "contract IConnected"
																								}
																							},
																							"id": 4491,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7949:8:18",
																							"memberName": "getToken",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3764,
																							"src": "7908:49:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr_$",
																								"typeString": "function (address,uint256) view external returns (struct IConnected.Token memory[] memory)"
																							}
																						},
																						"id": 4497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7908:75:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IConnected.Token memory[] memory"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "7867:116:18"
																				},
																				{
																					"expression": {
																						"id": 4530,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 4499,
																								"name": "myListedNFT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4423,
																								"src": "8005:11:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Marketplace.ListedNftTokenId memory[] memory"
																								}
																							},
																							"id": 4501,
																							"indexExpression": {
																								"id": 4500,
																								"name": "myListedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4435,
																								"src": "8017:13:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "8005:26:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_memory_ptr",
																								"typeString": "struct Marketplace.ListedNftTokenId memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"baseExpression": {
																											"id": 4503,
																											"name": "_idToNFT",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3793,
																											"src": "8051:8:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																												"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																											}
																										},
																										"id": 4508,
																										"indexExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 4504,
																													"name": "listCount",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 3798,
																													"src": "8060:9:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																														"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																													}
																												},
																												"id": 4506,
																												"indexExpression": {
																													"id": 4505,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4439,
																													"src": "8070:1:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "8060:12:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																													"typeString": "struct Marketplace.addressToken storage ref"
																												}
																											},
																											"id": 4507,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8073:15:18",
																											"memberName": "contractAddress",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3826,
																											"src": "8060:28:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8051:38:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																											"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																										}
																									},
																									"id": 4513,
																									"indexExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 4509,
																												"name": "listCount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3798,
																												"src": "8090:9:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																													"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																												}
																											},
																											"id": 4511,
																											"indexExpression": {
																												"id": 4510,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4439,
																												"src": "8100:1:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "8090:12:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																												"typeString": "struct Marketplace.addressToken storage ref"
																											}
																										},
																										"id": 4512,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8103:7:18",
																										"memberName": "tokenId",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3828,
																										"src": "8090:20:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8051:60:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_NFT_$3817_storage",
																										"typeString": "struct Marketplace.NFT storage ref"
																									}
																								},
																								{
																									"arguments": [
																										{
																											"expression": {
																												"baseExpression": {
																													"id": 4515,
																													"name": "connectedNft",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4484,
																													"src": "8118:12:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																														"typeString": "struct IConnected.Token memory[] memory"
																													}
																												},
																												"id": 4517,
																												"indexExpression": {
																													"hexValue": "30",
																													"id": 4516,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "8131:1:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_0_by_1",
																														"typeString": "int_const 0"
																													},
																													"value": "0"
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "8118:15:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Token_$3742_memory_ptr",
																													"typeString": "struct IConnected.Token memory"
																												}
																											},
																											"id": 4518,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8134:3:18",
																											"memberName": "uri",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3737,
																											"src": "8118:19:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_string_memory_ptr",
																												"typeString": "string memory"
																											}
																										},
																										{
																											"expression": {
																												"baseExpression": {
																													"id": 4519,
																													"name": "connectedNft",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4484,
																													"src": "8138:12:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																														"typeString": "struct IConnected.Token memory[] memory"
																													}
																												},
																												"id": 4521,
																												"indexExpression": {
																													"hexValue": "30",
																													"id": 4520,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "8151:1:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_0_by_1",
																														"typeString": "int_const 0"
																													},
																													"value": "0"
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "8138:15:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Token_$3742_memory_ptr",
																													"typeString": "struct IConnected.Token memory"
																												}
																											},
																											"id": 4522,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8154:9:18",
																											"memberName": "capAmount",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3739,
																											"src": "8138:25:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										{
																											"expression": {
																												"baseExpression": {
																													"id": 4523,
																													"name": "connectedNft",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4484,
																													"src": "8164:12:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																														"typeString": "struct IConnected.Token memory[] memory"
																													}
																												},
																												"id": 4525,
																												"indexExpression": {
																													"hexValue": "30",
																													"id": 4524,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "8177:1:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_0_by_1",
																														"typeString": "int_const 0"
																													},
																													"value": "0"
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "8164:15:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Token_$3742_memory_ptr",
																													"typeString": "struct IConnected.Token memory"
																												}
																											},
																											"id": 4526,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8180:6:18",
																											"memberName": "points",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 3741,
																											"src": "8164:22:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_string_memory_ptr",
																												"typeString": "string memory"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 4514,
																										"name": "Token",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3824,
																										"src": "8112:5:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_struct$_Token_$3824_storage_ptr_$",
																											"typeString": "type(struct Marketplace.Token storage pointer)"
																										}
																									},
																									"id": 4527,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "structConstructorCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "8112:75:18",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Token_$3824_memory_ptr",
																										"typeString": "struct Marketplace.Token memory"
																									}
																								},
																								{
																									"id": 4528,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4439,
																									"src": "8188:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_struct$_NFT_$3817_storage",
																										"typeString": "struct Marketplace.NFT storage ref"
																									},
																									{
																										"typeIdentifier": "t_struct$_Token_$3824_memory_ptr",
																										"typeString": "struct Marketplace.Token memory"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 4502,
																								"name": "ListedNftTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3838,
																								"src": "8034:16:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_struct$_ListedNftTokenId_$3838_storage_ptr_$",
																									"typeString": "type(struct Marketplace.ListedNftTokenId storage pointer)"
																								}
																							},
																							"id": 4529,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "structConstructorCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8034:156:18",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_memory_ptr",
																								"typeString": "struct Marketplace.ListedNftTokenId memory"
																							}
																						},
																						"src": "8005:185:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_memory_ptr",
																							"typeString": "struct Marketplace.ListedNftTokenId memory"
																						}
																					},
																					"id": 4531,
																					"nodeType": "ExpressionStatement",
																					"src": "8005:185:18"
																				},
																				{
																					"expression": {
																						"id": 4533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "8212:15:18",
																						"subExpression": {
																							"id": 4532,
																							"name": "myListedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4435,
																							"src": "8212:13:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 4534,
																					"nodeType": "ExpressionStatement",
																					"src": "8212:15:18"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4442,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4439,
																	"src": "7640:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 4443,
																			"name": "_nftCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3781,
																			"src": "7645:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$2206_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 4444,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7655:7:18",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2218,
																		"src": "7645:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 4445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7645:19:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7640:24:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4538,
															"initializationExpression": {
																"assignments": [
																	4439
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 4439,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "7633:1:18",
																		"nodeType": "VariableDeclaration",
																		"scope": 4538,
																		"src": "7628:6:18",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 4438,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "7628:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 4441,
																"initialValue": {
																	"hexValue": "31",
																	"id": 4440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7637:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7628:10:18"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 4448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7667:3:18",
																	"subExpression": {
																		"id": 4447,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4439,
																		"src": "7667:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 4449,
																"nodeType": "ExpressionStatement",
																"src": "7667:3:18"
															},
															"nodeType": "ForStatement",
															"src": "7623:637:18"
														}
													]
												}
											},
											{
												"assignments": [
													4542
												],
												"declarations": [
													{
														"constant": false,
														"id": 4542,
														"mutability": "mutable",
														"name": "listNft",
														"nameLocation": "8284:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 4671,
														"src": "8279:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4541,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8279:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4549,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 4543,
																		"name": "_nftCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3781,
																		"src": "8295:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$2206_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 4544,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8305:7:18",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2218,
																	"src": "8295:17:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 4545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8295:19:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 4546,
																"name": "myListedCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4368,
																"src": "8315:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8295:33:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 4548,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8294:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8279:50:18"
											},
											{
												"assignments": [
													4554
												],
												"declarations": [
													{
														"constant": false,
														"id": 4554,
														"mutability": "mutable",
														"name": "listedNFT",
														"nameLocation": "8365:9:18",
														"nodeType": "VariableDeclaration",
														"scope": 4671,
														"src": "8339:35:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.ListedNftTokenId[]"
														},
														"typeName": {
															"baseType": {
																"id": 4552,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4551,
																	"name": "ListedNftTokenId",
																	"nameLocations": [
																		"8339:16:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3838,
																	"src": "8339:16:18"
																},
																"referencedDeclaration": 3838,
																"src": "8339:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_storage_ptr",
																	"typeString": "struct Marketplace.ListedNftTokenId"
																}
															},
															"id": 4553,
															"nodeType": "ArrayTypeName",
															"src": "8339:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.ListedNftTokenId[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4561,
												"initialValue": {
													"arguments": [
														{
															"id": 4559,
															"name": "listNft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4542,
															"src": "8400:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8377:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.ListedNftTokenId memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 4556,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4555,
																	"name": "ListedNftTokenId",
																	"nameLocations": [
																		"8381:16:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3838,
																	"src": "8381:16:18"
																},
																"referencedDeclaration": 3838,
																"src": "8381:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_storage_ptr",
																	"typeString": "struct Marketplace.ListedNftTokenId"
																}
															},
															"id": 4557,
															"nodeType": "ArrayTypeName",
															"src": "8381:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.ListedNftTokenId[]"
															}
														}
													},
													"id": 4560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8377:31:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.ListedNftTokenId memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8339:69:18"
											},
											{
												"assignments": [
													4563
												],
												"declarations": [
													{
														"constant": false,
														"id": 4563,
														"mutability": "mutable",
														"name": "listedIndex",
														"nameLocation": "8423:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 4671,
														"src": "8418:16:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4562,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8418:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4565,
												"initialValue": {
													"hexValue": "30",
													"id": 4564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8437:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8418:20:18"
											},
											{
												"body": {
													"id": 4665,
													"nodeType": "Block",
													"src": "8497:558:18",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 4606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 4591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 4578,
																							"name": "_idToNFT",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3793,
																							"src": "8516:8:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																								"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																							}
																						},
																						"id": 4583,
																						"indexExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 4579,
																									"name": "listCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3798,
																									"src": "8525:9:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																										"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																									}
																								},
																								"id": 4581,
																								"indexExpression": {
																									"id": 4580,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4567,
																									"src": "8535:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8525:12:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																									"typeString": "struct Marketplace.addressToken storage ref"
																								}
																							},
																							"id": 4582,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8538:15:18",
																							"memberName": "contractAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3826,
																							"src": "8525:28:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8516:38:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																							"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																						}
																					},
																					"id": 4588,
																					"indexExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 4584,
																								"name": "listCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3798,
																								"src": "8555:9:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																									"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																								}
																							},
																							"id": 4586,
																							"indexExpression": {
																								"id": 4585,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4567,
																								"src": "8565:1:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8555:12:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																								"typeString": "struct Marketplace.addressToken storage ref"
																							}
																						},
																						"id": 4587,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8568:7:18",
																						"memberName": "tokenId",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3828,
																						"src": "8555:20:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8516:60:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_NFT_$3817_storage",
																						"typeString": "struct Marketplace.NFT storage ref"
																					}
																				},
																				"id": 4589,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8577:6:18",
																				"memberName": "seller",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3806,
																				"src": "8516:67:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"id": 4590,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4356,
																				"src": "8587:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "8516:74:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 4592,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8515:76:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 4593,
																						"name": "_idToNFT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3793,
																						"src": "8596:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																							"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																						}
																					},
																					"id": 4598,
																					"indexExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 4594,
																								"name": "listCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3798,
																								"src": "8605:9:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																									"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																								}
																							},
																							"id": 4596,
																							"indexExpression": {
																								"id": 4595,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4567,
																								"src": "8615:1:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8605:12:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																								"typeString": "struct Marketplace.addressToken storage ref"
																							}
																						},
																						"id": 4597,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8618:15:18",
																						"memberName": "contractAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3826,
																						"src": "8605:28:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8596:38:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 4603,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 4599,
																							"name": "listCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3798,
																							"src": "8635:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																							}
																						},
																						"id": 4601,
																						"indexExpression": {
																							"id": 4600,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4567,
																							"src": "8645:1:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8635:12:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																							"typeString": "struct Marketplace.addressToken storage ref"
																						}
																					},
																					"id": 4602,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8648:7:18",
																					"memberName": "tokenId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3828,
																					"src": "8635:20:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8596:60:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$3817_storage",
																					"typeString": "struct Marketplace.NFT storage ref"
																				}
																			},
																			"id": 4604,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8657:6:18",
																			"memberName": "listed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3816,
																			"src": "8596:67:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 4605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8595:69:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8515:149:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4664,
															"nodeType": "IfStatement",
															"src": "8511:534:18",
															"trueBody": {
																"id": 4663,
																"nodeType": "Block",
																"src": "8666:379:18",
																"statements": [
																	{
																		"assignments": [
																			4612
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 4612,
																				"mutability": "mutable",
																				"name": "connectedNft",
																				"nameLocation": "8710:12:18",
																				"nodeType": "VariableDeclaration",
																				"scope": 4663,
																				"src": "8684:38:18",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IConnected.Token[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 4610,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 4609,
																							"name": "IConnected.Token",
																							"nameLocations": [
																								"8684:10:18",
																								"8695:5:18"
																							],
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 3742,
																							"src": "8684:16:18"
																						},
																						"referencedDeclaration": 3742,
																						"src": "8684:16:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Token_$3742_storage_ptr",
																							"typeString": "struct IConnected.Token"
																						}
																					},
																					"id": 4611,
																					"nodeType": "ArrayTypeName",
																					"src": "8684:18:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Token_$3742_storage_$dyn_storage_ptr",
																						"typeString": "struct IConnected.Token[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 4626,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 4620,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4356,
																					"src": "8775:3:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 4621,
																							"name": "listCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3798,
																							"src": "8779:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																							}
																						},
																						"id": 4623,
																						"indexExpression": {
																							"id": 4622,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4567,
																							"src": "8789:1:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8779:12:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																							"typeString": "struct Marketplace.addressToken storage ref"
																						}
																					},
																					"id": 4624,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8792:7:18",
																					"memberName": "tokenId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3828,
																					"src": "8779:20:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 4614,
																									"name": "listCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3798,
																									"src": "8736:9:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																										"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																									}
																								},
																								"id": 4616,
																								"indexExpression": {
																									"id": 4615,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4567,
																									"src": "8746:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8736:12:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																									"typeString": "struct Marketplace.addressToken storage ref"
																								}
																							},
																							"id": 4617,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8749:15:18",
																							"memberName": "contractAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3826,
																							"src": "8736:28:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 4613,
																						"name": "IConnected",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3765,
																						"src": "8725:10:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IConnected_$3765_$",
																							"typeString": "type(contract IConnected)"
																						}
																					},
																					"id": 4618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8725:40:18",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IConnected_$3765",
																						"typeString": "contract IConnected"
																					}
																				},
																				"id": 4619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8766:8:18",
																				"memberName": "getToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3764,
																				"src": "8725:49:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr_$",
																					"typeString": "function (address,uint256) view external returns (struct IConnected.Token memory[] memory)"
																				}
																			},
																			"id": 4625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8725:75:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IConnected.Token memory[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8684:116:18"
																	},
																	{
																		"expression": {
																			"id": 4658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 4627,
																					"name": "listedNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4554,
																					"src": "8818:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.ListedNftTokenId memory[] memory"
																					}
																				},
																				"id": 4629,
																				"indexExpression": {
																					"id": 4628,
																					"name": "listedIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4563,
																					"src": "8828:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8818:22:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_memory_ptr",
																					"typeString": "struct Marketplace.ListedNftTokenId memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"baseExpression": {
																								"id": 4631,
																								"name": "_idToNFT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3793,
																								"src": "8860:8:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																									"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																								}
																							},
																							"id": 4636,
																							"indexExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 4632,
																										"name": "listCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3798,
																										"src": "8869:9:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																											"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																										}
																									},
																									"id": 4634,
																									"indexExpression": {
																										"id": 4633,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4567,
																										"src": "8879:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8869:12:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																										"typeString": "struct Marketplace.addressToken storage ref"
																									}
																								},
																								"id": 4635,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8882:15:18",
																								"memberName": "contractAddress",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3826,
																								"src": "8869:28:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8860:38:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																								"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
																							}
																						},
																						"id": 4641,
																						"indexExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 4637,
																									"name": "listCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3798,
																									"src": "8899:9:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_addressToken_$3829_storage_$",
																										"typeString": "mapping(uint256 => struct Marketplace.addressToken storage ref)"
																									}
																								},
																								"id": 4639,
																								"indexExpression": {
																									"id": 4638,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4567,
																									"src": "8909:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8899:12:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_addressToken_$3829_storage",
																									"typeString": "struct Marketplace.addressToken storage ref"
																								}
																							},
																							"id": 4640,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8912:7:18",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3828,
																							"src": "8899:20:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8860:60:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_NFT_$3817_storage",
																							"typeString": "struct Marketplace.NFT storage ref"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 4643,
																										"name": "connectedNft",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4612,
																										"src": "8927:12:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct IConnected.Token memory[] memory"
																										}
																									},
																									"id": 4645,
																									"indexExpression": {
																										"hexValue": "30",
																										"id": 4644,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8940:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8927:15:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Token_$3742_memory_ptr",
																										"typeString": "struct IConnected.Token memory"
																									}
																								},
																								"id": 4646,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8943:3:18",
																								"memberName": "uri",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3737,
																								"src": "8927:19:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 4647,
																										"name": "connectedNft",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4612,
																										"src": "8947:12:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct IConnected.Token memory[] memory"
																										}
																									},
																									"id": 4649,
																									"indexExpression": {
																										"hexValue": "30",
																										"id": 4648,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8960:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8947:15:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Token_$3742_memory_ptr",
																										"typeString": "struct IConnected.Token memory"
																									}
																								},
																								"id": 4650,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8963:9:18",
																								"memberName": "capAmount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3739,
																								"src": "8947:25:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 4651,
																										"name": "connectedNft",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4612,
																										"src": "8973:12:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Token_$3742_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct IConnected.Token memory[] memory"
																										}
																									},
																									"id": 4653,
																									"indexExpression": {
																										"hexValue": "30",
																										"id": 4652,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8986:1:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8973:15:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Token_$3742_memory_ptr",
																										"typeString": "struct IConnected.Token memory"
																									}
																								},
																								"id": 4654,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8989:6:18",
																								"memberName": "points",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3741,
																								"src": "8973:22:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 4642,
																							"name": "Token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3824,
																							"src": "8921:5:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_struct$_Token_$3824_storage_ptr_$",
																								"typeString": "type(struct Marketplace.Token storage pointer)"
																							}
																						},
																						"id": 4655,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "structConstructorCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8921:75:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Token_$3824_memory_ptr",
																							"typeString": "struct Marketplace.Token memory"
																						}
																					},
																					{
																						"id": 4656,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4567,
																						"src": "8997:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_struct$_NFT_$3817_storage",
																							"typeString": "struct Marketplace.NFT storage ref"
																						},
																						{
																							"typeIdentifier": "t_struct$_Token_$3824_memory_ptr",
																							"typeString": "struct Marketplace.Token memory"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 4630,
																					"name": "ListedNftTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3838,
																					"src": "8843:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_ListedNftTokenId_$3838_storage_ptr_$",
																						"typeString": "type(struct Marketplace.ListedNftTokenId storage pointer)"
																					}
																				},
																				"id": 4657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8843:156:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_memory_ptr",
																					"typeString": "struct Marketplace.ListedNftTokenId memory"
																				}
																			},
																			"src": "8818:181:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_memory_ptr",
																				"typeString": "struct Marketplace.ListedNftTokenId memory"
																			}
																		},
																		"id": 4659,
																		"nodeType": "ExpressionStatement",
																		"src": "8818:181:18"
																	},
																	{
																		"expression": {
																			"id": 4661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "9017:13:18",
																			"subExpression": {
																				"id": 4660,
																				"name": "listedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4563,
																				"src": "9017:11:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4662,
																		"nodeType": "ExpressionStatement",
																		"src": "9017:13:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4570,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4567,
														"src": "8465:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4571,
																"name": "_nftCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3781,
																"src": "8470:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$2206_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4572,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8480:7:18",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2218,
															"src": "8470:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8470:19:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8465:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4666,
												"initializationExpression": {
													"assignments": [
														4567
													],
													"declarations": [
														{
															"constant": false,
															"id": 4567,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8458:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 4666,
															"src": "8453:6:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4566,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8453:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4569,
													"initialValue": {
														"hexValue": "31",
														"id": 4568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8462:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8453:10:18"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8492:3:18",
														"subExpression": {
															"id": 4575,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4567,
															"src": "8492:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4577,
													"nodeType": "ExpressionStatement",
													"src": "8492:3:18"
												},
												"nodeType": "ForStatement",
												"src": "8448:607:18"
											},
											{
												"expression": {
													"components": [
														{
															"id": 4667,
															"name": "myListedNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4423,
															"src": "9072:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Marketplace.ListedNftTokenId memory[] memory"
															}
														},
														{
															"id": 4668,
															"name": "listedNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4554,
															"src": "9084:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Marketplace.ListedNftTokenId memory[] memory"
															}
														}
													],
													"id": 4669,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9071:23:18",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr_$",
														"typeString": "tuple(struct Marketplace.ListedNftTokenId memory[] memory,struct Marketplace.ListedNftTokenId memory[] memory)"
													}
												},
												"functionReturnParameters": 4366,
												"id": 4670,
												"nodeType": "Return",
												"src": "9064:30:18"
											}
										]
									},
									"functionSelector": "0d909886",
									"id": 4672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getListedNfts",
									"nameLocation": "7036:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4356,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7058:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "7050:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7049:13:18"
									},
									"returnParameters": {
										"id": 4366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "7084:25:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.ListedNftTokenId[]"
												},
												"typeName": {
													"baseType": {
														"id": 4359,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4358,
															"name": "ListedNftTokenId",
															"nameLocations": [
																"7084:16:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3838,
															"src": "7084:16:18"
														},
														"referencedDeclaration": 3838,
														"src": "7084:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_storage_ptr",
															"typeString": "struct Marketplace.ListedNftTokenId"
														}
													},
													"id": 4360,
													"nodeType": "ArrayTypeName",
													"src": "7084:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.ListedNftTokenId[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "7110:25:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.ListedNftTokenId[]"
												},
												"typeName": {
													"baseType": {
														"id": 4363,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4362,
															"name": "ListedNftTokenId",
															"nameLocations": [
																"7110:16:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3838,
															"src": "7110:16:18"
														},
														"referencedDeclaration": 3838,
														"src": "7110:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedNftTokenId_$3838_storage_ptr",
															"typeString": "struct Marketplace.ListedNftTokenId"
														}
													},
													"id": 4364,
													"nodeType": "ArrayTypeName",
													"src": "7110:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3838_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.ListedNftTokenId[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7083:53:18"
									},
									"scope": 4690,
									"src": "7027:2074:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4688,
										"nodeType": "Block",
										"src": "9199:69:18",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 4681,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3793,
																"src": "9216:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Marketplace.NFT storage ref))"
																}
															},
															"id": 4683,
															"indexExpression": {
																"id": 4682,
																"name": "mintContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4674,
																"src": "9225:19:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9216:29:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3817_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.NFT storage ref)"
															}
														},
														"id": 4685,
														"indexExpression": {
															"id": 4684,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4676,
															"src": "9246:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9216:38:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3817_storage",
															"typeString": "struct Marketplace.NFT storage ref"
														}
													},
													"id": 4686,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9255:6:18",
													"memberName": "listed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3816,
													"src": "9216:45:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4680,
												"id": 4687,
												"nodeType": "Return",
												"src": "9209:52:18"
											}
										]
									},
									"functionSelector": "293c6ae1",
									"id": 4689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nftDetail",
									"nameLocation": "9115:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4674,
												"mutability": "mutable",
												"name": "mintContractAddress",
												"nameLocation": "9133:19:18",
												"nodeType": "VariableDeclaration",
												"scope": 4689,
												"src": "9125:27:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9125:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4676,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9158:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 4689,
												"src": "9153:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9153:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9124:42:18"
									},
									"returnParameters": {
										"id": 4680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4679,
												"mutability": "mutable",
												"name": "onList",
												"nameLocation": "9192:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 4689,
												"src": "9187:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9187:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9186:13:18"
									},
									"scope": 4690,
									"src": "9106:162:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4691,
							"src": "834:8437:18",
							"usedErrors": [
								13,
								18,
								480,
								1933,
								1938,
								1941
							],
							"usedEvents": [
								24,
								3878,
								3888,
								3898
							]
						}
					],
					"src": "32:9239:18"
				},
				"id": 18
			}
		}
	}
}